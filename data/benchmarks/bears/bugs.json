[
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1569,
        "numberRunning": 1570,
        "numberFailing": 0,
        "numberErroring": 1,
        "failures": [
          {
            "failureName": "com.fasterxml.jackson.databind.JsonMappingException",
            "isError": true,
            "occurrences": 1
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/FasterXML/jackson-databind/176912167",
      "failingClasses": [
        {
          "numberPassing": 0,
          "numberRunning": 1,
          "testClass": "com.fasterxml.jackson.databind.creators.Creator1476Test",
          "numberFailing": 0,
          "numberErroring": 1,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "com.fasterxml.jackson.databind.JsonMappingException",
          "testMethod": "testConstructorChoice",
          "testClass": "com.fasterxml.jackson.databind.creators.Creator1476Test",
          "detail": "Could not find creator property with name 'intField' (in class com.fasterxml.jackson.databind.creators.Creator1476Test$SimplePojo)\n at [Source: { \"intField\": 1, \"stringField\": \"foo\" }; line: 1, column: 1]",
          "isError": true
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/190405643",
        "date": "Jan 9, 2017 10:46:51 PM",
        "id": 190405643
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/176912167",
        "date": "Nov 18, 2016 4:09:26 AM",
        "id": 176912167
      }
    },
    "repository": {
      "name": "FasterXML-jackson-databind",
      "url": "https://github.com/FasterXML/jackson-databind",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 3038937
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/d44600d3750e5dba9fac68aee7248ed2a80a2225",
        "sha": "d44600d3750e5dba9fac68aee7248ed2a80a2225",
        "branchName": "2.7",
        "date": "Jan 9, 2017 10:42:27 PM",
        "repoName": "FasterXML/jackson-databind"
      },
      "buggyBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/002a9a3e9b98ebebf53e43aed0536d3c50851c84",
        "sha": "002a9a3e9b98ebebf53e43aed0536d3c50851c84",
        "branchName": "2.7",
        "date": "Nov 18, 2016 4:05:35 AM",
        "repoName": "FasterXML/jackson-databind"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/FasterXML-jackson-databind-176912167-190405643\n",
    "projectMetrics": {
      "numberSourceFiles": 389,
      "numberLibrariesFailingModule": 14,
      "numberTestFiles": 362,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 30,
        "numberDeleted": 24
      }
    },
    "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java b/src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java\nindex 8e38f5decd..a530e4b20e 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java\n@@ -162,36 +162,39 @@ public class CreatorCollector\n             SettableBeanProperty[] injectables)\n     {\n         if (creator.getParameterType(0).isCollectionLikeType()) {\n-            verifyNonDup(creator, C_ARRAY_DELEGATE, explicit);\n-            _arrayDelegateArgs = injectables;\n+            if (verifyNonDup(creator, C_ARRAY_DELEGATE, explicit)) {\n+                _arrayDelegateArgs = injectables;\n+            }\n         } else {\n-            verifyNonDup(creator, C_DELEGATE, explicit);\n-            _delegateArgs = injectables;\n+            if (verifyNonDup(creator, C_DELEGATE, explicit)) {\n+                _delegateArgs = injectables;\n+            }\n         }\n     }\n     \n     public void addPropertyCreator(AnnotatedWithParams creator, boolean explicit,\n             SettableBeanProperty[] properties)\n     {\n-        verifyNonDup(creator, C_PROPS, explicit);\n-        // Better ensure we have no duplicate names either...\n-        if (properties.length > 1) {\n-            HashMap<String,Integer> names = new HashMap<String,Integer>();\n-            for (int i = 0, len = properties.length; i < len; ++i) {\n-                String name = properties[i].getName();\n-                /* [Issue-13]: Need to consider Injectables, which may not have\n-                 *   a name at all, and need to be skipped\n-                 */\n-                if (name.length() == 0 && properties[i].getInjectableValueId() != null) {\n-                    continue;\n-                }\n-                Integer old = names.put(name, Integer.valueOf(i));\n-                if (old != null) {\n-                    throw new IllegalArgumentException(\"Duplicate creator property \\\"\"+name+\"\\\" (index \"+old+\" vs \"+i+\")\");\n+        if (verifyNonDup(creator, C_PROPS, explicit)) {\n+            // Better ensure we have no duplicate names either...\n+            if (properties.length > 1) {\n+                HashMap<String,Integer> names = new HashMap<String,Integer>();\n+                for (int i = 0, len = properties.length; i < len; ++i) {\n+                    String name = properties[i].getName();\n+                    /* [Issue-13]: Need to consider Injectables, which may not have\n+                     *   a name at all, and need to be skipped\n+                     */\n+                    if (name.length() == 0 && properties[i].getInjectableValueId() != null) {\n+                        continue;\n+                    }\n+                    Integer old = names.put(name, Integer.valueOf(i));\n+                    if (old != null) {\n+                        throw new IllegalArgumentException(\"Duplicate creator property \\\"\"+name+\"\\\" (index \"+old+\" vs \"+i+\")\");\n+                    }\n                 }\n             }\n+            _propertyBasedArgs = properties;\n         }\n-        _propertyBasedArgs = properties;\n     }\n \n     public void addIncompeteParameter(AnnotatedParameter parameter) {\n@@ -293,7 +296,10 @@ public class CreatorCollector\n         return member;\n     }\n \n-    protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit)\n+    /**\n+     * @return True if specified Creator is to be used\n+     */\n+    protected boolean verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit)\n     {\n         final int mask = (1 << typeIndex);\n         _hasNonDefaultCreator = true;\n@@ -301,11 +307,10 @@ public class CreatorCollector\n         // already had an explicitly marked one?\n         if (oldOne != null) {\n             boolean verify;\n-\n             if ((_explicitCreators & mask) != 0) { // already had explicitly annotated, leave as-is\n                 // but skip, if new one not annotated\n                 if (!explicit) {\n-                    return;\n+                    return false;\n                 }\n                 // both explicit: verify\n                 verify = true;\n@@ -327,7 +332,7 @@ public class CreatorCollector\n                 // otherwise, which one to choose?\n                 if (newType.isAssignableFrom(oldType)) {\n                     // new type more generic, use old\n-                    return;\n+                    return false;\n                 }\n                 // new type more specific, use it\n             }\n@@ -336,6 +341,7 @@ public class CreatorCollector\n             _explicitCreators |= mask;\n         }\n         _creators[typeIndex] = _fixAccess(newOne);\n+        return true;\n     }\n \n     /*\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 172426376,
        "hostName": "local",
        "totalMemory": 396886016,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 6:44:09 PM",
      "projectRootPomPath": "./workspace/FasterXML/jackson-databind/176912167/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            51
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 51
        },
        "testing": {
          "stepDurations": [
            31
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 31
        },
        "cloning": {
          "stepDurations": [
            57
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 57
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 6:41:02 PM",
      "totalDuration": 181
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1570,
        "numberRunning": 1571,
        "numberFailing": 0,
        "numberErroring": 1,
        "failures": [
          {
            "failureName": "com.fasterxml.jackson.databind.JsonMappingException",
            "isError": true,
            "occurrences": 1
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/FasterXML/jackson-databind/190405643",
      "failingClasses": [
        {
          "numberPassing": 30,
          "numberRunning": 31,
          "testClass": "com.fasterxml.jackson.databind.deser.TestMapDeserialization",
          "numberFailing": 0,
          "numberErroring": 1,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "com.fasterxml.jackson.databind.JsonMappingException",
          "testMethod": "testcharSequenceKeyMap",
          "testClass": "com.fasterxml.jackson.databind.deser.TestMapDeserialization",
          "detail": "Can not find a (Map) Key deserializer for type [simple type, class java.lang.CharSequence]\n at [Source: {\"a\":\"b\"}; line: 1, column: 1]",
          "isError": true
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/195044059",
        "date": "Jan 25, 2017 4:02:17 AM",
        "id": 195044059
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/190405643",
        "date": "Jan 9, 2017 10:46:51 PM",
        "id": 190405643
      }
    },
    "repository": {
      "name": "FasterXML-jackson-databind",
      "url": "https://github.com/FasterXML/jackson-databind",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 3038937
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/23a733207bc88a06ee486a5896b7b0c4ebbbfef4",
        "sha": "23a733207bc88a06ee486a5896b7b0c4ebbbfef4",
        "branchName": "2.7",
        "date": "Jan 25, 2017 3:58:19 AM",
        "repoName": "FasterXML/jackson-databind"
      },
      "buggyBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/d44600d3750e5dba9fac68aee7248ed2a80a2225",
        "sha": "d44600d3750e5dba9fac68aee7248ed2a80a2225",
        "branchName": "2.7",
        "date": "Jan 9, 2017 10:42:27 PM",
        "repoName": "FasterXML/jackson-databind"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/FasterXML-jackson-databind-190405643-195044059\n",
    "projectMetrics": {
      "numberSourceFiles": 389,
      "numberLibrariesFailingModule": 14,
      "numberTestFiles": 362,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 1,
        "numberDeleted": 1
      }
    },
    "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/std/StdKeyDeserializer.java b/src/main/java/com/fasterxml/jackson/databind/deser/std/StdKeyDeserializer.java\nindex d95749a215..8bddce4d7d 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/StdKeyDeserializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/StdKeyDeserializer.java\n@@ -72,7 +72,7 @@ public class StdKeyDeserializer extends KeyDeserializer\n         int kind;\n \n         // first common types:\n-        if (raw == String.class || raw == Object.class) {\n+        if (raw == String.class || raw == Object.class || raw == CharSequence.class) {\n             return StringKD.forType(raw);\n         } else if (raw == UUID.class) {\n             kind = TYPE_UUID;\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 201092024,
        "hostName": "local",
        "totalMemory": 363331584,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 6:36:31 PM",
      "projectRootPomPath": "./workspace/FasterXML/jackson-databind/190405643/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            49
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 49
        },
        "testing": {
          "stepDurations": [
            36
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 36
        },
        "cloning": {
          "stepDurations": [
            54
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 54
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 6:32:50 PM",
      "totalDuration": 214
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1680,
        "numberRunning": 1681,
        "numberFailing": 0,
        "numberErroring": 1,
        "failures": [
          {
            "failureName": "java.util.NoSuchElementException",
            "isError": true,
            "occurrences": 1
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/FasterXML/jackson-databind/190406891",
      "failingClasses": [
        {
          "numberPassing": 8,
          "numberRunning": 9,
          "testClass": "com.fasterxml.jackson.databind.struct.TestUnwrapped",
          "numberFailing": 0,
          "numberErroring": 1,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.util.NoSuchElementException",
          "testMethod": "testCaseInsensitiveUnwrap",
          "testClass": "com.fasterxml.jackson.databind.struct.TestUnwrapped",
          "detail": "No entry 'businessAddress' found, can't remove",
          "isError": true
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/190505536",
        "date": "Jan 10, 2017 6:42:40 AM",
        "id": 190505536
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/190406891",
        "date": "Jan 9, 2017 10:50:43 PM",
        "id": 190406891
      }
    },
    "repository": {
      "name": "FasterXML-jackson-databind",
      "url": "https://github.com/FasterXML/jackson-databind",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 3038937
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/d7155de6c37db3301b92b755bd0a02388f7dd07f",
        "sha": "d7155de6c37db3301b92b755bd0a02388f7dd07f",
        "branchName": "2.8",
        "date": "Jan 10, 2017 6:38:36 AM",
        "repoName": "FasterXML/jackson-databind"
      },
      "buggyBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/7fe2d4f1aaab61e41f31f792f8a988157a34b34c",
        "sha": "7fe2d4f1aaab61e41f31f792f8a988157a34b34c",
        "branchName": "2.8",
        "date": "Jan 9, 2017 10:45:35 PM",
        "repoName": "FasterXML/jackson-databind"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/FasterXML-jackson-databind-190406891-190505536\n",
    "projectMetrics": {
      "numberSourceFiles": 397,
      "numberLibrariesFailingModule": 17,
      "numberTestFiles": 382,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 6,
        "numberDeleted": 3
      }
    },
    "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java b/src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java\nindex fd30aaf827..8031ee0aab 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java\n@@ -92,7 +92,7 @@ public class BeanPropertyMap\n     protected void init(Collection<SettableBeanProperty> props)\n     {\n         _size = props.size();\n-        \n+\n         // First: calculate size of primary hash area\n         final int hashSize = findSize(_size);\n         _hashMask = hashSize-1;\n@@ -423,7 +423,8 @@ System.err.println(\"And new propr #\"+slot+\" '\"+key+\"'\");\n      * Specialized method for removing specified existing entry.\n      * NOTE: entry MUST exist, otherwise an exception is thrown.\n      */\n-    public void remove(SettableBeanProperty propToRm) {\n+    public void remove(SettableBeanProperty propToRm)\n+    {\n         ArrayList<SettableBeanProperty> props = new ArrayList<SettableBeanProperty>(_size);\n         String key = getPropertyName(propToRm);\n         boolean found = false;\n@@ -434,7 +435,9 @@ System.err.println(\"And new propr #\"+slot+\" '\"+key+\"'\");\n                 continue;\n             }\n             if (!found) {\n-                found = key.equals(prop.getName());\n+                // 09-Jan-2017, tatu: Important: must check name slot and NOT property name,\n+                //   as only former is lower-case in case-insensitive case\n+                found = key.equals(_hashArea[i-1]);\n                 if (found) {\n                     // need to leave a hole here\n                     _propsInOrder[_findFromOrdered(prop)] = null;\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 129327328,
        "hostName": "local",
        "totalMemory": 364380160,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 6:40:49 PM",
      "projectRootPomPath": "./workspace/FasterXML/jackson-databind/190406891/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            43
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 43
        },
        "testing": {
          "stepDurations": [
            29
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 29
        },
        "cloning": {
          "stepDurations": [
            48
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 48
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 6:37:52 PM",
      "totalDuration": 172
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1571,
        "numberRunning": 1572,
        "numberFailing": 0,
        "numberErroring": 1,
        "failures": [
          {
            "failureName": "com.fasterxml.jackson.databind.JsonMappingException",
            "isError": true,
            "occurrences": 1
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/FasterXML/jackson-databind/195430379",
      "failingClasses": [
        {
          "numberPassing": 0,
          "numberRunning": 1,
          "testClass": "com.fasterxml.jackson.databind.creators.CreatorWithObjectIdTest",
          "numberFailing": 0,
          "numberErroring": 1,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "com.fasterxml.jackson.databind.JsonMappingException",
          "testMethod": "testObjectIdWithCreator",
          "testClass": "com.fasterxml.jackson.databind.creators.CreatorWithObjectIdTest",
          "detail": "No _idValue when handleIdValue called, on instance of com.fasterxml.jackson.databind.creators.CreatorWithObjectIdTest$A\n at [Source: {\"id\":\"123\",\"name\":\"A\"}; line: 1, column: 23]",
          "isError": true
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/198387397",
        "date": "Feb 4, 2017 7:57:01 PM",
        "id": 198387397
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/195430379",
        "date": "Jan 26, 2017 6:16:10 AM",
        "id": 195430379
      }
    },
    "repository": {
      "name": "FasterXML-jackson-databind",
      "url": "https://github.com/FasterXML/jackson-databind",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 3038937
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/04cb1a27e0fe60fe9bab64dfe7f36b3f7649ba0c",
        "sha": "04cb1a27e0fe60fe9bab64dfe7f36b3f7649ba0c",
        "branchName": "2.7",
        "date": "Feb 4, 2017 7:52:58 PM",
        "repoName": "FasterXML/jackson-databind"
      },
      "buggyBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/16d77253d2ba0ed293a12013e459d56420a7d056",
        "sha": "16d77253d2ba0ed293a12013e459d56420a7d056",
        "branchName": "2.7",
        "date": "Jan 26, 2017 6:12:01 AM",
        "repoName": "FasterXML/jackson-databind"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/FasterXML-jackson-databind-195430379-198387397\n",
    "projectMetrics": {
      "numberSourceFiles": 389,
      "numberLibrariesFailingModule": 14,
      "numberTestFiles": 364,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 4,
        "numberDeleted": 4
      }
    },
    "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java b/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java\nindex 0e2b874907..d0ebabafb4 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java\n@@ -373,6 +373,10 @@ public class BeanDeserializer\n         for (; t == JsonToken.FIELD_NAME; t = p.nextToken()) {\n             String propName = p.getCurrentName();\n             p.nextToken(); // to point to value\n+            // Object Id property?\n+            if (buffer.readIdProperty(propName)) {\n+                continue;\n+            }\n             // creator property?\n             SettableBeanProperty creatorProp = creator.findCreatorProperty(propName);\n             if (creatorProp != null) {\n@@ -405,10 +409,6 @@ public class BeanDeserializer\n                 }\n                 continue;\n             }\n-            // Object Id property?\n-            if (buffer.readIdProperty(propName)) {\n-                continue;\n-            }\n             // regular property? needs buffering\n             SettableBeanProperty prop = _beanProperties.find(propName);\n             if (prop != null) {\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 230270312,
        "hostName": "local",
        "totalMemory": 353894400,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 6:37:09 AM",
      "projectRootPomPath": "./workspace/FasterXML/jackson-databind/195430379/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            49
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 49
        },
        "testing": {
          "stepDurations": [
            41
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 41
        },
        "cloning": {
          "stepDurations": [
            51
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 51
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 6:33:23 AM",
      "totalDuration": 219
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1686,
        "numberRunning": 1688,
        "numberFailing": 0,
        "numberErroring": 2,
        "failures": [
          {
            "failureName": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException",
            "isError": true,
            "occurrences": 2
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/FasterXML/jackson-databind/195646489",
      "failingClasses": [
        {
          "numberPassing": 0,
          "numberRunning": 2,
          "testClass": "com.fasterxml.jackson.databind.deser.ReadOrWriteOnlyTest",
          "numberFailing": 0,
          "numberErroring": 2,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException",
          "testMethod": "testReadOnly935",
          "testClass": "com.fasterxml.jackson.databind.deser.ReadOrWriteOnlyTest",
          "detail": "Unrecognized field \"fullName\" (class com.fasterxml.jackson.databind.deser.ReadOrWriteOnlyTest$Pojo935), not marked as ignorable (2 known properties: \"lastName\", \"firstName\"])\n at [Source: {\"firstName\":\"Foo\",\"lastName\":\"Bar\",\"fullName\":\"Foo Bar\"}; line: 1, column: 49] (through reference chain: com.fasterxml.jackson.databind.deser.ReadOrWriteOnlyTest$Pojo935[\"fullName\"])",
          "isError": true
        },
        {
          "failureName": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException",
          "testMethod": "testReadOnlyAndWriteOnly",
          "testClass": "com.fasterxml.jackson.databind.deser.ReadOrWriteOnlyTest",
          "detail": "Unrecognized field \"x\" (class com.fasterxml.jackson.databind.deser.ReadOrWriteOnlyTest$ReadXWriteY), not marked as ignorable (one known property: \"y\"])\n at [Source: {\"x\":5, \"y\":6}; line: 1, column: 7] (through reference chain: com.fasterxml.jackson.databind.deser.ReadOrWriteOnlyTest$ReadXWriteY[\"x\"])",
          "isError": true
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/195752461",
        "date": "Jan 27, 2017 4:16:49 AM",
        "id": 195752461
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/195646489",
        "date": "Jan 26, 2017 8:42:57 PM",
        "id": 195646489
      }
    },
    "repository": {
      "name": "FasterXML-jackson-databind",
      "url": "https://github.com/FasterXML/jackson-databind",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 3038937
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/4d34006e4d8a566c6c64a3a0e04c17e50d63bb82",
        "sha": "4d34006e4d8a566c6c64a3a0e04c17e50d63bb82",
        "branchName": "2.8",
        "date": "Jan 27, 2017 4:12:29 AM",
        "repoName": "FasterXML/jackson-databind"
      },
      "buggyBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/2bb770bcd4cbc0c0c3ede86cedd4a602e328e2f6",
        "sha": "2bb770bcd4cbc0c0c3ede86cedd4a602e328e2f6",
        "branchName": "2.8",
        "date": "Jan 26, 2017 8:38:42 PM",
        "repoName": "FasterXML/jackson-databind"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/FasterXML-jackson-databind-195646489-195752461\n",
    "projectMetrics": {
      "numberSourceFiles": 397,
      "numberLibrariesFailingModule": 17,
      "numberTestFiles": 384,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 2,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 7,
        "numberDeleted": 5
      }
    },
    "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java b/src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java\nindex f542d84f36..fd6a613e6d 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java\n@@ -4,6 +4,7 @@ import java.lang.reflect.Modifier;\n import java.util.*;\n \n import com.fasterxml.jackson.annotation.JsonAnySetter;\n+import com.fasterxml.jackson.annotation.JsonProperty.Access;\n import com.fasterxml.jackson.databind.*;\n import com.fasterxml.jackson.databind.cfg.HandlerInstantiator;\n import com.fasterxml.jackson.databind.cfg.MapperConfig;\n@@ -727,10 +728,14 @@ public class POJOPropertiesCollector\n \n         while (it.hasNext()) {\n             POJOPropertyBuilder prop = it.next();\n-            prop.removeNonVisible(inferMutators);\n+            // 26-Jan-2017, tatu: [databind#935]: need to denote removal of\n+            Access acc = prop.removeNonVisible(inferMutators);\n+            if (!_forSerialization && (acc == Access.READ_ONLY)) {\n+                _collectIgnorals(prop.getName());\n+            }\n         }\n     }\n-        \n+\n     /**\n      * Helper method called to add explicitly ignored properties to a list\n      * of known ignored properties; this helps in proper reporting of\ndiff --git a/src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.java b/src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.java\nindex 954f5dd462..b9a403c13d 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.java\n@@ -641,7 +641,7 @@ public class POJOPropertyBuilder\n      * @param inferMutators Whether mutators can be \"pulled in\" by visible\n      *    accessors or not. \n      */\n-    public void removeNonVisible(boolean inferMutators)\n+    public JsonProperty.Access removeNonVisible(boolean inferMutators)\n     {\n         /* 07-Jun-2015, tatu: With 2.6, we will allow optional definition\n          *  of explicit access type for property; if not \"AUTO\", it will\n@@ -680,6 +680,7 @@ public class POJOPropertyBuilder\n                 _setters = _removeNonVisible(_setters);\n             }\n         }\n+        return acc;\n     }\n \n     /**\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 162681048,
        "hostName": "local",
        "totalMemory": 358088704,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 6:21:13 PM",
      "projectRootPomPath": "./workspace/FasterXML/jackson-databind/195646489/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            54
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 54
        },
        "testing": {
          "stepDurations": [
            41
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 41
        },
        "cloning": {
          "stepDurations": [
            57
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 57
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 6:17:46 PM",
      "totalDuration": 201
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1690,
        "numberRunning": 1692,
        "numberFailing": 1,
        "numberErroring": 1,
        "failures": [
          {
            "failureName": "junit.framework.AssertionFailedError",
            "isError": false,
            "occurrences": 1
          },
          {
            "failureName": "com.fasterxml.jackson.databind.exc.InvalidFormatException",
            "isError": true,
            "occurrences": 1
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/FasterXML/jackson-databind/195752461",
      "failingClasses": [
        {
          "numberPassing": 27,
          "numberRunning": 28,
          "testClass": "com.fasterxml.jackson.databind.deser.EnumDeserializationTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        },
        {
          "numberPassing": 3,
          "numberRunning": 4,
          "testClass": "com.fasterxml.jackson.databind.deser.EnumDefaultReadTest",
          "numberFailing": 0,
          "numberErroring": 1,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "junit.framework.AssertionFailedError",
          "testMethod": "testNumbersToEnums",
          "testClass": "com.fasterxml.jackson.databind.deser.EnumDeserializationTest",
          "detail": "Expected an exception with one of substrings ([value not one of declared Enum]): got one with message \"Can not deserialize value of type com.fasterxml.jackson.databind.deser.EnumDeserializationTest$TestEnum from number 1: not allowed to deserialize Enum value out of number: disable DeserializationConfig.DeserializationFeature.FAIL_ON_NUMBERS_FOR_ENUMS to allow\n at [Source: \"1\"; line: 1, column: 1]\"",
          "isError": false
        },
        {
          "failureName": "com.fasterxml.jackson.databind.exc.InvalidFormatException",
          "testMethod": "testWithFailOnNumbersAndReadUnknownAsDefault",
          "testClass": "com.fasterxml.jackson.databind.deser.EnumDefaultReadTest",
          "detail": "Can not deserialize value of type com.fasterxml.jackson.databind.deser.EnumDefaultReadTest$SimpleEnumWithDefault from number 0: not allowed to deserialize Enum value out of number: disable DeserializationConfig.DeserializationFeature.FAIL_ON_NUMBERS_FOR_ENUMS to allow\n at [Source: \"0\"; line: 1, column: 1]",
          "isError": true
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/195777970",
        "date": "Jan 27, 2017 7:43:20 AM",
        "id": 195777970
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/195752461",
        "date": "Jan 27, 2017 4:16:49 AM",
        "id": 195752461
      }
    },
    "repository": {
      "name": "FasterXML-jackson-databind",
      "url": "https://github.com/FasterXML/jackson-databind",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 3038937
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/ff441e82825ea48d28baee6ae7f0f705ff421def",
        "sha": "ff441e82825ea48d28baee6ae7f0f705ff421def",
        "branchName": "2.8",
        "date": "Jan 27, 2017 7:39:00 AM",
        "repoName": "FasterXML/jackson-databind"
      },
      "buggyBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/4d34006e4d8a566c6c64a3a0e04c17e50d63bb82",
        "sha": "4d34006e4d8a566c6c64a3a0e04c17e50d63bb82",
        "branchName": "2.8",
        "date": "Jan 27, 2017 4:12:29 AM",
        "repoName": "FasterXML/jackson-databind"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/FasterXML-jackson-databind-195752461-195777970\n",
    "projectMetrics": {
      "numberSourceFiles": 397,
      "numberLibrariesFailingModule": 17,
      "numberTestFiles": 385,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 7,
        "numberDeleted": 2
      }
    },
    "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/std/EnumDeserializer.java b/src/main/java/com/fasterxml/jackson/databind/deser/std/EnumDeserializer.java\nindex 679c41799d..3c65723aa5 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/EnumDeserializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/EnumDeserializer.java\n@@ -167,17 +167,12 @@ public class EnumDeserializer\n             if (ctxt.isEnabled(DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT)) {\n                 return null;\n             }\n-        } else {\n-            // [databind#149]: Allow use of 'String' indexes as well\n+        } else if (!ctxt.isEnabled(DeserializationFeature.FAIL_ON_NUMBERS_FOR_ENUMS)) {\n+            // [databind#149]: Allow use of 'String' indexes as well -- unless prohibited (as per above)\n             char c = name.charAt(0);\n             if (c >= '0' && c <= '9') {\n                 try {\n                     int index = Integer.parseInt(name);\n-                    if (ctxt.isEnabled(DeserializationFeature.FAIL_ON_NUMBERS_FOR_ENUMS)) {\n-                        return ctxt.handleWeirdNumberValue(_enumClass(), index,\n-                                \"not allowed to deserialize Enum value out of number: disable DeserializationConfig.DeserializationFeature.FAIL_ON_NUMBERS_FOR_ENUMS to allow\"\n-                                );\n-                    }\n                     if (index >= 0 && index < _enumsByIndex.length) {\n                         return _enumsByIndex[index];\n                     }\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 146750432,
        "hostName": "local",
        "totalMemory": 337117184,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 6:20:25 PM",
      "projectRootPomPath": "./workspace/FasterXML/jackson-databind/195752461/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            42
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 42
        },
        "testing": {
          "stepDurations": [
            30
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 30
        },
        "cloning": {
          "stepDurations": [
            59
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 59
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 6:16:48 PM",
      "totalDuration": 210
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1693,
        "numberRunning": 1694,
        "numberFailing": 0,
        "numberErroring": 1,
        "failures": [
          {
            "failureName": "com.fasterxml.jackson.databind.JsonMappingException",
            "isError": true,
            "occurrences": 1
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/FasterXML/jackson-databind/203042777",
      "failingClasses": [
        {
          "numberPassing": 13,
          "numberRunning": 14,
          "testClass": "com.fasterxml.jackson.databind.ser.TestMapSerialization",
          "numberFailing": 0,
          "numberErroring": 1,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "com.fasterxml.jackson.databind.JsonMappingException",
          "testMethod": "testConcurrentMaps",
          "testClass": "com.fasterxml.jackson.databind.ser.TestMapSerialization",
          "detail": "[no message for java.lang.NullPointerException]",
          "isError": true
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/203306015",
        "date": "Feb 20, 2017 3:55:22 AM",
        "id": 203306015
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/203042777",
        "date": "Feb 19, 2017 12:18:29 AM",
        "id": 203042777
      }
    },
    "repository": {
      "name": "FasterXML-jackson-databind",
      "url": "https://github.com/FasterXML/jackson-databind",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 3038937
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/64967c410514ec8a94bb11bb26d6a37fafafc14b",
        "sha": "64967c410514ec8a94bb11bb26d6a37fafafc14b",
        "branchName": "2.8",
        "date": "Feb 20, 2017 3:47:15 AM",
        "repoName": "FasterXML/jackson-databind"
      },
      "buggyBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/dc02ceac1c3d0939ddf8692f62be52da0e1a242b",
        "sha": "dc02ceac1c3d0939ddf8692f62be52da0e1a242b",
        "branchName": "2.8",
        "date": "Feb 19, 2017 12:14:01 AM",
        "repoName": "FasterXML/jackson-databind"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/FasterXML-jackson-databind-203042777-203306015\n",
    "projectMetrics": {
      "numberSourceFiles": 397,
      "numberLibrariesFailingModule": 17,
      "numberTestFiles": 385,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 3,
        "numberDeleted": 17
      }
    },
    "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/ser/std/MapSerializer.java b/src/main/java/com/fasterxml/jackson/databind/ser/std/MapSerializer.java\nindex dbba25d3ea..a3af8cc9a4 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/MapSerializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/MapSerializer.java\n@@ -952,7 +952,9 @@ public class MapSerializer\n         }\n         // [databind#1411]: TreeMap does not like null key... (although note that\n         //   check above should prevent this code from being called in that case)\n-        if (input.containsKey(null)) {\n+        // [databind#153]: but, apparently, some custom Maps do manage hit this\n+        //   problem.\n+        if (_hasNullKey(input)) {\n             TreeMap<Object,Object> result = new TreeMap<Object,Object>();\n             for (Map.Entry<?,?> entry : input.entrySet()) {\n                 Object key = entry.getKey();\n@@ -967,6 +969,22 @@ public class MapSerializer\n         return new TreeMap<Object,Object>(input);\n     }\n \n+    /**\n+     * @since 2.8.7\n+     */\n+    protected boolean _hasNullKey(Map<?,?> input) {\n+        // 19-Feb-2017, tatu: As per [databind#1513] there are many cases where `null`\n+        //   keys are not allowed, and even attempt to check for presence can cause\n+        //   problems. Without resorting to external sorting (and internal API change),\n+        //   or custom sortable Map implementation (more code) we can try black- or\n+        //   white-listing (that is; either skip known problem cases; or only apply for\n+        //   known good cases).\n+        //   While my first instinct was to do black-listing (remove Hashtable and ConcurrentHashMap),\n+        //   all in all it is probably better to just white list `HashMap` (and its sub-classes).\n+        \n+        return (input instanceof HashMap) && input.containsKey(null);\n+    }\n+    \n     protected void _writeNullKeyedEntry(JsonGenerator gen, SerializerProvider provider,\n             Object suppressableValue, Object value) throws IOException\n     {\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 249634072,
        "hostName": "local",
        "totalMemory": 340787200,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 6:31:00 AM",
      "projectRootPomPath": "./workspace/FasterXML/jackson-databind/203042777/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            48
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 48
        },
        "testing": {
          "stepDurations": [
            41
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 41
        },
        "cloning": {
          "stepDurations": [
            45
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 45
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 6:27:44 AM",
      "totalDuration": 190
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1695,
        "numberRunning": 1696,
        "numberFailing": 0,
        "numberErroring": 1,
        "failures": [
          {
            "failureName": "com.fasterxml.jackson.databind.JsonMappingException",
            "isError": true,
            "occurrences": 1
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/FasterXML/jackson-databind/203649003",
      "failingClasses": [
        {
          "numberPassing": 12,
          "numberRunning": 13,
          "testClass": "com.fasterxml.jackson.databind.jsontype.TestPolymorphicWithDefaultImpl",
          "numberFailing": 0,
          "numberErroring": 1,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "com.fasterxml.jackson.databind.JsonMappingException",
          "testMethod": "testWithEmptyStringAsNullObject1533",
          "testClass": "com.fasterxml.jackson.databind.jsontype.TestPolymorphicWithDefaultImpl",
          "detail": "Unexpected token (VALUE_STRING), expected FIELD_NAME: missing property 'type' that is to contain type id  (for class com.fasterxml.jackson.databind.jsontype.TestPolymorphicWithDefaultImpl$AsProperty)\n at [Source: { \"value\": \"\" }; line: 1, column: 12] (through reference chain: com.fasterxml.jackson.databind.jsontype.TestPolymorphicWithDefaultImpl$AsPropertyWrapper[\"value\"])",
          "isError": true
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/204682356",
        "date": "Feb 23, 2017 7:04:53 PM",
        "id": 204682356
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/203649003",
        "date": "Feb 21, 2017 2:22:54 AM",
        "id": 203649003
      }
    },
    "repository": {
      "name": "FasterXML-jackson-databind",
      "url": "https://github.com/FasterXML/jackson-databind",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 3038937
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/10d5ab37f06f7925bf959312bfb6211f5bc4a1cb",
        "sha": "10d5ab37f06f7925bf959312bfb6211f5bc4a1cb",
        "branchName": "2.8",
        "date": "Feb 23, 2017 7:00:47 PM",
        "repoName": "FasterXML/jackson-databind"
      },
      "buggyBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/ce37efcefbfab0fa91562a492f0f80af018a5313",
        "sha": "ce37efcefbfab0fa91562a492f0f80af018a5313",
        "branchName": "2.8",
        "date": "Feb 21, 2017 2:06:13 AM",
        "repoName": "FasterXML/jackson-databind"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/FasterXML-jackson-databind-203649003-204682356\n",
    "projectMetrics": {
      "numberSourceFiles": 397,
      "numberLibrariesFailingModule": 17,
      "numberTestFiles": 385,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 0,
        "numberDeleted": 7
      }
    },
    "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java b/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java\nindex d1d096a75d..7941e054c8 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java\n@@ -153,6 +153,13 @@ public class AsPropertyTypeDeserializer extends AsArrayTypeDeserializer\n         // or, something for which \"as-property\" won't work, changed into \"wrapper-array\" type:\n         if (p.getCurrentToken() == JsonToken.START_ARRAY) {\n             return super.deserializeTypedFromAny(p, ctxt);\n+        } else if (p.getCurrentToken() == JsonToken.VALUE_STRING) {\n+            if (ctxt.isEnabled(DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT)) {\n+                String str = p.getText().trim();\n+                if (str.isEmpty()) {\n+                    return null;\n+                }\n+            }\n         }\n         ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME,\n                 \"missing property '\"+_typePropertyName+\"' that is to contain type id  (for class \"+baseTypeName()+\")\");\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 266944648,
        "hostName": "local",
        "totalMemory": 354942976,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 6:27:40 AM",
      "projectRootPomPath": "./workspace/FasterXML/jackson-databind/203649003/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            52
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 52
        },
        "testing": {
          "stepDurations": [
            33
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 33
        },
        "cloning": {
          "stepDurations": [
            47
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 47
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 6:24:31 AM",
      "totalDuration": 183
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1704,
        "numberRunning": 1705,
        "numberFailing": 0,
        "numberErroring": 1,
        "failures": [
          {
            "failureName": "com.fasterxml.jackson.databind.JsonMappingException",
            "isError": true,
            "occurrences": 1
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/FasterXML/jackson-databind/214497429",
      "failingClasses": [
        {
          "numberPassing": 7,
          "numberRunning": 8,
          "testClass": "com.fasterxml.jackson.databind.struct.EmptyArrayAsNullTest",
          "numberFailing": 0,
          "numberErroring": 1,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "com.fasterxml.jackson.databind.JsonMappingException",
          "testMethod": "testNullEnumFromEmptyArray",
          "testClass": "com.fasterxml.jackson.databind.struct.EmptyArrayAsNullTest",
          "detail": "Can not deserialize instance of com.fasterxml.jackson.databind.BaseMapTest$ABC out of START_ARRAY token\n at [Source:   [\n]; line: 1, column: 3]",
          "isError": true
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/214500046",
        "date": "Mar 24, 2017 3:32:01 AM",
        "id": 214500046
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/214497429",
        "date": "Mar 24, 2017 3:16:36 AM",
        "id": 214497429
      }
    },
    "repository": {
      "name": "FasterXML-jackson-databind",
      "url": "https://github.com/FasterXML/jackson-databind",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 3038937
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/b96a3b55d4c28171cb92bd2cafff853ea973d36f",
        "sha": "b96a3b55d4c28171cb92bd2cafff853ea973d36f",
        "branchName": "2.8",
        "date": "Mar 24, 2017 3:27:28 AM",
        "repoName": "FasterXML/jackson-databind"
      },
      "buggyBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/23d49e359217fad7b6f316fb31a7196ee4aed1b3",
        "sha": "23d49e359217fad7b6f316fb31a7196ee4aed1b3",
        "branchName": "2.8",
        "date": "Mar 24, 2017 3:12:17 AM",
        "repoName": "FasterXML/jackson-databind"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/FasterXML-jackson-databind-214497429-214500046\n",
    "projectMetrics": {
      "numberSourceFiles": 397,
      "numberLibrariesFailingModule": 17,
      "numberTestFiles": 387,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 10,
        "numberDeleted": 3
      }
    },
    "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/std/EnumDeserializer.java b/src/main/java/com/fasterxml/jackson/databind/deser/std/EnumDeserializer.java\nindex 3c65723aa5..c3ad93ef81 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/EnumDeserializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/EnumDeserializer.java\n@@ -165,7 +165,7 @@ public class EnumDeserializer\n         name = name.trim();\n         if (name.length() == 0) {\n             if (ctxt.isEnabled(DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT)) {\n-                return null;\n+                return getEmptyValue(ctxt);\n             }\n         } else if (!ctxt.isEnabled(DeserializationFeature.FAIL_ON_NUMBERS_FOR_ENUMS)) {\n             // [databind#149]: Allow use of 'String' indexes as well -- unless prohibited (as per above)\n@@ -195,15 +195,8 @@ public class EnumDeserializer\n     protected Object _deserializeOther(JsonParser p, DeserializationContext ctxt) throws IOException\n     {\n         // [databind#381]\n-        if (ctxt.isEnabled(DeserializationFeature.UNWRAP_SINGLE_VALUE_ARRAYS)\n-                && p.isExpectedStartArrayToken()) {\n-            p.nextToken();\n-            final Object parsed = deserialize(p, ctxt);\n-            JsonToken curr = p.nextToken();\n-            if (curr != JsonToken.END_ARRAY) {\n-                handleMissingEndArrayForSingle(p, ctxt);\n-            }\n-            return parsed;\n+        if (p.hasToken(JsonToken.START_ARRAY)) {\n+            return _deserializeFromArray(p, ctxt);\n         }\n         return ctxt.handleUnexpectedToken(_enumClass(), p);\n     }\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 170433536,
        "hostName": "local",
        "totalMemory": 339214336,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 6:13:36 AM",
      "projectRootPomPath": "./workspace/FasterXML/jackson-databind/214497429/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            54
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 54
        },
        "testing": {
          "stepDurations": [
            39
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 39
        },
        "cloning": {
          "stepDurations": [
            52
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 52
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 6:09:40 AM",
      "totalDuration": 229
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1705,
        "numberRunning": 1706,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "junit.framework.ComparisonFailure",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/FasterXML/jackson-databind/215036598",
      "failingClasses": [
        {
          "numberPassing": 22,
          "numberRunning": 23,
          "testClass": "com.fasterxml.jackson.databind.ser.TestEnumSerialization",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "junit.framework.ComparisonFailure",
          "testMethod": "testMapWithEnumKeys",
          "testClass": "com.fasterxml.jackson.databind.ser.TestEnumSerialization",
          "detail": "expected:<{\"map\":{\"[1]\":3}}> but was:<{\"map\":{\"[B]\":3}}>",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/215111320",
        "date": "Mar 26, 2017 1:37:59 AM",
        "id": 215111320
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/215036598",
        "date": "Mar 25, 2017 7:52:45 PM",
        "id": 215036598
      }
    },
    "repository": {
      "name": "FasterXML-jackson-databind",
      "url": "https://github.com/FasterXML/jackson-databind",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 3038937
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/934f485d4c62854dd2ef48ed7ebb238f3abec0b7",
        "sha": "934f485d4c62854dd2ef48ed7ebb238f3abec0b7",
        "branchName": "2.8",
        "date": "Mar 26, 2017 1:33:25 AM",
        "repoName": "FasterXML/jackson-databind"
      },
      "buggyBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/d892303fa5cdcfd5278f6c2a2b1b008d720f7b15",
        "sha": "d892303fa5cdcfd5278f6c2a2b1b008d720f7b15",
        "branchName": "2.8",
        "date": "Mar 25, 2017 7:48:09 PM",
        "repoName": "FasterXML/jackson-databind"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/FasterXML-jackson-databind-215036598-215111320\n",
    "projectMetrics": {
      "numberSourceFiles": 397,
      "numberLibrariesFailingModule": 17,
      "numberTestFiles": 388,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 2,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 22,
        "numberDeleted": 9
      }
    },
    "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/ser/std/StdKeySerializer.java b/src/main/java/com/fasterxml/jackson/databind/ser/std/StdKeySerializer.java\nindex b708a02d9c..fceba528f1 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/StdKeySerializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/StdKeySerializer.java\n@@ -31,12 +31,15 @@ public class StdKeySerializer extends StdSerializer<Object>\n         } else if (cls.isEnum()) {\n             // 24-Sep-2015, tatu: Minor improvement over older (2.6.2 and before) code: at least\n             //     use name/toString() variation for as per configuration\n-            Enum<?> en = (Enum<?>) value;\n-\n             if (provider.isEnabled(SerializationFeature.WRITE_ENUMS_USING_TO_STRING)) {\n-                str = en.toString();\n+                str = value.toString();\n             } else {\n-                str = en.name();\n+                Enum<?> en = (Enum<?>) value;\n+                if (provider.isEnabled(SerializationFeature.WRITE_ENUMS_USING_TO_STRING)) {\n+                    str = String.valueOf(en.ordinal());\n+                } else {\n+                    str = en.name();\n+                }\n             }\n         } else if (value instanceof Date) {\n             provider.defaultSerializeDateKey((Date) value, g);\ndiff --git a/src/main/java/com/fasterxml/jackson/databind/ser/std/StdKeySerializers.java b/src/main/java/com/fasterxml/jackson/databind/ser/std/StdKeySerializers.java\nindex fd6c99b0ba..2462f2ebae 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/StdKeySerializers.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/StdKeySerializers.java\n@@ -144,9 +144,19 @@ public class StdKeySerializers\n                 break;\n             case TYPE_ENUM:\n                 {\n-                    String str = provider.isEnabled(SerializationFeature.WRITE_ENUMS_USING_TO_STRING)\n-                            ? value.toString() : ((Enum<?>) value).name();\n-                    g.writeFieldName(str);\n+                    String key;\n+\n+                    if (provider.isEnabled(SerializationFeature.WRITE_ENUMS_USING_TO_STRING)) {\n+                        key = value.toString();\n+                    } else {\n+                        Enum<?> e = (Enum<?>) value;\n+                        if (provider.isEnabled(SerializationFeature.WRITE_ENUMS_USING_INDEX)) {\n+                            key = String.valueOf(e.ordinal());\n+                        } else {\n+                            key = e.name();\n+                        }\n+                    }\n+                    g.writeFieldName(key);\n                 }\n                 break;\n             case TYPE_TO_STRING:\n@@ -250,6 +260,10 @@ public class StdKeySerializers\n                 return;\n             }\n             Enum<?> en = (Enum<?>) value;\n+            if (serializers.isEnabled(SerializationFeature.WRITE_ENUMS_USING_INDEX)) {\n+                g.writeFieldName(String.valueOf(en.ordinal()));\n+                return;\n+            }\n             g.writeFieldName(_values.serializedValueFor(en));\n         }\n     }\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 183977032,
        "hostName": "local",
        "totalMemory": 338165760,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 6:09:27 AM",
      "projectRootPomPath": "./workspace/FasterXML/jackson-databind/215036598/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            46
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 46
        },
        "testing": {
          "stepDurations": [
            44
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 44
        },
        "cloning": {
          "stepDurations": [
            46
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 46
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 6:06:07 AM",
      "totalDuration": 195
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1708,
        "numberRunning": 1712,
        "numberFailing": 4,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "junit.framework.AssertionFailedError",
            "isError": false,
            "occurrences": 2
          },
          {
            "failureName": "junit.framework.ComparisonFailure",
            "isError": false,
            "occurrences": 2
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/FasterXML/jackson-databind/215111320",
      "failingClasses": [
        {
          "numberPassing": 2,
          "numberRunning": 6,
          "testClass": "com.fasterxml.jackson.databind.deser.builder.BuilderWithUnwrappedTest",
          "numberFailing": 4,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "junit.framework.AssertionFailedError",
          "testMethod": "testWithUnwrappedAndCreatorSingleParameterInMiddle",
          "testClass": "com.fasterxml.jackson.databind.deser.builder.BuilderWithUnwrappedTest",
          "detail": "expected:<30> but was:<0>",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "testMethod": "testWithUnwrappedAndCreatorMultipleParametersAtBeginning",
          "testClass": "com.fasterxml.jackson.databind.deser.builder.BuilderWithUnwrappedTest",
          "detail": "expected:<John> but was:<null>",
          "isError": false
        },
        {
          "failureName": "junit.framework.AssertionFailedError",
          "testMethod": "testWithUnwrappedAndCreatorMultipleParametersInMiddle",
          "testClass": "com.fasterxml.jackson.databind.deser.builder.BuilderWithUnwrappedTest",
          "detail": "expected:<30> but was:<0>",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "testMethod": "testWithUnwrappedAndCreatorSingleParameterAtBeginning",
          "testClass": "com.fasterxml.jackson.databind.deser.builder.BuilderWithUnwrappedTest",
          "detail": "expected:<John> but was:<null>",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/215799347",
        "date": "Mar 28, 2017 7:09:55 AM",
        "id": 215799347
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/215111320",
        "date": "Mar 26, 2017 1:37:59 AM",
        "id": 215111320
      }
    },
    "repository": {
      "name": "FasterXML-jackson-databind",
      "url": "https://github.com/FasterXML/jackson-databind",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 3038937
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/e08dafef4faa7d71330160dafcbe77536d90e809",
        "sha": "e08dafef4faa7d71330160dafcbe77536d90e809",
        "branchName": "2.8",
        "date": "Mar 28, 2017 7:05:43 AM",
        "repoName": "FasterXML/jackson-databind"
      },
      "buggyBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/934f485d4c62854dd2ef48ed7ebb238f3abec0b7",
        "sha": "934f485d4c62854dd2ef48ed7ebb238f3abec0b7",
        "branchName": "2.8",
        "date": "Mar 26, 2017 1:33:25 AM",
        "repoName": "FasterXML/jackson-databind"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/FasterXML-jackson-databind-215111320-215799347\n",
    "projectMetrics": {
      "numberSourceFiles": 397,
      "numberLibrariesFailingModule": 17,
      "numberTestFiles": 389,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 47,
        "numberDeleted": 22
      }
    },
    "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java b/src/main/java/com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java\nindex 7b92423cbe..817e29ec47 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java\n@@ -26,7 +26,7 @@ public class BuilderBasedDeserializer\n     private static final long serialVersionUID = 1L;\n \n     protected final AnnotatedMethod _buildMethod;\n-\t\n+\n     /*\n     /**********************************************************\n     /* Life-cycle, construction, initialization\n@@ -66,7 +66,7 @@ public class BuilderBasedDeserializer\n         super(src, ignoreAllUnknown);\n         _buildMethod = src._buildMethod;\n     }\n-    \n+\n     protected BuilderBasedDeserializer(BuilderBasedDeserializer src, NameTransformer unwrapper) {\n         super(src, unwrapper);\n         _buildMethod = src._buildMethod;\n@@ -86,7 +86,7 @@ public class BuilderBasedDeserializer\n         super(src, props);\n         _buildMethod = src._buildMethod;\n     }\n-    \n+\n     @Override\n     public JsonDeserializer<Object> unwrappingDeserializer(NameTransformer unwrapper)\n     {\n@@ -117,13 +117,13 @@ public class BuilderBasedDeserializer\n         SettableBeanProperty[] props = _beanProperties.getPropertiesInInsertionOrder();\n         return new BeanAsArrayBuilderDeserializer(this, props, _buildMethod);\n     }\n-    \n+\n     /*\n     /**********************************************************\n     /* JsonDeserializer implementation\n     /**********************************************************\n      */\n-    \n+\n     protected final Object finishBuild(DeserializationContext ctxt, Object builder)\n             throws IOException\n     {\n@@ -137,7 +137,7 @@ public class BuilderBasedDeserializer\n             return wrapInstantiationProblem(e, ctxt);\n         }\n     }\n-    \n+\n     /**\n      * Main deserialization method for bean-based objects (POJOs).\n      */\n@@ -146,7 +146,7 @@ public class BuilderBasedDeserializer\n         throws IOException\n     {\n         JsonToken t = p.getCurrentToken();\n-        \n+\n         // common case first:\n         if (t == JsonToken.START_OBJECT) {\n             t = p.nextToken();\n@@ -197,7 +197,7 @@ public class BuilderBasedDeserializer\n          */\n         return finishBuild(ctxt, _deserialize(p, ctxt, builder));\n     }\n-    \n+\n     /*\n     /**********************************************************\n     /* Concrete deserialization methods\n@@ -207,7 +207,7 @@ public class BuilderBasedDeserializer\n     protected final Object _deserialize(JsonParser p,\n             DeserializationContext ctxt, Object builder)\n         throws IOException, JsonProcessingException\n-    {        \n+    {\n         if (_injectables != null) {\n             injectValues(ctxt, builder);\n         }\n@@ -233,7 +233,7 @@ public class BuilderBasedDeserializer\n             // Skip field name:\n             p.nextToken();\n             SettableBeanProperty prop = _beanProperties.find(propName);\n-            \n+\n             if (prop != null) { // normal case\n                 try {\n                     builder = prop.deserializeSetAndReturn(p, ctxt, builder);\n@@ -246,7 +246,7 @@ public class BuilderBasedDeserializer\n         }\n         return builder;\n     }\n-    \n+\n     /**\n      * Streamlined version that is only used when no \"special\"\n      * features are enabled.\n@@ -323,7 +323,7 @@ public class BuilderBasedDeserializer\n      * Method called to deserialize bean using \"property-based creator\":\n      * this means that a non-default constructor or factory method is\n      * called, and then possibly other setters. The trick is that\n-     * values for creator method need to be buffered, first; and \n+     * values for creator method need to be buffered, first; and\n      * due to non-guaranteed ordering possibly some other properties\n      * as well.\n      */\n@@ -332,7 +332,7 @@ public class BuilderBasedDeserializer\n     protected final Object _deserializeUsingPropertyBased(final JsonParser p,\n             final DeserializationContext ctxt)\n         throws IOException, JsonProcessingException\n-    { \n+    {\n         final PropertyBasedCreator creator = _propertyBasedCreator;\n         PropertyValueBuffer buffer = creator.startBuilding(p, ctxt, _objectIdReader);\n \n@@ -414,13 +414,13 @@ public class BuilderBasedDeserializer\n         }\n         return bean;\n     }\n-    \n+\n     /*\n     /**********************************************************\n     /* Deserializing when we have to consider an active View\n     /**********************************************************\n      */\n-    \n+\n     protected final Object deserializeWithView(JsonParser p, DeserializationContext ctxt,\n             Object bean, Class<?> activeView)\n         throws IOException, JsonProcessingException\n@@ -447,7 +447,7 @@ public class BuilderBasedDeserializer\n         }\n         return bean;\n     }\n-    \n+\n     /*\n     /**********************************************************\n     /* Handling for cases where we have \"unwrapped\" values\n@@ -477,7 +477,7 @@ public class BuilderBasedDeserializer\n         }\n \n         final Class<?> activeView = _needViewProcesing ? ctxt.getActiveView() : null;\n-        \n+\n         for (; p.getCurrentToken() != JsonToken.END_OBJECT; p.nextToken()) {\n             String propName = p.getCurrentName();\n             p.nextToken();\n@@ -515,7 +515,7 @@ public class BuilderBasedDeserializer\n         tokens.writeEndObject();\n         _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);\n         return bean;\n-    }    \n+    }\n \n     @SuppressWarnings(\"resource\")\n     protected Object deserializeWithUnwrapped(JsonParser p,\n@@ -580,31 +580,7 @@ public class BuilderBasedDeserializer\n             // creator property?\n             SettableBeanProperty creatorProp = creator.findCreatorProperty(propName);\n             if (creatorProp != null) {\n-                // Last creator property to set?\n-                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {\n-                    t = p.nextToken(); // to move to following FIELD_NAME/END_OBJECT\n-                    Object bean;\n-                    try {\n-                        bean = creator.build(ctxt, buffer);\n-                    } catch (Exception e) {\n-                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);\n-                        continue; // never gets here\n-                    }\n-                    // if so, need to copy all remaining tokens into buffer\n-                    while (t == JsonToken.FIELD_NAME) {\n-                        p.nextToken(); // to skip name\n-                        tokens.copyCurrentStructure(p);\n-                        t = p.nextToken();\n-                    }\n-                    tokens.writeEndObject();\n-                    if (bean.getClass() != _beanType.getRawClass()) {\n-                        // !!! 08-Jul-2011, tatu: Could probably support; but for now\n-                        //   it's too complicated, so bail out\n-                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");\n-                        return null;\n-                    }\n-                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);\n-                }\n+                buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt));\n                 continue;\n             }\n             // Object Id property?\n@@ -646,7 +622,7 @@ public class BuilderBasedDeserializer\n     /* external type id\n     /**********************************************************\n      */\n-    \n+\n     protected Object deserializeWithExternalTypeId(JsonParser p, DeserializationContext ctxt)\n         throws IOException, JsonProcessingException\n     {\n@@ -699,15 +675,14 @@ public class BuilderBasedDeserializer\n                 } catch (Exception e) {\n                     wrapAndThrow(e, bean, propName, ctxt);\n                 }\n-                continue;\n             } else {\n                 // Unknown: let's call handler method\n-                handleUnknownProperty(p, ctxt, bean, propName);         \n+                handleUnknownProperty(p, ctxt, bean, propName);\n             }\n         }\n         // and when we get this far, let's try finalizing the deal:\n         return ext.complete(p, ctxt, bean);\n-    }        \n+    }\n \n     protected Object deserializeUsingPropertyBasedWithExternalTypeId(JsonParser p,\n     \t\tDeserializationContext ctxt)\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 91458944,
        "hostName": "local",
        "totalMemory": 319815680,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 6:05:55 AM",
      "projectRootPomPath": "./workspace/FasterXML/jackson-databind/215111320/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            46
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 46
        },
        "testing": {
          "stepDurations": [
            24
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 24
        },
        "cloning": {
          "stepDurations": [
            48
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 48
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 6:02:54 AM",
      "totalDuration": 176
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1712,
        "numberRunning": 1713,
        "numberFailing": 0,
        "numberErroring": 1,
        "failures": [
          {
            "failureName": "com.fasterxml.jackson.databind.JsonMappingException",
            "isError": true,
            "occurrences": 1
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/FasterXML/jackson-databind/216970075",
      "failingClasses": [
        {
          "numberPassing": 2,
          "numberRunning": 3,
          "testClass": "com.fasterxml.jackson.databind.deser.ReadOrWriteOnlyTest",
          "numberFailing": 0,
          "numberErroring": 1,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "com.fasterxml.jackson.databind.JsonMappingException",
          "testMethod": "testReadOnly1345",
          "testClass": "com.fasterxml.jackson.databind.deser.ReadOrWriteOnlyTest",
          "detail": "Could not find creator property with name 'name' (in class com.fasterxml.jackson.databind.deser.ReadOrWriteOnlyTest$Foo1345)\n at [Source: {\"name\":\"test\"}; line: 1, column: 1]",
          "isError": true
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/216985681",
        "date": "Mar 31, 2017 2:02:41 AM",
        "id": 216985681
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/216970075",
        "date": "Mar 31, 2017 12:57:45 AM",
        "id": 216970075
      }
    },
    "repository": {
      "name": "FasterXML-jackson-databind",
      "url": "https://github.com/FasterXML/jackson-databind",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 3038937
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/04c33a5e2abb2aeec6fb1a054ede951b3519d3b4",
        "sha": "04c33a5e2abb2aeec6fb1a054ede951b3519d3b4",
        "branchName": "2.8",
        "date": "Mar 31, 2017 1:58:23 AM",
        "repoName": "FasterXML/jackson-databind"
      },
      "buggyBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/5f1039fd154df1337741fa1b3c1c5e61a63456d4",
        "sha": "5f1039fd154df1337741fa1b3c1c5e61a63456d4",
        "branchName": "2.8",
        "date": "Mar 31, 2017 12:53:27 AM",
        "repoName": "FasterXML/jackson-databind"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/FasterXML-jackson-databind-216970075-216985681\n",
    "projectMetrics": {
      "numberSourceFiles": 397,
      "numberLibrariesFailingModule": 17,
      "numberTestFiles": 392,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 12,
        "numberDeleted": 9
      }
    },
    "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java b/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java\nindex 4c61444086..c69169f7fd 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java\n@@ -441,9 +441,11 @@ public class BeanDeserializerFactory\n             BeanDescription beanDesc, BeanDeserializerBuilder builder)\n         throws JsonMappingException\n     {\n-        final SettableBeanProperty[] creatorProps =\n-                builder.getValueInstantiator().getFromObjectArguments(ctxt.getConfig());\n         final boolean isConcrete = !beanDesc.getType().isAbstract();\n+        final SettableBeanProperty[] creatorProps = isConcrete\n+                ? builder.getValueInstantiator().getFromObjectArguments(ctxt.getConfig())\n+                : null;\n+        final boolean hasCreatorProps = (creatorProps != null);\n         \n         // 01-May-2016, tatu: Which base type to use here gets tricky, since\n         //   it may often make most sense to use general type for overrides,\n@@ -490,8 +492,8 @@ public class BeanDeserializerFactory\n                 }\n             }\n         }\n-        final boolean useGettersAsSetters = (ctxt.isEnabled(MapperFeature.USE_GETTERS_AS_SETTERS)\n-                && ctxt.isEnabled(MapperFeature.AUTO_DETECT_GETTERS));\n+        final boolean useGettersAsSetters = ctxt.isEnabled(MapperFeature.USE_GETTERS_AS_SETTERS)\n+                && ctxt.isEnabled(MapperFeature.AUTO_DETECT_GETTERS);\n \n         // Ok: let's then filter out property definitions\n         List<BeanPropertyDefinition> propDefs = filterBeanProps(ctxt,\n@@ -531,7 +533,7 @@ public class BeanDeserializerFactory\n             }\n             // 25-Sep-2014, tatu: No point in finding constructor parameters for abstract types\n             //   (since they are never used anyway)\n-            if (isConcrete && propDef.hasConstructorParameter()) {\n+            if (hasCreatorProps && propDef.hasConstructorParameter()) {\n                 /* If property is passed via constructor parameter, we must\n                  * handle things in special way. Not sure what is the most optimal way...\n                  * for now, let's just call a (new) method in builder, which does nothing.\n@@ -548,8 +550,13 @@ public class BeanDeserializerFactory\n                     }\n                 }\n                 if (cprop == null) {\n-                    ctxt.reportMappingException(\"Could not find creator property with name '%s' (in class %s)\",\n-                            name, beanDesc.getBeanClass().getName());\n+                    List<String> n = new ArrayList<>();\n+                    for (SettableBeanProperty cp : creatorProps) {\n+                        n.add(cp.getName());\n+                    }\n+                    ctxt.reportBadPropertyDefinition(beanDesc, propDef,\n+                            \"Could not find creator property with name '%s' (known Creator properties: %s)\",\n+                            name, n);\n                     continue;\n                 }\n                 if (prop != null) {\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 260055472,
        "hostName": "local",
        "totalMemory": 345505792,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 5:59:43 AM",
      "projectRootPomPath": "./workspace/FasterXML/jackson-databind/216970075/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            55
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 55
        },
        "testing": {
          "stepDurations": [
            24
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 24
        },
        "cloning": {
          "stepDurations": [
            47
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 47
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 5:56:37 AM",
      "totalDuration": 180
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1573,
        "numberRunning": 1574,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "junit.framework.AssertionFailedError",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/FasterXML/jackson-databind/221825856",
      "failingClasses": [
        {
          "numberPassing": 0,
          "numberRunning": 1,
          "testClass": "com.fasterxml.jackson.databind.interop.IllegalTypesCheckTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "junit.framework.AssertionFailedError",
          "testMethod": "testIssue1599",
          "testClass": "com.fasterxml.jackson.databind.interop.IllegalTypesCheckTest",
          "detail": "Expected an exception with one of substrings ([Illegal type]): got one with message \"N/A\n at [Source: {\"id\": 124,\n \"obj\":[ \"com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl\",\n  {\n    \"transletBytecodes\" : [ \"AAIAZQ==\" ],\n    \"transletName\" : \"a.b\",\n    \"outputProperties\" : { }\n  }\n ]\n}; line: 6, column: 26] (through reference chain: com.fasterxml.jackson.databind.interop.Bean1599[\"obj\"]->com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl[\"outputProperties\"])\"",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/221903238",
        "date": "Apr 14, 2017 12:14:16 AM",
        "id": 221903238
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/221825856",
        "date": "Apr 13, 2017 8:05:15 PM",
        "id": 221825856
      }
    },
    "repository": {
      "name": "FasterXML-jackson-databind",
      "url": "https://github.com/FasterXML/jackson-databind",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 3038937
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/6ce32ffd18facac6abdbbf559c817b47fcb622c1",
        "sha": "6ce32ffd18facac6abdbbf559c817b47fcb622c1",
        "branchName": "2.7",
        "date": "Apr 14, 2017 12:08:10 AM",
        "repoName": "FasterXML/jackson-databind"
      },
      "buggyBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/28ec8a47d381311818f805ae76bf84da30f516f9",
        "sha": "28ec8a47d381311818f805ae76bf84da30f516f9",
        "branchName": "2.7",
        "date": "Apr 13, 2017 8:00:31 PM",
        "repoName": "FasterXML/jackson-databind"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/FasterXML-jackson-databind-221825856-221903238\n",
    "projectMetrics": {
      "numberSourceFiles": 389,
      "numberLibrariesFailingModule": 14,
      "numberTestFiles": 365,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 0,
        "numberDeleted": 23
      }
    },
    "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java b/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java\nindex 9fcb68b4f6..ad37dd1700 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java\n@@ -139,6 +139,8 @@ public class BeanDeserializerFactory\n         if (!isPotentialBeanType(type.getRawClass())) {\n             return null;\n         }\n+        // For checks like [databind#1599]\n+        checkIllegalTypes(ctxt, type, beanDesc);\n         // Use generic bean introspection to build deserializer\n         return buildBeanDeserializer(ctxt, type, beanDesc);\n     }\n@@ -834,4 +836,25 @@ public class BeanDeserializerFactory\n         // We default to 'false', i.e. not ignorable\n         return (status == null) ? false : status.booleanValue(); \n     }\n+\n+    /**\n+     * @since 2.8.9\n+     */\n+    protected void checkIllegalTypes(DeserializationContext ctxt, JavaType type,\n+            BeanDescription beanDesc)\n+        throws JsonMappingException\n+    {\n+        // There are certain nasty classes that could cause problems, mostly\n+        // via default typing -- catch them here.\n+        Class<?> raw = type.getRawClass();\n+        String name = raw.getSimpleName();\n+\n+        if (\"TemplatesImpl\".equals(name)) { // [databind#1599] \n+            if (raw.getName().startsWith(\"com.sun.org.apache.xalan\")) {\n+                throw JsonMappingException.from(ctxt,\n+                        String.format(\"Illegal type (%s) to deserialize: prevented for security reasons\",\n+                                name));\n+            }\n+        }\n+    }\n }\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 121731360,
        "hostName": "local",
        "totalMemory": 381157376,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 9, 2018 11:35:04 PM",
      "projectRootPomPath": "./workspace/FasterXML/jackson-databind/221825856/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            52
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 52
        },
        "testing": {
          "stepDurations": [
            31
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 31
        },
        "cloning": {
          "stepDurations": [
            56
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 56
        }
      },
      "reproductionDateBeginning": "Oct 9, 2018 11:31:34 PM",
      "totalDuration": 203
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1574,
        "numberRunning": 1575,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "junit.framework.ComparisonFailure",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/FasterXML/jackson-databind/223024976",
      "failingClasses": [
        {
          "numberPassing": 1,
          "numberRunning": 2,
          "testClass": "com.fasterxml.jackson.databind.objectid.AlwaysAsReferenceFirstTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "junit.framework.ComparisonFailure",
          "testMethod": "testIssue1607",
          "testClass": "com.fasterxml.jackson.databind.objectid.AlwaysAsReferenceFirstTest",
          "detail": "expected:<{\"alwaysClass\":[1],\"alwaysProp\":2}> but was:<{\"alwaysClass\":[{\"id\":1,\"value\":13}],\"alwaysProp\":2}>",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/223291136",
        "date": "Apr 18, 2017 9:51:23 PM",
        "id": 223291136
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/223024976",
        "date": "Apr 18, 2017 7:15:44 AM",
        "id": 223024976
      }
    },
    "repository": {
      "name": "FasterXML-jackson-databind",
      "url": "https://github.com/FasterXML/jackson-databind",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 3038937
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/ec859af181fa5b2da62077d00154e3c13c9d8f28",
        "sha": "ec859af181fa5b2da62077d00154e3c13c9d8f28",
        "branchName": "2.7",
        "date": "Apr 18, 2017 9:46:33 PM",
        "repoName": "FasterXML/jackson-databind"
      },
      "buggyBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/8e98ed66bc262681a38052682ec5b6a42120f7f7",
        "sha": "8e98ed66bc262681a38052682ec5b6a42120f7f7",
        "branchName": "2.7",
        "date": "Apr 18, 2017 7:11:02 AM",
        "repoName": "FasterXML/jackson-databind"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/FasterXML-jackson-databind-223024976-223291136\n",
    "projectMetrics": {
      "numberSourceFiles": 389,
      "numberLibrariesFailingModule": 14,
      "numberTestFiles": 365,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 3,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 14,
        "numberDeleted": 17
      }
    },
    "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java b/src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java\nindex d74a2e99f7..f2bc1cad71 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java\n@@ -576,10 +576,13 @@ public class JacksonAnnotationIntrospector\n     @Override\n     public ObjectIdInfo findObjectReferenceInfo(Annotated ann, ObjectIdInfo objectIdInfo) {\n         JsonIdentityReference ref = _findAnnotation(ann, JsonIdentityReference.class);\n-        if (ref != null) {\n-            objectIdInfo = objectIdInfo.withAlwaysAsId(ref.alwaysAsId());\n+        if (ref == null) {\n+            return objectIdInfo;\n         }\n-        return objectIdInfo;\n+        if (objectIdInfo == null) {\n+            objectIdInfo = ObjectIdInfo.empty();\n+        }\n+        return objectIdInfo.withAlwaysAsId(ref.alwaysAsId());\n     }\n \n     /*\ndiff --git a/src/main/java/com/fasterxml/jackson/databind/introspect/ObjectIdInfo.java b/src/main/java/com/fasterxml/jackson/databind/introspect/ObjectIdInfo.java\nindex 0457ec038a..049ab3530a 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/introspect/ObjectIdInfo.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/introspect/ObjectIdInfo.java\n@@ -19,6 +19,11 @@ public class ObjectIdInfo\n     protected final Class<?> _scope;\n     protected final boolean _alwaysAsId;\n \n+    /**\n+     * @since 2.8.9\n+     */\n+    private final static ObjectIdInfo EMPTY = new ObjectIdInfo(PropertyName.NO_NAME, Object.class, null, false, null);\n+\n     public ObjectIdInfo(PropertyName name, Class<?> scope, Class<? extends ObjectIdGenerator<?>> gen,\n             Class<? extends ObjectIdResolver> resolver)\n     {\n@@ -56,6 +61,10 @@ public class ObjectIdInfo\n         _resolver = resolver;\n     }\n \n+    public static ObjectIdInfo empty() {\n+        return EMPTY;\n+    }\n+\n     public ObjectIdInfo withAlwaysAsId(boolean state) {\n         if (_alwaysAsId == state) {\n             return this;\ndiff --git a/src/main/java/com/fasterxml/jackson/databind/ser/std/BeanSerializerBase.java b/src/main/java/com/fasterxml/jackson/databind/ser/std/BeanSerializerBase.java\nindex 658786da93..3b838cc8bf 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/BeanSerializerBase.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/BeanSerializerBase.java\n@@ -429,15 +429,14 @@ public abstract class BeanSerializerBase\n             if (objectIdInfo == null) {\n                 // no ObjectId override, but maybe ObjectIdRef?\n                 if (oiw != null) {\n-                    objectIdInfo = intr.findObjectReferenceInfo(accessor,\n-                            new ObjectIdInfo(NAME_FOR_OBJECT_REF, null, null, null));\n-                    oiw = _objectIdWriter.withAlwaysAsId(objectIdInfo.getAlwaysAsId());\n+                    objectIdInfo = intr.findObjectReferenceInfo(accessor, null);\n+                    if (objectIdInfo != null) {\n+                        oiw = _objectIdWriter.withAlwaysAsId(objectIdInfo.getAlwaysAsId());\n+                    }\n                 }\n             } else {\n-                /* Ugh: mostly copied from BeanSerializerBase: but can't easily\n-                 * change it to be able to move to SerializerProvider (where it\n-                 * really belongs)\n-                 */\n+                // Ugh: mostly copied from BeanDeserializerBase: but can't easily change it\n+                // to be able to move to SerializerProvider (where it really belongs)\n                 \n                 // 2.1: allow modifications by \"id ref\" annotations as well:\n                 objectIdInfo = intr.findObjectReferenceInfo(accessor, objectIdInfo);\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 280575688,
        "hostName": "local",
        "totalMemory": 555745280,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 9, 2018 11:31:44 PM",
      "projectRootPomPath": "./workspace/FasterXML/jackson-databind/223024976/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            1,
            1,
            0,
            0,
            60
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 62
        },
        "testing": {
          "stepDurations": [
            66
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 66
        },
        "cloning": {
          "stepDurations": [
            69
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 69
        }
      },
      "reproductionDateBeginning": "Oct 9, 2018 11:26:28 PM",
      "totalDuration": 311
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1720,
        "numberRunning": 1721,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "junit.framework.ComparisonFailure",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/FasterXML/jackson-databind/228025083",
      "failingClasses": [
        {
          "numberPassing": 2,
          "numberRunning": 3,
          "testClass": "com.fasterxml.jackson.databind.filter.IgnorePropertyOnDeserTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "junit.framework.ComparisonFailure",
          "testMethod": "testIgnoreGetterNotSetter1595",
          "testClass": "com.fasterxml.jackson.databind.filter.IgnorePropertyOnDeserTest",
          "detail": "expected:<jack> but was:<null>",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/228873360",
        "date": "May 4, 2017 9:53:36 PM",
        "id": 228873360
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/228025083",
        "date": "May 2, 2017 6:47:20 PM",
        "id": 228025083
      }
    },
    "repository": {
      "name": "FasterXML-jackson-databind",
      "url": "https://github.com/FasterXML/jackson-databind",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 3038937
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/4a2b1ae08ded66b77e05bf8fa0ac8a2e8c60709d",
        "sha": "4a2b1ae08ded66b77e05bf8fa0ac8a2e8c60709d",
        "branchName": "2.8",
        "date": "May 4, 2017 9:48:52 PM",
        "repoName": "FasterXML/jackson-databind"
      },
      "buggyBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/f13cfb1f671af15814e2aa34e9f12cf00ab93b58",
        "sha": "f13cfb1f671af15814e2aa34e9f12cf00ab93b58",
        "branchName": "2.8",
        "date": "May 2, 2017 6:42:22 PM",
        "repoName": "FasterXML/jackson-databind"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/FasterXML-jackson-databind-228025083-228873360\n",
    "projectMetrics": {
      "numberSourceFiles": 397,
      "numberLibrariesFailingModule": 17,
      "numberTestFiles": 396,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 1,
        "numberDeleted": 1
      }
    },
    "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java b/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java\nindex 4b0434e417..1423f28674 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java\n@@ -492,7 +492,7 @@ public class BeanDeserializerFactory\n             boolean ignoreAny = ignorals.getIgnoreUnknown();\n             builder.setIgnoreUnknownProperties(ignoreAny);\n             // Or explicit/implicit definitions?\n-            ignored = ignorals.getIgnored();\n+            ignored = ignorals.findIgnoredForDeserialization();\n             for (String propName : ignored) {\n                 builder.addIgnorable(propName);\n             }\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 238036008,
        "hostName": "local",
        "totalMemory": 346554368,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 3:24:48 PM",
      "projectRootPomPath": "./workspace/FasterXML/jackson-databind/228025083/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            44
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 44
        },
        "testing": {
          "stepDurations": [
            26
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 26
        },
        "cloning": {
          "stepDurations": [
            46
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 46
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 3:21:59 PM",
      "totalDuration": 164
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1721,
        "numberRunning": 1722,
        "numberFailing": 0,
        "numberErroring": 1,
        "failures": [
          {
            "failureName": "com.fasterxml.jackson.databind.exc.InvalidFormatException",
            "isError": true,
            "occurrences": 1
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/FasterXML/jackson-databind/233857275",
      "failingClasses": [
        {
          "numberPassing": 8,
          "numberRunning": 9,
          "testClass": "com.fasterxml.jackson.databind.filter.ProblemHandlerTest",
          "numberFailing": 0,
          "numberErroring": 1,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "com.fasterxml.jackson.databind.exc.InvalidFormatException",
          "testMethod": "testWeirdStringHandling",
          "testClass": "com.fasterxml.jackson.databind.filter.ProblemHandlerTest",
          "detail": "Can not deserialize value of type java.util.UUID from String \"not a uuid!\": not a valid textual representation\n at [Source: \"not a uuid!\"; line: 1, column: 1]",
          "isError": true
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/234147085",
        "date": "May 19, 2017 10:12:31 PM",
        "id": 234147085
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/233857275",
        "date": "May 19, 2017 3:39:30 AM",
        "id": 233857275
      }
    },
    "repository": {
      "name": "FasterXML-jackson-databind",
      "url": "https://github.com/FasterXML/jackson-databind",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 3038937
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/9a083ad56b20711eab368a7818fb079a870feb93",
        "sha": "9a083ad56b20711eab368a7818fb079a870feb93",
        "branchName": "2.8",
        "date": "May 19, 2017 10:07:44 PM",
        "repoName": "FasterXML/jackson-databind"
      },
      "buggyBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/edaa4ad8204dfda985d3c74ffe542c9eb67a201d",
        "sha": "edaa4ad8204dfda985d3c74ffe542c9eb67a201d",
        "branchName": "2.8",
        "date": "May 19, 2017 3:34:35 AM",
        "repoName": "FasterXML/jackson-databind"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/FasterXML-jackson-databind-233857275-234147085\n",
    "projectMetrics": {
      "numberSourceFiles": 397,
      "numberLibrariesFailingModule": 17,
      "numberTestFiles": 396,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 6,
        "numberDeleted": 6
      }
    },
    "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/std/FromStringDeserializer.java b/src/main/java/com/fasterxml/jackson/databind/deser/std/FromStringDeserializer.java\nindex 102e0e3f26..0d01e780a7 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/FromStringDeserializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/FromStringDeserializer.java\n@@ -13,6 +13,7 @@ import java.util.TimeZone;\n import java.util.regex.Pattern;\n \n import com.fasterxml.jackson.core.*;\n+import com.fasterxml.jackson.core.util.VersionUtil;\n import com.fasterxml.jackson.databind.DeserializationContext;\n import com.fasterxml.jackson.databind.JavaType;\n import com.fasterxml.jackson.databind.JsonMappingException;\n@@ -112,10 +113,10 @@ public abstract class FromStringDeserializer<T> extends StdScalarDeserializer<T>\n             }\n             Exception cause = null;\n             try {\n-                T result = _deserialize(text, ctxt);\n-                if (result != null) {\n-                    return result;\n-                }\n+                // 19-May-2017, tatu: Used to require non-null result (assuming `null`\n+                //    indicated error; but that seems wrong. Should be able to return\n+                //    `null` as value.\n+                return _deserialize(text, ctxt);\n             } catch (IllegalArgumentException iae) {\n                 cause = iae;\n             } catch (MalformedURLException me) {\n@@ -277,7 +278,8 @@ public abstract class FromStringDeserializer<T> extends StdScalarDeserializer<T>\n             case STD_STRING_BUILDER:\n                 return new StringBuilder(value);\n             }\n-            throw new IllegalArgumentException();\n+            VersionUtil.throwInternal();\n+            return null;\n         }\n \n         @Override\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 270497080,
        "hostName": "local",
        "totalMemory": 377487360,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 3:20:44 PM",
      "projectRootPomPath": "./workspace/FasterXML/jackson-databind/233857275/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            45
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 45
        },
        "testing": {
          "stepDurations": [
            37
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 37
        },
        "cloning": {
          "stepDurations": [
            49
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 49
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 3:17:16 PM",
      "totalDuration": 201
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 967,
        "numberRunning": 968,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 2
      },
      "failingModule": "/root/workspace/INRIA/spoon/189186902",
      "failingClasses": [
        {
          "numberPassing": 6,
          "numberRunning": 7,
          "testClass": "spoon.test.position.PositionTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "defaultConstructorPositionTest",
          "testClass": "spoon.test.position.PositionTest",
          "detail": "expected:<(unknown file)> but was:<(/root/workspace/INRIA/spoon/189186902/src/test/java/spoon/test/position/testclasses/Foo.java:3)>",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/189233591",
        "date": "Jan 5, 2017 5:20:38 PM",
        "id": 189233591
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/189186902",
        "date": "Jan 5, 2017 2:58:41 PM",
        "id": 189186902
      }
    },
    "repository": {
      "name": "INRIA-spoon",
      "url": "https://github.com/INRIA/spoon",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 14176513
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/bf0652c5a3dddb0322ff2b471071ffecce7b7c70",
        "sha": "bf0652c5a3dddb0322ff2b471071ffecce7b7c70",
        "branchName": "master",
        "date": "Jan 5, 2017 5:11:54 PM",
        "repoName": "INRIA/spoon"
      },
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/af9ecca3acc9eab0c78f75491f5218beaac17486",
        "sha": "af9ecca3acc9eab0c78f75491f5218beaac17486",
        "branchName": "master",
        "date": "Jan 5, 2017 2:49:59 PM",
        "repoName": "INRIA/spoon"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/INRIA-spoon-189186902-189233591\n",
    "projectMetrics": {
      "numberSourceFiles": 446,
      "numberLibrariesFailingModule": 9,
      "numberTestFiles": 459,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 1,
        "numberDeleted": 1
      }
    },
    "diff": "diff --git a/src/main/java/spoon/support/compiler/jdt/ContextBuilder.java b/src/main/java/spoon/support/compiler/jdt/ContextBuilder.java\nindex 3b481e3395..93db295009 100644\n--- a/src/main/java/spoon/support/compiler/jdt/ContextBuilder.java\n+++ b/src/main/java/spoon/support/compiler/jdt/ContextBuilder.java\n@@ -87,7 +87,7 @@ public class ContextBuilder {\n \tvoid enter(CtElement e, ASTNode node) {\n \t\tstack.push(new ASTPair(e, node));\n \t\tif (!(e instanceof CtPackage) || (compilationUnitSpoon.getFile() != null && compilationUnitSpoon.getFile().getName().equals(DefaultJavaPrettyPrinter.JAVA_PACKAGE_DECLARATION))) {\n-\t\t\tif (compilationunitdeclaration != null) {\n+\t\t\tif (compilationunitdeclaration != null && !e.isImplicit()) {\n \t\t\t\te.setPosition(this.jdtTreeBuilder.getPositionBuilder().buildPositionCtElement(e, node));\n \t\t\t}\n \t\t}\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 126159672,
        "hostName": "local",
        "totalMemory": 245366784,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 8:43:38 PM",
      "projectRootPomPath": "./workspace/INRIA/spoon/189186902/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            69
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 69
        },
        "testing": {
          "stepDurations": [
            257
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 257
        },
        "cloning": {
          "stepDurations": [
            17
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 17
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 8:32:30 PM",
      "totalDuration": 662
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 967,
        "numberRunning": 968,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 2
      },
      "failingModule": "/root/workspace/INRIA/spoon/189233636",
      "failingClasses": [
        {
          "numberPassing": 9,
          "numberRunning": 10,
          "testClass": "spoon.test.comment.CommentTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testInLineComment",
          "testClass": "spoon.test.comment.CommentTest",
          "detail": "// last comment at the end of array:new int[]{ // comment before array value\n1 , // comment after array value\n2 , 3 } is not printed",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/189234660",
        "date": "Jan 5, 2017 5:24:07 PM",
        "id": 189234660
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/189233636",
        "date": "Jan 5, 2017 5:22:05 PM",
        "id": 189233636
      }
    },
    "repository": {
      "name": "INRIA-spoon",
      "url": "https://github.com/INRIA/spoon",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 14176513
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/ce55bc43a9751081097121a5745d516cad2c5200",
        "sha": "ce55bc43a9751081097121a5745d516cad2c5200",
        "branchName": "master",
        "date": "Jan 5, 2017 5:15:25 PM",
        "repoName": "INRIA/spoon"
      },
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/ac4988af27def9422c7b95f88efa7263549ee56c",
        "sha": "ac4988af27def9422c7b95f88efa7263549ee56c",
        "branchName": "master",
        "date": "Jan 5, 2017 5:12:15 PM",
        "repoName": "INRIA/spoon"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/INRIA-spoon-189233636-189234660\n",
    "projectMetrics": {
      "numberSourceFiles": 446,
      "numberLibrariesFailingModule": 9,
      "numberTestFiles": 459,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 3,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 8,
        "numberDeleted": 7
      }
    },
    "diff": "diff --git a/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java b/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java\nindex 136ee74d85..b0a9f5d53a 100644\n--- a/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java\n+++ b/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java\n@@ -1188,7 +1188,7 @@ public class DefaultJavaPrettyPrinter implements CtVisitor, PrettyPrinter {\n \t@SuppressWarnings(\"rawtypes\")\n \tpublic <T> void visitCtNewArray(CtNewArray<T> newArray) {\n \t\tenterCtExpression(newArray);\n-\n+\t\telementPrinterHelper.writeComment(newArray, CommentOffset.BEFORE);\n \t\tboolean isNotInAnnotation;\n \t\ttry {\n \t\t\tisNotInAnnotation = (newArray.getParent(CtAnnotationType.class) == null) && (newArray.getParent(CtAnnotation.class) == null);\n@@ -1244,8 +1244,11 @@ public class DefaultJavaPrettyPrinter implements CtVisitor, PrettyPrinter {\n \t\t\t\t\telementPrinterHelper.writeComment(e, CommentOffset.AFTER);\n \t\t\t\t}\n \t\t\t}\n+\n+\t\t\telementPrinterHelper.writeComment(newArray, CommentOffset.INSIDE);\n \t\t\tprinter.write(\" }\");\n \t\t}\n+\t\telementPrinterHelper.writeComment(newArray, CommentOffset.AFTER);\n \t\texitCtExpression(newArray);\n \t}\n \ndiff --git a/src/main/java/spoon/reflect/visitor/printer/ElementPrinterHelper.java b/src/main/java/spoon/reflect/visitor/printer/ElementPrinterHelper.java\nindex 7b08fac4a0..0fe008d8cf 100644\n--- a/src/main/java/spoon/reflect/visitor/printer/ElementPrinterHelper.java\n+++ b/src/main/java/spoon/reflect/visitor/printer/ElementPrinterHelper.java\n@@ -336,7 +336,8 @@ public class ElementPrinterHelper {\n \t\t\t}\n \t\t\tfinal int line = element.getPosition().getLine();\n \t\t\tfinal int sourceEnd = element.getPosition().getSourceEnd();\n-\t\t\tif (offset == CommentOffset.BEFORE && (comment.getPosition().getLine() < line || sourceEnd >= comment.getPosition().getSourceEnd())) {\n+\t\t\tfinal int sourceStart = element.getPosition().getSourceStart();\n+\t\t\tif (offset == CommentOffset.BEFORE && (comment.getPosition().getLine() < line || (sourceStart <= comment.getPosition().getSourceStart() && sourceEnd >= comment.getPosition().getSourceEnd()))) {\n \t\t\t\tcommentsToPrint.add(comment);\n \t\t\t} else if (offset == CommentOffset.AFTER && comment.getPosition().getSourceStart() > sourceEnd) {\n \t\t\t\tcommentsToPrint.add(comment);\ndiff --git a/src/main/java/spoon/support/compiler/jdt/JDTCommentBuilder.java b/src/main/java/spoon/support/compiler/jdt/JDTCommentBuilder.java\nindex d5473f14e5..1b643a1eff 100644\n--- a/src/main/java/spoon/support/compiler/jdt/JDTCommentBuilder.java\n+++ b/src/main/java/spoon/support/compiler/jdt/JDTCommentBuilder.java\n@@ -142,6 +142,7 @@ class JDTCommentBuilder {\n \tprivate CtElement addCommentToNear(final CtComment comment, final Collection<CtElement> elements) {\n \t\tCtElement best = null;\n \t\tint smallDistance = Integer.MAX_VALUE;\n+\n \t\tfor (CtElement element : elements) {\n \t\t\tif (element.getPosition() == null) {\n \t\t\t\tcontinue;\n@@ -157,7 +158,11 @@ class JDTCommentBuilder {\n \t\t\tif (isAfter) {\n \t\t\t\tdistance = Math.abs(element.getPosition().getSourceEnd() - comment.getPosition().getSourceStart());\n \t\t\t}\n-\t\t\tif (distance < smallDistance && (!isAfter || element.getPosition().getEndLine() == comment.getPosition().getLine())) {\n+\n+\t\t\tint elementEndLine = element.getPosition().getEndLine();\n+\t\t\tint commentLine = comment.getPosition().getLine();\n+\n+\t\t\tif (distance < smallDistance && (!isAfter || elementEndLine == commentLine)) {\n \t\t\t\tbest = element;\n \t\t\t\tsmallDistance = distance;\n \t\t\t}\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 170732952,
        "hostName": "local",
        "totalMemory": 367525888,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 8:38:27 PM",
      "projectRootPomPath": "./workspace/INRIA/spoon/189233636/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            64
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 64
        },
        "testing": {
          "stepDurations": [
            243
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 243
        },
        "cloning": {
          "stepDurations": [
            17
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 17
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 8:27:27 PM",
      "totalDuration": 654
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 968,
        "numberRunning": 969,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 2
      },
      "failingModule": "/root/workspace/INRIA/spoon/190241093",
      "failingClasses": [
        {
          "numberPassing": 25,
          "numberRunning": 26,
          "testClass": "spoon.test.reference.TypeReferenceTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testEqualityTypeReference",
          "testClass": "spoon.test.reference.TypeReferenceTest",
          "detail": "expected:<spoon.test.reference.testclasses.ParamRefs> but was:<void>",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/190241752",
        "date": "Jan 9, 2017 2:13:49 PM",
        "id": 190241752
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/190241093",
        "date": "Jan 9, 2017 2:10:43 PM",
        "id": 190241093
      }
    },
    "repository": {
      "name": "INRIA-spoon",
      "url": "https://github.com/INRIA/spoon",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 14176513
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/669bcc077b462157d1e14fb771e10ae86075f59d",
        "sha": "669bcc077b462157d1e14fb771e10ae86075f59d",
        "branchName": "master",
        "date": "Jan 9, 2017 2:04:17 PM",
        "repoName": "INRIA/spoon"
      },
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/3810dc9ccc2ba26aac9bc6e8092eb163b0cc75b9",
        "sha": "3810dc9ccc2ba26aac9bc6e8092eb163b0cc75b9",
        "branchName": "master",
        "date": "Jan 9, 2017 2:02:32 PM",
        "repoName": "INRIA/spoon"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/INRIA-spoon-190241093-190241752\n",
    "projectMetrics": {
      "numberSourceFiles": 446,
      "numberLibrariesFailingModule": 9,
      "numberTestFiles": 460,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 3,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 11,
        "numberDeleted": 5
      }
    },
    "diff": "diff --git a/src/main/java/spoon/reflect/factory/ExecutableFactory.java b/src/main/java/spoon/reflect/factory/ExecutableFactory.java\nindex d06fe9a42b..e4ea1ff86c 100644\n--- a/src/main/java/spoon/reflect/factory/ExecutableFactory.java\n+++ b/src/main/java/spoon/reflect/factory/ExecutableFactory.java\n@@ -114,6 +114,7 @@ public class ExecutableFactory extends SubFactory {\n \t\t} else if (e instanceof CtAnonymousExecutable) {\n \t\t\treturn createReference(((CtAnonymousExecutable) e).getDeclaringType().getReference(), e.getType().clone(), executableName);\n \t\t}\n+\t\t// constructor\n \t\treturn createReference(((CtConstructor<T>) e).getDeclaringType().getReference(), ((CtConstructor<T>) e).getType().clone(), CtExecutableReference.CONSTRUCTOR_NAME, refs);\n \t}\n \ndiff --git a/src/main/java/spoon/support/compiler/jdt/ParentExiter.java b/src/main/java/spoon/support/compiler/jdt/ParentExiter.java\nindex 51bbfa304b..f7fa778c07 100644\n--- a/src/main/java/spoon/support/compiler/jdt/ParentExiter.java\n+++ b/src/main/java/spoon/support/compiler/jdt/ParentExiter.java\n@@ -721,9 +721,7 @@ public class ParentExiter extends CtInheritanceScanner {\n \tprivate <T> boolean hasChildEqualsToType(CtConstructorCall<T> ctConstructorCall) {\n \t\tfinal AllocationExpression parent = (AllocationExpression) jdtTreeBuilder.getContextBuilder().stack.peek().node;\n \t\t// Type is equals to the jdt child.\n-\t\treturn parent.type != null && parent.type.equals(childJDT)\n-\t\t\t\t// Type not yet initialized.\n-\t\t\t\t&& !((CtTypeAccess) child).getAccessedType().equals(ctConstructorCall.getExecutable().getType());\n+\t\treturn parent.type != null && parent.type.equals(childJDT);\n \t}\n \n \t@Override\ndiff --git a/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java b/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java\nindex f873b1f947..a8c8208342 100644\n--- a/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java\n+++ b/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java\n@@ -338,11 +338,14 @@ public class ReferenceBuilder {\n \t\tif (exec == null) {\n \t\t\treturn null;\n \t\t}\n-\n \t\tfinal CtExecutableReference ref = this.jdtTreeBuilder.getFactory().Core().createExecutableReference();\n-\t\tref.setSimpleName(new String(exec.selector));\n-\t\tref.setType(getTypeReference(exec.returnType));\n-\n+\t\tif (exec.isConstructor()) {\n+\t\t\tref.setSimpleName(CtExecutableReference.CONSTRUCTOR_NAME);\n+\t\t\tref.setType(getTypeReference(exec.declaringClass));\n+\t\t} else {\n+\t\t\tref.setSimpleName(new String(exec.selector));\n+\t\t\tref.setType(getTypeReference(exec.returnType));\n+\t\t}\n \t\tif (exec instanceof ProblemMethodBinding) {\n \t\t\tif (exec.declaringClass != null && Arrays.asList(exec.declaringClass.methods()).contains(exec)) {\n \t\t\t\tref.setDeclaringType(getTypeReference(exec.declaringClass));\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 122242408,
        "hostName": "local",
        "totalMemory": 270532608,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 8:31:53 PM",
      "projectRootPomPath": "./workspace/INRIA/spoon/190241093/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            65
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 65
        },
        "testing": {
          "stepDurations": [
            238
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 238
        },
        "cloning": {
          "stepDurations": [
            17
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 17
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 8:21:00 PM",
      "totalDuration": 647
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 969,
        "numberRunning": 970,
        "numberFailing": 0,
        "numberErroring": 1,
        "failures": [
          {
            "failureName": "java.lang.ClassCastException",
            "isError": true,
            "occurrences": 1
          }
        ],
        "numberSkipping": 2
      },
      "failingModule": "/root/workspace/INRIA/spoon/190241752",
      "failingClasses": [
        {
          "numberPassing": 8,
          "numberRunning": 9,
          "testClass": "spoon.test.reference.VariableAccessTest",
          "numberFailing": 0,
          "numberErroring": 1,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.ClassCastException",
          "testMethod": "testParameterReferenceInConstructorNoClasspath",
          "testClass": "spoon.test.reference.VariableAccessTest",
          "detail": "spoon.support.reflect.declaration.CtConstructorImpl cannot be cast to spoon.reflect.declaration.CtMethod",
          "isError": true
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/190558172",
        "date": "Jan 10, 2017 11:21:52 AM",
        "id": 190558172
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/190241752",
        "date": "Jan 9, 2017 2:13:49 PM",
        "id": 190241752
      }
    },
    "repository": {
      "name": "INRIA-spoon",
      "url": "https://github.com/INRIA/spoon",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 14176513
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/e60e3ab92d706a87e3475645f312675fc278c9f1",
        "sha": "e60e3ab92d706a87e3475645f312675fc278c9f1",
        "branchName": "master",
        "date": "Jan 10, 2017 11:13:22 AM",
        "repoName": "INRIA/spoon"
      },
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/669bcc077b462157d1e14fb771e10ae86075f59d",
        "sha": "669bcc077b462157d1e14fb771e10ae86075f59d",
        "branchName": "master",
        "date": "Jan 9, 2017 2:04:17 PM",
        "repoName": "INRIA/spoon"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/INRIA-spoon-190241752-190558172\n",
    "projectMetrics": {
      "numberSourceFiles": 446,
      "numberLibrariesFailingModule": 9,
      "numberTestFiles": 460,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 49,
        "numberDeleted": 34
      }
    },
    "diff": "diff --git a/src/main/java/spoon/support/compiler/jdt/JDTTreeBuilderHelper.java b/src/main/java/spoon/support/compiler/jdt/JDTTreeBuilderHelper.java\nindex b927920d1e..61e0dc415b 100644\n--- a/src/main/java/spoon/support/compiler/jdt/JDTTreeBuilderHelper.java\n+++ b/src/main/java/spoon/support/compiler/jdt/JDTTreeBuilderHelper.java\n@@ -17,9 +17,9 @@\n package spoon.support.compiler.jdt;\n \n import org.eclipse.jdt.core.compiler.CharOperation;\n+import org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;\n import org.eclipse.jdt.internal.compiler.ast.Argument;\n import org.eclipse.jdt.internal.compiler.ast.FieldReference;\n-import org.eclipse.jdt.internal.compiler.ast.MethodDeclaration;\n import org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference;\n import org.eclipse.jdt.internal.compiler.ast.ReferenceExpression;\n import org.eclipse.jdt.internal.compiler.ast.SingleNameReference;\n@@ -42,14 +42,16 @@ import spoon.reflect.code.CtLambda;\n import spoon.reflect.code.CtTypeAccess;\n import spoon.reflect.code.CtVariableAccess;\n import spoon.reflect.declaration.CtClass;\n+import spoon.reflect.declaration.CtConstructor;\n+import spoon.reflect.declaration.CtExecutable;\n import spoon.reflect.declaration.CtField;\n-import spoon.reflect.declaration.CtMethod;\n import spoon.reflect.declaration.CtParameter;\n import spoon.reflect.declaration.CtType;\n import spoon.reflect.declaration.CtVariable;\n import spoon.reflect.declaration.ModifierKind;\n import spoon.reflect.factory.CoreFactory;\n import spoon.reflect.factory.ExecutableFactory;\n+import spoon.reflect.factory.TypeFactory;\n import spoon.reflect.reference.CtArrayTypeReference;\n import spoon.reflect.reference.CtExecutableReference;\n import spoon.reflect.reference.CtFieldReference;\n@@ -161,6 +163,7 @@ class JDTTreeBuilderHelper {\n \t * \t\t   visible in current scope, {@code null} otherwise.\n \t */\n \t<T> CtVariableAccess<T> createVariableAccessNoClasspath(SingleNameReference singleNameReference) {\n+\t\tfinal TypeFactory typeFactory = jdtTreeBuilder.getFactory().Type();\n \t\tfinal CoreFactory coreFactory = jdtTreeBuilder.getFactory().Core();\n \t\tfinal ExecutableFactory executableFactory = jdtTreeBuilder.getFactory().Executable();\n \t\tfinal ContextBuilder contextBuilder = jdtTreeBuilder.getContextBuilder();\n@@ -186,50 +189,64 @@ class JDTTreeBuilderHelper {\n \t\t\t\t// references (in terms of Java objects) have not been set up yet. Thus, we need to\n \t\t\t\t// create the required parameter reference by our own.\n \n-\t\t\t\t// since the given parameter has not been declared in a lambda expression it must\n-\t\t\t\t// have been declared by a method!\n-\t\t\t\tfinal CtMethod method = (CtMethod) variable.getParent();\n+\t\t\t\t// Since the given parameter has not been declared in a lambda expression it must\n+\t\t\t\t// have been declared by a method/constructor.\n+\t\t\t\tfinal CtExecutable executable = (CtExecutable) variable.getParent();\n \n-\t\t\t\t// create list of method's parameter types\n-\t\t\t\tfinal List<CtTypeReference<?>> parameterTypesOfMethod = new ArrayList<>();\n-\t\t\t\tfinal List<CtParameter<?>> parametersOfMethod = method.getParameters();\n-\t\t\t\tfor (CtParameter<?> parameter : parametersOfMethod) {\n+\t\t\t\t// create list of executable's parameter types\n+\t\t\t\tfinal List<CtTypeReference<?>> parameterTypesOfExecutable = new ArrayList<>();\n+\t\t\t\t@SuppressWarnings(\"unchecked\")\n+\t\t\t\tfinal List<CtParameter<?>> parametersOfExecutable = executable.getParameters();\n+\t\t\t\tfor (CtParameter<?> parameter : parametersOfExecutable) {\n \t\t\t\t\tif (parameter.getType() != null) {\n-\t\t\t\t\t\tparameterTypesOfMethod.add(parameter.getType().clone());\n+\t\t\t\t\t\tparameterTypesOfExecutable.add(parameter.getType().clone());\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\t// it's the best match :(\n+\t\t\t\t\t\tparameterTypesOfExecutable.add(typeFactory.OBJECT);\n \t\t\t\t\t}\n \t\t\t\t}\n \n-\t\t\t\t// find method's corresponding jdt element\n-\t\t\t\tMethodDeclaration methodJDT = null;\n+\t\t\t\t// find executable's corresponding jdt element\n+\t\t\t\tAbstractMethodDeclaration executableJDT = null;\n \t\t\t\tfor (final ASTPair astPair : contextBuilder.stack) {\n-\t\t\t\t\tif (astPair.element == method) {\n-\t\t\t\t\t\tmethodJDT = (MethodDeclaration) astPair.node;\n-\t\t\t\t\t\tbreak;\n+\t\t\t\t\tif (astPair.element == executable) {\n+\t\t\t\t\t\texecutableJDT = (AbstractMethodDeclaration) astPair.node;\n \t\t\t\t\t}\n \t\t\t\t}\n-\t\t\t\tassert methodJDT != null;\n+\t\t\t\tassert executableJDT != null;\n \n-\t\t\t\t// create a reference to method's declaring class\n-\t\t\t\tfinal CtTypeReference declaringReferenceOfMethod =\n+\t\t\t\t// create a reference to executable's declaring class\n+\t\t\t\tfinal CtTypeReference declaringReferenceOfExecutable =\n \t\t\t\t\t\t// `binding` may be null for anonymous classes which means we have to\n \t\t\t\t\t\t// create an 'empty' type reference since we have no further information\n-\t\t\t\t\t\tmethodJDT.binding == null ? coreFactory.createTypeReference()\n-\t\t\t\t\t\t\t\t: referenceBuilder.getTypeReference(methodJDT.binding.declaringClass);\n-\n-\t\t\t\t// create a reference to the method of the currently processed parameter reference\n-\t\t\t\tfinal CtExecutableReference methodReference =\n-\t\t\t\t\t\texecutableFactory.createReference(declaringReferenceOfMethod,\n-\t\t\t\t\t\t\t\t// we need to clone method's return type (rt) before passing to\n-\t\t\t\t\t\t\t\t// `createReference` since this method (indirectly) sets the parent\n-\t\t\t\t\t\t\t\t// of the rt and, therefore, may break the AST\n-\t\t\t\t\t\t\t\tmethod.getType().clone(),\n-\t\t\t\t\t\t\t\t// no need to clone/copy as Strings are immutable\n-\t\t\t\t\t\t\t\tmethod.getSimpleName(),\n-\t\t\t\t\t\t\t\t// no need to clone/copy as we just created this object\n-\t\t\t\t\t\t\t\tparameterTypesOfMethod);\n-\n-\t\t\t\t// finally, we can set the method reference...\n-\t\t\t\tparameterReference.setDeclaringExecutable(methodReference);\n+\t\t\t\t\t\t// available\n+\t\t\t\t\t\texecutableJDT.binding == null ? coreFactory.createTypeReference()\n+\t\t\t\t\t\t\t\t: referenceBuilder.getTypeReference(\n+\t\t\t\t\t\t\t\t\t\texecutableJDT.binding.declaringClass);\n+\n+\t\t\t\t// If executable is a constructor, `executable.getType()` returns null since the\n+\t\t\t\t// parent is not available yet. Fortunately, however, the return type of a\n+\t\t\t\t// constructor is its declaring class which, in our case, is already available with\n+\t\t\t\t// declaringReferenceOfExecutable.\n+\t\t\t\tCtTypeReference executableTypeReference = executable instanceof CtConstructor\n+\t\t\t\t\t\t// IMPORTANT: Create a clone of the type reference (rt) if retrieved by\n+\t\t\t\t\t\t// other AST elements as `executableFactory.createReference` (see below)\n+\t\t\t\t\t\t// indirectly sets the parent of `rt` and, thus, may break the AST!\n+\t\t\t\t\t\t? declaringReferenceOfExecutable.clone()\n+\t\t\t\t\t\t: executable.getType().clone();\n+\n+\t\t\t\t// create a reference to the executable of the currently processed parameter\n+\t\t\t\t// reference\n+\t\t\t\t@SuppressWarnings(\"unchecked\")\n+\t\t\t\tfinal CtExecutableReference executableReference =\n+\t\t\t\t\t\texecutableFactory.createReference(\n+\t\t\t\t\t\t\t\tdeclaringReferenceOfExecutable,\n+\t\t\t\t\t\t\t\texecutableTypeReference,\n+\t\t\t\t\t\t\t\texecutable.getSimpleName(),\n+\t\t\t\t\t\t\t\tparameterTypesOfExecutable);\n+\n+\t\t\t\t// finally, we can set the executable reference...\n+\t\t\t\tparameterReference.setDeclaringExecutable(executableReference);\n \t\t\t}\n \t\t\tvariableReference = parameterReference;\n \t\t\tvariableAccess = isLhsAssignment(contextBuilder, singleNameReference)\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 196854312,
        "hostName": "local",
        "totalMemory": 255328256,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 8:25:08 PM",
      "projectRootPomPath": "./workspace/INRIA/spoon/190241752/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            59
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 59
        },
        "testing": {
          "stepDurations": [
            201
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 201
        },
        "cloning": {
          "stepDurations": [
            16
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 16
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 8:15:11 PM",
      "totalDuration": 591
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 981,
        "numberRunning": 985,
        "numberFailing": 2,
        "numberErroring": 2,
        "failures": [
          {
            "failureName": "spoon.SpoonException",
            "isError": true,
            "occurrences": 2
          },
          {
            "failureName": "org.junit.ComparisonFailure",
            "isError": false,
            "occurrences": 2
          }
        ],
        "numberSkipping": 2
      },
      "failingModule": "/root/workspace/INRIA/spoon/191511078",
      "failingClasses": [
        {
          "numberPassing": 21,
          "numberRunning": 24,
          "testClass": "spoon.test.imports.ImportTest",
          "numberFailing": 2,
          "numberErroring": 1,
          "numberSkipping": 0
        },
        {
          "numberPassing": 5,
          "numberRunning": 6,
          "testClass": "spoon.test.main.MainTest",
          "numberFailing": 0,
          "numberErroring": 1,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "testMethod": "testNestedAccessPathWithTypedParameter",
          "testClass": "spoon.test.imports.ImportTest",
          "detail": "expected:<...ltimap<K, V>.Wrapped[Collection].WrappedIterator {}> but was:<...ltimap<K, V>.Wrapped[List].WrappedIterator {}>",
          "isError": false
        },
        {
          "failureName": "spoon.SpoonException",
          "testMethod": "testTest",
          "testClass": "spoon.test.main.MainTest",
          "detail": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "testMethod": "testAccessPath",
          "testClass": "spoon.test.imports.ImportTest",
          "detail": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "testMethod": "testNestedAccessPathWithTypedParameterWithImports",
          "testClass": "spoon.test.imports.ImportTest",
          "detail": "expected:<...ltimap<K, V>.Wrapped[Collection].WrappedIterator {}> but was:<...ltimap<K, V>.Wrapped[List].WrappedIterator {}>",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/191595944",
        "date": "Jan 13, 2017 12:10:04 PM",
        "id": 191595944
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/191511078",
        "date": "Jan 13, 2017 3:15:56 AM",
        "id": 191511078
      }
    },
    "repository": {
      "name": "INRIA-spoon",
      "url": "https://github.com/INRIA/spoon",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 14176513
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/551f0fb28c49f4b1eeab93f7748c04ef82cfde39",
        "sha": "551f0fb28c49f4b1eeab93f7748c04ef82cfde39",
        "branchName": "master",
        "date": "Jan 13, 2017 11:58:00 AM",
        "repoName": "INRIA/spoon"
      },
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/7beb903ee2fbbea5b48ad316944ef831b69074f4",
        "sha": "7beb903ee2fbbea5b48ad316944ef831b69074f4",
        "branchName": "master",
        "date": "Jan 13, 2017 3:06:56 AM",
        "repoName": "INRIA/spoon"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/INRIA-spoon-191511078-191595944\n",
    "projectMetrics": {
      "numberSourceFiles": 450,
      "numberLibrariesFailingModule": 10,
      "numberTestFiles": 461,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 1,
        "numberDeleted": 4
      }
    },
    "diff": "diff --git a/src/main/java/spoon/support/reflect/reference/CtTypeReferenceImpl.java b/src/main/java/spoon/support/reflect/reference/CtTypeReferenceImpl.java\nindex 6a600a6e9a..82a30e6181 100644\n--- a/src/main/java/spoon/support/reflect/reference/CtTypeReferenceImpl.java\n+++ b/src/main/java/spoon/support/reflect/reference/CtTypeReferenceImpl.java\n@@ -619,7 +619,7 @@ public class CtTypeReferenceImpl<T> extends CtReferenceImpl implements CtTypeRef\n \t\t\t}\n \t\t\tif (modifiers.contains(ModifierKind.PRIVATE)) {\n \t\t\t\t//it is visible in scope of the same class only\n-\t\t\t\treturn type.getTopLevelType().getQualifiedName().equals(this.getQualifiedName());\n+\t\t\t\treturn type.getTopLevelType().getQualifiedName().equals(this.getTopLevelType().getQualifiedName());\n \t\t\t}\n \t\t\t//package protected\n \t\t\tif (type.getTopLevelType().getPackage().getSimpleName().equals(this.getTopLevelType().getPackage().getSimpleName())) {\n@@ -674,6 +674,9 @@ public class CtTypeReferenceImpl<T> extends CtReferenceImpl implements CtTypeRef\n \t\t\t}\n \t\t\tdeclType = visibleDeclType;\n \t\t}\n+\t\tif (declType == null) {\n+\t\t\tthrow new SpoonException(\"Cannot compute access path to type: \" + this.getQualifiedName() + \" in context of type: \" + contextType.getQualifiedName());\n+\t\t}\n \t\treturn declType;\n \t}\n \n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 165605712,
        "hostName": "local",
        "totalMemory": 276299776,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 7:52:38 PM",
      "projectRootPomPath": "./workspace/INRIA/spoon/191511078/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            1,
            0,
            0,
            0,
            67
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 68
        },
        "testing": {
          "stepDurations": [
            243
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 243
        },
        "cloning": {
          "stepDurations": [
            17
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 17
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 7:42:43 PM",
      "totalDuration": 589
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 985,
        "numberRunning": 986,
        "numberFailing": 0,
        "numberErroring": 1,
        "failures": [
          {
            "failureName": "java.lang.NullPointerException",
            "isError": true,
            "occurrences": 1
          }
        ],
        "numberSkipping": 2
      },
      "failingModule": "/root/workspace/INRIA/spoon/192604168",
      "failingClasses": [
        {
          "numberPassing": 33,
          "numberRunning": 34,
          "testClass": "spoon.test.filters.FilterTest",
          "numberFailing": 0,
          "numberErroring": 1,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.NullPointerException",
          "testMethod": "testClassCastExceptionOnForEach",
          "isError": true,
          "testClass": "spoon.test.filters.FilterTest"
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/192969999",
        "date": "Jan 18, 2017 10:33:42 AM",
        "id": 192969999
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/192604168",
        "date": "Jan 17, 2017 9:27:11 AM",
        "id": 192604168
      }
    },
    "repository": {
      "name": "INRIA-spoon",
      "url": "https://github.com/INRIA/spoon",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 14176513
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/b0b3d09fe50fa25f8d204e44816ff0c62f0b30ac",
        "sha": "b0b3d09fe50fa25f8d204e44816ff0c62f0b30ac",
        "branchName": "master",
        "date": "Jan 18, 2017 9:51:49 AM",
        "repoName": "INRIA/spoon"
      },
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/8ea4bc43f39abe12a75e57ab7f50267dbed827fe",
        "sha": "8ea4bc43f39abe12a75e57ab7f50267dbed827fe",
        "branchName": "master",
        "date": "Jan 17, 2017 9:18:37 AM",
        "repoName": "INRIA/spoon"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/INRIA-spoon-192604168-192969999\n",
    "projectMetrics": {
      "numberSourceFiles": 450,
      "numberLibrariesFailingModule": 10,
      "numberTestFiles": 461,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 6,
        "numberDeleted": 1
      }
    },
    "diff": "diff --git a/src/main/java/spoon/reflect/visitor/chain/CtQueryImpl.java b/src/main/java/spoon/reflect/visitor/chain/CtQueryImpl.java\nindex cd3923e79e..54b3e66c07 100644\n--- a/src/main/java/spoon/reflect/visitor/chain/CtQueryImpl.java\n+++ b/src/main/java/spoon/reflect/visitor/chain/CtQueryImpl.java\n@@ -279,7 +279,12 @@ public class CtQueryImpl implements CtQuery {\n \t\t}\r\n \r\n \t\tprivate boolean isFailOnCCE() {\r\n-\t\t\treturn getStep().isFailOnCCE();\r\n+\t\t\tAbstractStep step = getStep();\r\n+\t\t\tif (step == null) {\r\n+\t\t\t\t//it is final consumer. Never throw CCE on final forEach consumer\r\n+\t\t\t\treturn false;\r\n+\t\t\t}\r\n+\t\t\treturn step.isFailOnCCE();\r\n \t\t}\r\n \r\n \t\tprivate AbstractStep getStep() {\r\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 144518448,
        "hostName": "local",
        "totalMemory": 282591232,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 7:47:46 PM",
      "projectRootPomPath": "./workspace/INRIA/spoon/192604168/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            1,
            0,
            0,
            0,
            73
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 74
        },
        "testing": {
          "stepDurations": [
            260
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 260
        },
        "cloning": {
          "stepDurations": [
            18
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 18
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 7:36:22 PM",
      "totalDuration": 678
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 986,
        "numberRunning": 987,
        "numberFailing": 0,
        "numberErroring": 1,
        "failures": [
          {
            "failureName": "spoon.support.SpoonClassNotFoundException",
            "isError": true,
            "occurrences": 1
          }
        ],
        "numberSkipping": 2
      },
      "failingModule": "/root/workspace/INRIA/spoon/192969999",
      "failingClasses": [
        {
          "numberPassing": 9,
          "numberRunning": 10,
          "testClass": "spoon.test.methodreference.MethodReferenceTest",
          "numberFailing": 0,
          "numberErroring": 1,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "spoon.support.SpoonClassNotFoundException",
          "testMethod": "testNoClasspathSuperExecutable",
          "testClass": "spoon.test.methodreference.MethodReferenceTest",
          "detail": "cannot load class: NotInClasspath",
          "isError": true
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/193004144",
        "date": "Jan 18, 2017 12:18:44 PM",
        "id": 193004144
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/192969999",
        "date": "Jan 18, 2017 10:33:42 AM",
        "id": 192969999
      }
    },
    "repository": {
      "name": "INRIA-spoon",
      "url": "https://github.com/INRIA/spoon",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 14176513
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/5b21903b4f51c530d58c33e1a8db419287469747",
        "sha": "5b21903b4f51c530d58c33e1a8db419287469747",
        "branchName": "master",
        "date": "Jan 18, 2017 12:10:23 PM",
        "repoName": "INRIA/spoon"
      },
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/b0b3d09fe50fa25f8d204e44816ff0c62f0b30ac",
        "sha": "b0b3d09fe50fa25f8d204e44816ff0c62f0b30ac",
        "branchName": "master",
        "date": "Jan 18, 2017 9:51:49 AM",
        "repoName": "INRIA/spoon"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/INRIA-spoon-192969999-193004144\n",
    "projectMetrics": {
      "numberSourceFiles": 450,
      "numberLibrariesFailingModule": 10,
      "numberTestFiles": 461,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 21,
        "numberDeleted": 5
      }
    },
    "diff": "diff --git a/src/main/java/spoon/support/reflect/reference/CtTypeReferenceImpl.java b/src/main/java/spoon/support/reflect/reference/CtTypeReferenceImpl.java\nindex 82a30e6181..e6ceb9e5ed 100644\n--- a/src/main/java/spoon/support/reflect/reference/CtTypeReferenceImpl.java\n+++ b/src/main/java/spoon/support/reflect/reference/CtTypeReferenceImpl.java\n@@ -465,7 +465,14 @@ public class CtTypeReferenceImpl<T> extends CtReferenceImpl implements CtTypeRef\n \tpublic Collection<CtExecutableReference<?>> getDeclaredExecutables() {\n \t\tCtType<T> t = getDeclaration();\n \t\tif (t == null) {\n-\t\t\treturn RtHelper.getAllExecutables(getActualClass(), getFactory());\n+\t\t\ttry {\n+\t\t\t\treturn RtHelper.getAllExecutables(getActualClass(), getFactory());\n+\t\t\t} catch (final SpoonClassNotFoundException e) {\n+\t\t\t\tif (getFactory().getEnvironment().getNoClasspath()) {\n+\t\t\t\t\treturn Collections.emptyList();\n+\t\t\t\t}\n+\t\t\t\tthrow e;\n+\t\t\t}\n \t\t} else {\n \t\t\treturn t.getDeclaredExecutables();\n \t\t}\n@@ -508,12 +515,19 @@ public class CtTypeReferenceImpl<T> extends CtReferenceImpl implements CtTypeRef\n \t\tif (t != null) {\n \t\t\treturn t.getSuperclass();\n \t\t} else {\n-\t\t\tClass<T> c = getActualClass();\n-\t\t\tClass<?> sc = c.getSuperclass();\n-\t\t\tif (sc == null) {\n-\t\t\t\treturn null;\n+\t\t\ttry {\n+\t\t\t\tClass<T> c = getActualClass();\n+\t\t\t\tClass<?> sc = c.getSuperclass();\n+\t\t\t\tif (sc == null) {\n+\t\t\t\t\treturn null;\n+\t\t\t\t}\n+\t\t\t\treturn getFactory().Type().createReference(sc);\n+\t\t\t} catch (final SpoonClassNotFoundException e) {\n+\t\t\t\tif (getFactory().getEnvironment().getNoClasspath()) {\n+\t\t\t\t\treturn null;\n+\t\t\t\t}\n+\t\t\t\tthrow e;\n \t\t\t}\n-\t\t\treturn getFactory().Type().createReference(sc);\n \t\t}\n \t}\n \n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 198377320,
        "hostName": "local",
        "totalMemory": 252182528,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 7:42:08 PM",
      "projectRootPomPath": "./workspace/INRIA/spoon/192969999/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            61
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 61
        },
        "testing": {
          "stepDurations": [
            211
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 211
        },
        "cloning": {
          "stepDurations": [
            16
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 16
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 7:31:32 PM",
      "totalDuration": 629
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 986,
        "numberRunning": 987,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 2
      },
      "failingModule": "/root/workspace/INRIA/spoon/193004144",
      "failingClasses": [
        {
          "numberPassing": 10,
          "numberRunning": 11,
          "testClass": "spoon.test.comment.CommentTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testInLineComment",
          "testClass": "spoon.test.comment.CommentTest",
          "detail": "expected:<64> but was:<63>",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/193023299",
        "date": "Jan 18, 2017 1:37:43 PM",
        "id": 193023299
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/193004144",
        "date": "Jan 18, 2017 12:18:44 PM",
        "id": 193004144
      }
    },
    "repository": {
      "name": "INRIA-spoon",
      "url": "https://github.com/INRIA/spoon",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 14176513
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/dd5ff12d4c3ad1859224d0dd69b5a798af592d09",
        "sha": "dd5ff12d4c3ad1859224d0dd69b5a798af592d09",
        "branchName": "master",
        "date": "Jan 18, 2017 1:29:18 PM",
        "repoName": "INRIA/spoon"
      },
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/5b21903b4f51c530d58c33e1a8db419287469747",
        "sha": "5b21903b4f51c530d58c33e1a8db419287469747",
        "branchName": "master",
        "date": "Jan 18, 2017 12:10:23 PM",
        "repoName": "INRIA/spoon"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/INRIA-spoon-193004144-193023299\n",
    "projectMetrics": {
      "numberSourceFiles": 450,
      "numberLibrariesFailingModule": 10,
      "numberTestFiles": 461,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 2,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 39,
        "numberDeleted": 14
      }
    },
    "diff": "diff --git a/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java b/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java\nindex 9ed9258547..e1921c03c0 100644\n--- a/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java\n+++ b/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java\n@@ -185,6 +185,9 @@ public class DefaultJavaPrettyPrinter implements CtVisitor, PrettyPrinter {\n \t * Enters an expression.\n \t */\n \tprotected void enterCtExpression(CtExpression<?> e) {\n+\t\tif (!(e instanceof CtStatement)) {\n+\t\t\telementPrinterHelper.writeComment(e, CommentOffset.BEFORE);\n+\t\t}\n \t\tprinter.mapLine(e, sourceCompilationUnit);\n \t\tif (shouldSetBracket(e)) {\n \t\t\tcontext.parenthesedExpression.push(e);\n@@ -221,6 +224,9 @@ public class DefaultJavaPrettyPrinter implements CtVisitor, PrettyPrinter {\n \t\t\tcontext.parenthesedExpression.pop();\n \t\t\tprinter.write(\")\");\n \t\t}\n+\t\tif (!(e instanceof CtStatement)) {\n+\t\t\telementPrinterHelper.writeComment(e, CommentOffset.AFTER);\n+\t\t}\n \t}\n \n \t/**\n@@ -507,9 +513,6 @@ public class DefaultJavaPrettyPrinter implements CtVisitor, PrettyPrinter {\n \tpublic <T> void visitCtConditional(CtConditional<T> conditional) {\n \t\tenterCtExpression(conditional);\n \t\tCtExpression<Boolean> condition = conditional.getCondition();\n-\t\tif (!(condition instanceof CtStatement)) {\n-\t\t\telementPrinterHelper.writeComment(condition, CommentOffset.BEFORE);\n-\t\t}\n \t\tboolean parent;\n \t\ttry {\n \t\t\tparent = conditional.getParent() instanceof CtAssignment || conditional.getParent() instanceof CtVariable;\n@@ -524,18 +527,9 @@ public class DefaultJavaPrettyPrinter implements CtVisitor, PrettyPrinter {\n \t\tif (parent) {\n \t\t\tprinter.write(\")\");\n \t\t}\n-\t\tif (!(condition instanceof CtStatement)) {\n-\t\t\telementPrinterHelper.writeComment(condition, CommentOffset.AFTER);\n-\t\t}\n \t\tprinter.write(\" ? \");\n \t\tCtExpression<T> thenExpression = conditional.getThenExpression();\n-\t\tif (!(thenExpression instanceof CtStatement)) {\n-\t\t\telementPrinterHelper.writeComment(thenExpression, CommentOffset.BEFORE);\n-\t\t}\n \t\tscan(thenExpression);\n-\t\tif (!(thenExpression instanceof CtStatement)) {\n-\t\t\telementPrinterHelper.writeComment(thenExpression, CommentOffset.AFTER);\n-\t\t}\n \t\tprinter.write(\" : \");\n \n \t\tCtExpression<T> elseExpression = conditional.getElseExpression();\n@@ -543,13 +537,7 @@ public class DefaultJavaPrettyPrinter implements CtVisitor, PrettyPrinter {\n \t\tif ((isAssign = elseExpression instanceof CtAssignment)) {\n \t\t\tprinter.write(\"(\");\n \t\t}\n-\t\tif (!(elseExpression instanceof CtStatement)) {\n-\t\t\telementPrinterHelper.writeComment(elseExpression, CommentOffset.BEFORE);\n-\t\t}\n \t\tscan(elseExpression);\n-\t\tif (!(elseExpression instanceof CtStatement)) {\n-\t\t\telementPrinterHelper.writeComment(elseExpression, CommentOffset.AFTER);\n-\t\t}\n \t\tif (isAssign) {\n \t\t\tprinter.write(\")\");\n \t\t}\n@@ -1188,7 +1176,6 @@ public class DefaultJavaPrettyPrinter implements CtVisitor, PrettyPrinter {\n \t@SuppressWarnings(\"rawtypes\")\n \tpublic <T> void visitCtNewArray(CtNewArray<T> newArray) {\n \t\tenterCtExpression(newArray);\n-\t\telementPrinterHelper.writeComment(newArray, CommentOffset.BEFORE);\n \t\tboolean isNotInAnnotation;\n \t\ttry {\n \t\t\tisNotInAnnotation = (newArray.getParent(CtAnnotationType.class) == null) && (newArray.getParent(CtAnnotation.class) == null);\n@@ -1210,13 +1197,7 @@ public class DefaultJavaPrettyPrinter implements CtVisitor, PrettyPrinter {\n \t\t\t\tprinter.write(\"[\");\n \t\t\t\tif (newArray.getDimensionExpressions().size() > i) {\n \t\t\t\t\tCtExpression<Integer> e = newArray.getDimensionExpressions().get(i);\n-\t\t\t\t\tif (!(e instanceof CtStatement)) {\n-\t\t\t\t\t\telementPrinterHelper.writeComment(e, CommentOffset.BEFORE);\n-\t\t\t\t\t}\n \t\t\t\t\tscan(e);\n-\t\t\t\t\tif (!(e instanceof CtStatement)) {\n-\t\t\t\t\t\telementPrinterHelper.writeComment(e, CommentOffset.AFTER);\n-\t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\tprinter.write(\"]\");\n \t\t\t\tref = ((CtArrayTypeReference) ref).getComponentType();\n@@ -1227,21 +1208,16 @@ public class DefaultJavaPrettyPrinter implements CtVisitor, PrettyPrinter {\n \t\t\tList<CtExpression<?>> l_elements = newArray.getElements();\n \t\t\tfor (int i = 0; i < l_elements.size(); i++) {\n \t\t\t\tCtExpression e = l_elements.get(i);\n-\t\t\t\tif (!(e instanceof CtStatement)) {\n-\t\t\t\t\telementPrinterHelper.writeComment(e, CommentOffset.BEFORE);\n-\t\t\t\t}\n \t\t\t\tscan(e);\n \t\t\t\tprinter.write(\" , \");\n \t\t\t\tif (i + 1 == l_elements.size()) {\n-\t\t\t\t\t/*\n-\t\t\t\t\t * we have to remove last char before we writeComment.\n-\t\t\t\t\t * We cannot simply skip adding of \" , \",\n-\t\t\t\t\t * because it influences formatting and EOL too\n-\t\t\t\t\t */\n \t\t\t\t\tprinter.removeLastChar();\n-\t\t\t\t}\n-\t\t\t\tif (!(e instanceof CtStatement)) {\n-\t\t\t\t\telementPrinterHelper.writeComment(e, CommentOffset.AFTER);\n+\t\t\t\t\t// if the last element c\n+\t\t\t\t\tList<CtComment> comments = elementPrinterHelper.getComments(e, CommentOffset.AFTER);\n+\t\t\t\t\t// if the last element contains an inline comment, print a new line before closing the array\n+\t\t\t\t\tif (!comments.isEmpty() && comments.get(comments.size() - 1).getCommentType() == CtComment.CommentType.INLINE) {\n+\t\t\t\t\t\tprinter.insertLine();\n+\t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \ndiff --git a/src/main/java/spoon/support/compiler/jdt/ParentExiter.java b/src/main/java/spoon/support/compiler/jdt/ParentExiter.java\nindex f7fa778c07..23f33cdada 100644\n--- a/src/main/java/spoon/support/compiler/jdt/ParentExiter.java\n+++ b/src/main/java/spoon/support/compiler/jdt/ParentExiter.java\n@@ -75,6 +75,7 @@ import spoon.reflect.code.CtUnaryOperator;\n import spoon.reflect.code.BinaryOperatorKind;\n import spoon.reflect.code.CtThisAccess;\n import spoon.reflect.code.CtLocalVariable;\n+import spoon.reflect.cu.SourcePosition;\n import spoon.reflect.declaration.CtAnnotation;\n import spoon.reflect.declaration.CtElement;\n import spoon.reflect.declaration.CtExecutable;\n@@ -397,6 +398,10 @@ public class ParentExiter extends CtInheritanceScanner {\n \t\t\t\top.setLeftHandOperand(operator.getRightHandOperand());\n \t\t\t\top.setRightHandOperand((CtExpression<?>) child);\n \t\t\t\toperator.setRightHandOperand(op);\n+\t\t\t\tint[] lineSeparatorPositions = this.jdtTreeBuilder.getContextBuilder().compilationunitdeclaration.compilationResult.lineSeparatorPositions;\n+\t\t\t\tSourcePosition leftPosition = op.getLeftHandOperand().getPosition();\n+\t\t\t\tSourcePosition rightPosition = op.getRightHandOperand().getPosition();\n+\t\t\t\top.setPosition(op.getFactory().createSourcePosition(leftPosition.getCompilationUnit(), leftPosition.getSourceStart(), rightPosition.getSourceEnd(), lineSeparatorPositions));\n \t\t\t\treturn;\n \t\t\t}\n \t\t}\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 179444400,
        "hostName": "local",
        "totalMemory": 253755392,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 7:27:03 PM",
      "projectRootPomPath": "./workspace/INRIA/spoon/193004144/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            64
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 64
        },
        "testing": {
          "stepDurations": [
            230
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 230
        },
        "cloning": {
          "stepDurations": [
            17
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 17
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 7:17:18 PM",
      "totalDuration": 577
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 995,
        "numberRunning": 996,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 2
      },
      "failingModule": "/root/workspace/INRIA/spoon/196963859",
      "failingClasses": [
        {
          "numberPassing": 5,
          "numberRunning": 6,
          "testClass": "spoon.test.prettyprinter.PrinterTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testAutoimportModeDontImportUselessStatic",
          "testClass": "spoon.test.prettyprinter.PrinterTest",
          "detail": "The result should not contain import static: ",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/196966996",
        "date": "Jan 31, 2017 3:50:13 PM",
        "id": 196966996
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/196963859",
        "date": "Jan 31, 2017 3:41:53 PM",
        "id": 196963859
      }
    },
    "repository": {
      "name": "INRIA-spoon",
      "url": "https://github.com/INRIA/spoon",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 14176513
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/23ba99df0825643a841941d7d764ed01ce7d952c",
        "sha": "23ba99df0825643a841941d7d764ed01ce7d952c",
        "branchName": "master",
        "date": "Jan 31, 2017 3:41:49 PM",
        "repoName": "INRIA/spoon"
      },
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/6bef9fd815d506f5ab48efdc1c902a0df2a26824",
        "sha": "6bef9fd815d506f5ab48efdc1c902a0df2a26824",
        "branchName": "master",
        "date": "Jan 31, 2017 3:32:28 PM",
        "repoName": "INRIA/spoon"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/INRIA-spoon-196963859-196966996\n",
    "projectMetrics": {
      "numberSourceFiles": 458,
      "numberLibrariesFailingModule": 10,
      "numberTestFiles": 468,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 3,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 152,
        "numberDeleted": 166
      }
    },
    "diff": "diff --git a/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java b/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java\nindex 14baa95c52..f3dc890ee1 100644\n--- a/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java\n+++ b/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java\n@@ -16,6 +16,7 @@\n  */\n package spoon.reflect.visitor;\n \n+import spoon.reflect.code.CtBlock;\n import spoon.reflect.code.CtCatchVariable;\n import spoon.reflect.code.CtFieldAccess;\n import spoon.reflect.code.CtFieldRead;\n@@ -26,9 +27,13 @@ import spoon.reflect.declaration.CtClass;\n import spoon.reflect.declaration.CtElement;\n import spoon.reflect.declaration.CtEnum;\n import spoon.reflect.declaration.CtExecutable;\n+import spoon.reflect.declaration.CtField;\n import spoon.reflect.declaration.CtInterface;\n+import spoon.reflect.declaration.CtMethod;\n+import spoon.reflect.declaration.CtPackage;\n import spoon.reflect.declaration.CtType;\n import spoon.reflect.declaration.CtTypeMember;\n+import spoon.reflect.declaration.CtVariable;\n import spoon.reflect.declaration.ParentNotInitializedException;\n import spoon.reflect.reference.CtArrayTypeReference;\n import spoon.reflect.reference.CtExecutableReference;\n@@ -44,7 +49,11 @@ import java.util.Arrays;\n import java.util.Collection;\n import java.util.Collections;\n import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.LinkedList;\n+import java.util.List;\n import java.util.Map;\n+import java.util.Set;\n import java.util.TreeMap;\n \n /**\n@@ -63,6 +72,7 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \t//top declaring type of that import\n \tprotected CtTypeReference<?> targetType;\n \tprivate Map<String, Boolean> namesPresentInJavaLang = new HashMap<>();\n+\tprivate Set<String> fieldAndMethodsNames = new HashSet<String>();\n \n \t@Override\n \tpublic <T> void visitCtFieldRead(CtFieldRead<T> fieldRead) {\n@@ -377,7 +387,11 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \t */\n \tprivate boolean declaringTypeIsLocalOrImported(CtTypeReference declaringType) {\n \t\tif (declaringType != null) {\n-\t\t\tif (isImportedInClassImports(declaringType)) {\n+\t\t\tif (isImportedInClassImports(declaringType) || classNamePresentInJavaLang(declaringType)) {\n+\t\t\t\treturn true;\n+\t\t\t}\n+\n+\t\t\tif (!isTypeInCollision(declaringType, false) && addClassImport(declaringType)) {\n \t\t\t\treturn true;\n \t\t\t}\n \n@@ -479,4 +493,146 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \t\t}\n \t\treturn presentInJavaLang;\n \t}\n+\n+\tprotected Set<String> lookForLocalVariables(CtElement parent) {\n+\t\tSet<String> result = new HashSet<>();\n+\n+\t\t// try to get the block container\n+\t\t// if the first container is the class, then we are not in a block and we can quit now.\n+\t\twhile (parent != null && !(parent instanceof CtBlock)) {\n+\t\t\tif (parent instanceof CtClass) {\n+\t\t\t\treturn result;\n+\t\t\t}\n+\t\t\tparent = parent.getParent();\n+\t\t}\n+\n+\t\tif (parent != null) {\n+\t\t\tCtBlock block = (CtBlock) parent;\n+\t\t\tboolean innerClass = false;\n+\n+\t\t\t// now we have the first container block, we want to check if we're not in an inner class\n+\t\t\twhile (parent != null && !(parent instanceof CtClass)) {\n+\t\t\t\tparent = parent.getParent();\n+\t\t\t}\n+\n+\t\t\tif (parent != null) {\n+\t\t\t\t// uhoh it's not a package as a parent, we must in an inner block:\n+\t\t\t\t// let's find the last block BEFORE the class call: some collision could occur because of variables defined in that block\n+\t\t\t\tif (!(parent.getParent() instanceof CtPackage)) {\n+\t\t\t\t\twhile (parent != null && !(parent instanceof CtBlock)) {\n+\t\t\t\t\t\tparent = parent.getParent();\n+\t\t\t\t\t}\n+\n+\t\t\t\t\tif (parent != null) {\n+\t\t\t\t\t\tblock = (CtBlock) parent;\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t\tAccessibleVariablesFinder avf = new AccessibleVariablesFinder(block);\n+\t\t\tList<CtVariable> variables = avf.find();\n+\n+\t\t\tfor (CtVariable variable : variables) {\n+\t\t\t\tresult.add(variable.getSimpleName());\n+\t\t\t}\n+\t\t}\n+\n+\t\treturn result;\n+\t}\n+\n+\t/**\n+\t * Test if the reference can be imported, i.e. test if the importation could lead to a collision.\n+\t * In FQN mode, it only tests the first package name: if a collision occurs with this first one, it should be imported.\n+\t * @param ref\n+\t * @return true if the ref should be imported.\n+\t */\n+\tprotected boolean isTypeInCollision(CtReference ref, boolean fqnMode) {\n+\t\tif (targetType.getSimpleName().equals(ref.getSimpleName()) && !targetType.equals(ref)) {\n+\t\t\treturn true;\n+\t\t}\n+\n+\t\ttry {\n+\t\t\tCtElement parent;\n+\t\t\tif (ref instanceof CtTypeReference) {\n+\t\t\t\tparent = ref.getParent();\n+\t\t\t} else {\n+\t\t\t\tparent = ref;\n+\t\t\t}\n+\n+\t\t\tSet<String> localVariablesOfBlock = new HashSet<>();\n+\n+\t\t\tif (parent instanceof CtField) {\n+\t\t\t\tthis.fieldAndMethodsNames.add(((CtField) parent).getSimpleName());\n+\t\t\t} else if (parent instanceof CtMethod) {\n+\t\t\t\tthis.fieldAndMethodsNames.add(((CtMethod) parent).getSimpleName());\n+\t\t\t} else {\n+\t\t\t\tlocalVariablesOfBlock = this.lookForLocalVariables(parent);\n+\t\t\t}\n+\n+\t\t\twhile (!(parent instanceof CtPackage)) {\n+\t\t\t\tif ((parent instanceof CtFieldReference) || (parent instanceof CtExecutableReference)) {\n+\t\t\t\t\tCtReference parentType = (CtReference) parent;\n+\t\t\t\t\tLinkedList<String> qualifiedNameTokens = new LinkedList<>();\n+\n+\t\t\t\t\t// we don't want to test the current ref name, as we risk to create field import and make autoreference\n+\t\t\t\t\tif (parentType != parent) {\n+\t\t\t\t\t\tqualifiedNameTokens.add(parentType.getSimpleName());\n+\t\t\t\t\t}\n+\n+\t\t\t\t\tCtTypeReference typeReference;\n+\t\t\t\t\tif (parent instanceof CtFieldReference) {\n+\t\t\t\t\t\ttypeReference = ((CtFieldReference) parent).getDeclaringType();\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\ttypeReference = ((CtExecutableReference) parent).getDeclaringType();\n+\t\t\t\t\t}\n+\n+\t\t\t\t\tif (typeReference != null) {\n+\t\t\t\t\t\tqualifiedNameTokens.add(typeReference.getSimpleName());\n+\n+\t\t\t\t\t\tif (typeReference.getPackage() != null) {\n+\t\t\t\t\t\t\tCtPackage ctPackage = typeReference.getPackage().getDeclaration();\n+\n+\t\t\t\t\t\t\twhile (ctPackage != null) {\n+\t\t\t\t\t\t\t\tqualifiedNameTokens.add(ctPackage.getSimpleName());\n+\n+\t\t\t\t\t\t\t\tCtElement packParent = ctPackage.getParent();\n+\t\t\t\t\t\t\t\tif (packParent.getParent() != null && !((CtPackage) packParent).getSimpleName().equals(CtPackage.TOP_LEVEL_PACKAGE_NAME)) {\n+\t\t\t\t\t\t\t\t\tctPackage = (CtPackage) packParent;\n+\t\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\t\tctPackage = null;\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t\tif (!qualifiedNameTokens.isEmpty()) {\n+\t\t\t\t\t\t// qualified name token are ordered in the reverse order\n+\t\t\t\t\t\t// if the first package name is a variable name somewhere, it could lead to a collision\n+\t\t\t\t\t\tif (fieldAndMethodsNames.contains(qualifiedNameTokens.getLast()) || localVariablesOfBlock.contains(qualifiedNameTokens.getLast())) {\n+\t\t\t\t\t\t\tqualifiedNameTokens.removeLast();\n+\n+\t\t\t\t\t\t\tif (fqnMode) {\n+\t\t\t\t\t\t\t\treturn true;\n+\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\t// but if the other package names are not a variable name, it's ok to import\n+\t\t\t\t\t\t\t\tfor (int i = qualifiedNameTokens.size() - 1; i > 0; i--) {\n+\t\t\t\t\t\t\t\t\tString testedToken = qualifiedNameTokens.get(i);\n+\t\t\t\t\t\t\t\t\tif (!fieldAndMethodsNames.contains(testedToken) && !localVariablesOfBlock.contains(testedToken)) {\n+\t\t\t\t\t\t\t\t\t\treturn false;\n+\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\treturn true;\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\n+\n+\t\t\t\t}\n+\t\t\t\tparent = parent.getParent();\n+\t\t\t}\n+\t\t} catch (ParentNotInitializedException e) {\n+\t\t\treturn false;\n+\t\t}\n+\n+\t\treturn false;\n+\t}\n }\ndiff --git a/src/main/java/spoon/reflect/visitor/MinimalImportScanner.java b/src/main/java/spoon/reflect/visitor/MinimalImportScanner.java\nindex 65c993938f..912692f6cb 100644\n--- a/src/main/java/spoon/reflect/visitor/MinimalImportScanner.java\n+++ b/src/main/java/spoon/reflect/visitor/MinimalImportScanner.java\n@@ -16,94 +16,19 @@\n  */\n package spoon.reflect.visitor;\n \n-import spoon.reflect.code.CtBlock;\n-import spoon.reflect.declaration.CtClass;\n-import spoon.reflect.declaration.CtElement;\n-import spoon.reflect.declaration.CtField;\n-import spoon.reflect.declaration.CtMethod;\n-import spoon.reflect.declaration.CtPackage;\n-import spoon.reflect.declaration.CtVariable;\n-import spoon.reflect.declaration.ParentNotInitializedException;\n import spoon.reflect.reference.CtExecutableReference;\n import spoon.reflect.reference.CtFieldReference;\n import spoon.reflect.reference.CtReference;\n import spoon.reflect.reference.CtTypeReference;\n \n-import java.util.HashSet;\n-import java.util.LinkedList;\n-import java.util.List;\n-import java.util.Set;\n-\n /**\n  * A scanner dedicated to import only the necessary packages, @see spoon.test.variable.AccessFullyQualifiedTest\n  *\n  */\n public class MinimalImportScanner extends ImportScannerImpl implements ImportScanner {\n \n-\tprivate Set<String> fieldAndMethodsNames = new HashSet<String>();\n-\n-\tprivate CtClass getParentClass(CtReference ref) {\n-\t\tCtElement parent = ref.getParent();\n-\n-\t\twhile (parent != null && !(parent instanceof CtClass)) {\n-\t\t\tparent = parent.getParent();\n-\t\t}\n-\n-\t\tif (parent == null) {\n-\t\t\treturn null;\n-\t\t} else {\n-\t\t\treturn (CtClass) parent;\n-\t\t}\n-\t}\n-\n-\tprivate Set<String> lookForLocalVariables(CtElement parent) {\n-\t\tSet<String> result = new HashSet<>();\n-\n-\t\t// try to get the block container\n-\t\t// if the first container is the class, then we are not in a block and we can quit now.\n-\t\twhile (parent != null && !(parent instanceof CtBlock)) {\n-\t\t\tif (parent instanceof CtClass) {\n-\t\t\t\treturn result;\n-\t\t\t}\n-\t\t\tparent = parent.getParent();\n-\t\t}\n-\n-\t\tif (parent != null) {\n-\t\t\tCtBlock block = (CtBlock) parent;\n-\t\t\tboolean innerClass = false;\n-\n-\t\t\t// now we have the first container block, we want to check if we're not in an inner class\n-\t\t\twhile (parent != null && !(parent instanceof CtClass)) {\n-\t\t\t\tparent = parent.getParent();\n-\t\t\t}\n-\n-\t\t\tif (parent != null) {\n-\t\t\t\t// uhoh it's not a package as a parent, we must in an inner block:\n-\t\t\t\t// let's find the last block BEFORE the class call: some collision could occur because of variables defined in that block\n-\t\t\t\tif (!(parent.getParent() instanceof CtPackage)) {\n-\t\t\t\t\twhile (parent != null && !(parent instanceof CtBlock)) {\n-\t\t\t\t\t\tparent = parent.getParent();\n-\t\t\t\t\t}\n-\n-\t\t\t\t\tif (parent != null) {\n-\t\t\t\t\t\tblock = (CtBlock) parent;\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n-\n-\t\t\tAccessibleVariablesFinder avf = new AccessibleVariablesFinder(block);\n-\t\t\tList<CtVariable> variables = avf.find();\n-\n-\t\t\tfor (CtVariable variable : variables) {\n-\t\t\t\tresult.add(variable.getSimpleName());\n-\t\t\t}\n-\t\t}\n-\n-\t\treturn result;\n-\t}\n-\n \t/**\n-\t * Test if the reference should be imported by looking if there is a name conflict\n+\t * This method use @link{ImportScannerImpl#isTypeInCollision} to import a ref only if there is a collision\n \t * @param ref\n \t * @return true if the ref should be imported.\n \t */\n@@ -113,74 +38,7 @@ public class MinimalImportScanner extends ImportScannerImpl implements ImportSca\n \t\t\treturn true;\n \t\t}\n \n-\t\ttry {\n-\t\t\tCtElement parent;\n-\t\t\tif (ref instanceof CtTypeReference) {\n-\t\t\t\tparent = ref.getParent();\n-\t\t\t} else {\n-\t\t\t\tparent = ref;\n-\t\t\t}\n-\n-\t\t\tSet<String> localVariablesOfBlock = new HashSet<>();\n-\n-\t\t\tif (parent instanceof CtField) {\n-\t\t\t\tthis.fieldAndMethodsNames.add(((CtField) parent).getSimpleName());\n-\t\t\t} else if (parent instanceof CtMethod) {\n-\t\t\t\tthis.fieldAndMethodsNames.add(((CtMethod) parent).getSimpleName());\n-\t\t\t} else {\n-\t\t\t\tlocalVariablesOfBlock = this.lookForLocalVariables(parent);\n-\t\t\t}\n-\n-\t\t\twhile (!(parent instanceof CtPackage)) {\n-\t\t\t\tif ((parent instanceof CtFieldReference) || (parent instanceof CtExecutableReference)) {\n-\t\t\t\t\tCtReference parentType = (CtReference) parent;\n-\t\t\t\t\tLinkedList<String> qualifiedNameTokens = new LinkedList<>();\n-\n-\t\t\t\t\t// we don't want to test the current ref name, as we risk to create field import and make autoreference\n-\t\t\t\t\tif (parentType != parent) {\n-\t\t\t\t\t\tqualifiedNameTokens.add(parentType.getSimpleName());\n-\t\t\t\t\t}\n-\n-\t\t\t\t\tCtTypeReference typeReference;\n-\t\t\t\t\tif (parent instanceof CtFieldReference) {\n-\t\t\t\t\t\ttypeReference = ((CtFieldReference) parent).getDeclaringType();\n-\t\t\t\t\t} else {\n-\t\t\t\t\t\ttypeReference = ((CtExecutableReference) parent).getDeclaringType();\n-\t\t\t\t\t}\n-\n-\t\t\t\t\tif (typeReference != null) {\n-\t\t\t\t\t\tqualifiedNameTokens.add(typeReference.getSimpleName());\n-\n-\t\t\t\t\t\tif (typeReference.getPackage() != null) {\n-\t\t\t\t\t\t\tCtPackage ctPackage = typeReference.getPackage().getDeclaration();\n-\n-\t\t\t\t\t\t\twhile (ctPackage != null) {\n-\t\t\t\t\t\t\t\tqualifiedNameTokens.add(ctPackage.getSimpleName());\n-\n-\t\t\t\t\t\t\t\tCtElement packParent = ctPackage.getParent();\n-\t\t\t\t\t\t\t\tif (packParent.getParent() != null && !((CtPackage) packParent).getSimpleName().equals(CtPackage.TOP_LEVEL_PACKAGE_NAME)) {\n-\t\t\t\t\t\t\t\t\tctPackage = (CtPackage) packParent;\n-\t\t\t\t\t\t\t\t} else {\n-\t\t\t\t\t\t\t\t\tctPackage = null;\n-\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t\t\tif (!qualifiedNameTokens.isEmpty()) {\n-\t\t\t\t\t\tif (fieldAndMethodsNames.contains(qualifiedNameTokens.getLast()) || localVariablesOfBlock.contains(qualifiedNameTokens.getLast())) {\n-\t\t\t\t\t\t\treturn true;\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\n-\n-\t\t\t\t}\n-\t\t\t\tparent = parent.getParent();\n-\t\t\t}\n-\t\t} catch (ParentNotInitializedException e) {\n-\t\t\treturn false;\n-\t\t}\n-\n-\t\treturn false;\n+\t\treturn isTypeInCollision(ref, true);\n \t}\n \n \t@Override\ndiff --git a/src/main/java/spoon/reflect/visitor/printer/ElementPrinterHelper.java b/src/main/java/spoon/reflect/visitor/printer/ElementPrinterHelper.java\nindex 63f58e02d8..2133fe568b 100644\n--- a/src/main/java/spoon/reflect/visitor/printer/ElementPrinterHelper.java\n+++ b/src/main/java/spoon/reflect/visitor/printer/ElementPrinterHelper.java\n@@ -265,19 +265,27 @@ public class ElementPrinterHelper {\n \t\t\t}\n \t\t\tprinter.writeln().writeln().writeTabs();\n \t\t\tfor (CtReference ref : imports) {\n+\t\t\t\tString importStr = \"import\";\n+\t\t\t\tString importTypeStr = \"\";\n+\n \t\t\t\tif (ref instanceof CtTypeReference) {\n \t\t\t\t\tCtTypeReference typeRef = (CtTypeReference) ref;\n-\t\t\t\t\tprinter.write(\"import \" + typeRef.getQualifiedName() + \";\").writeln().writeTabs();\n+\t\t\t\t\timportTypeStr = typeRef.getQualifiedName();\n \t\t\t\t} else if (ref instanceof CtExecutableReference) {\n+\t\t\t\t\timportStr += \" static\";\n \t\t\t\t\tCtExecutableReference execRef = (CtExecutableReference) ref;\n \t\t\t\t\tif (execRef.getDeclaringType() != null) {\n-\t\t\t\t\t\tprinter.write(\"import static \" + this.removeInnerTypeSeparator(execRef.getDeclaringType().getQualifiedName()) + \".\" + execRef.getSimpleName() + \";\").writeln().writeTabs();\n+\t\t\t\t\t\timportTypeStr = this.removeInnerTypeSeparator(execRef.getDeclaringType().getQualifiedName()) + \".\" + execRef.getSimpleName();\n \t\t\t\t\t}\n \t\t\t\t} else if (ref instanceof CtFieldReference) {\n+\t\t\t\t\timportStr += \" static\";\n \t\t\t\t\tCtFieldReference fieldRef = (CtFieldReference) ref;\n-\t\t\t\t\tprinter.write(\"import static \" + this.removeInnerTypeSeparator(fieldRef.getDeclaringType().getQualifiedName()) + \".\" + fieldRef.getSimpleName() + \";\").writeln().writeTabs();\n+\t\t\t\t\timportTypeStr = this.removeInnerTypeSeparator(fieldRef.getDeclaringType().getQualifiedName()) + \".\" + fieldRef.getSimpleName();\n \t\t\t\t}\n \n+\t\t\t\tif (!importTypeStr.equals(\"\")) {\n+\t\t\t\t\tprinter.write(importStr + \" \" + importTypeStr + \";\").writeln().writeTabs();\n+\t\t\t\t}\n \t\t\t}\n \t\t\tprinter.writeln().writeTabs();\n \t\t}\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 97585392,
        "hostName": "local",
        "totalMemory": 272629760,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 7:20:05 PM",
      "projectRootPomPath": "./workspace/INRIA/spoon/196963859/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            65
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 65
        },
        "testing": {
          "stepDurations": [
            270
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 270
        },
        "cloning": {
          "stepDurations": [
            17
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 17
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 7:08:12 PM",
      "totalDuration": 706
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1000,
        "numberRunning": 1001,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 2
      },
      "failingModule": "/root/workspace/INRIA/spoon/197673696",
      "failingClasses": [
        {
          "numberPassing": 3,
          "numberRunning": 4,
          "testClass": "spoon.test.imports.ImportScannerTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testComputeImportsInClassWithSameName",
          "testClass": "spoon.test.imports.ImportScannerTest",
          "detail": "expected:<0> but was:<1>",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/197674087",
        "date": "Feb 2, 2017 4:27:43 PM",
        "id": 197674087
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/197673696",
        "date": "Feb 2, 2017 4:26:39 PM",
        "id": 197673696
      }
    },
    "repository": {
      "name": "INRIA-spoon",
      "url": "https://github.com/INRIA/spoon",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 14176513
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/a727953e00ea1f8fa64b11cb2d237a709fd15e38",
        "sha": "a727953e00ea1f8fa64b11cb2d237a709fd15e38",
        "branchName": "master",
        "date": "Feb 2, 2017 4:18:40 PM",
        "repoName": "INRIA/spoon"
      },
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/3c03c32553a2eb0e5fea8e953a87c0bf5d57eb20",
        "sha": "3c03c32553a2eb0e5fea8e953a87c0bf5d57eb20",
        "branchName": "master",
        "date": "Feb 2, 2017 4:17:45 PM",
        "repoName": "INRIA/spoon"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/INRIA-spoon-197673696-197674087\n",
    "projectMetrics": {
      "numberSourceFiles": 461,
      "numberLibrariesFailingModule": 10,
      "numberTestFiles": 470,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 1,
        "numberDeleted": 8
      }
    },
    "diff": "diff --git a/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java b/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java\nindex f3dc890ee1..f5591cfdc5 100644\n--- a/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java\n+++ b/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java\n@@ -255,6 +255,13 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \t * Adds a type to the classImports.\n \t */\n \tprotected boolean addClassImport(CtTypeReference<?> ref) {\n+\t\tif (ref == null) {\n+\t\t\treturn false;\n+\t\t}\n+\n+\t\tif (targetType != null && targetType.getSimpleName().equals(ref.getSimpleName()) && !targetType.equals(ref)) {\n+\t\t\treturn false;\n+\t\t}\n \t\tif (classImports.containsKey(ref.getSimpleName())) {\n \t\t\treturn isImportedInClassImports(ref);\n \t\t}\n@@ -277,6 +284,7 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \n \t\t// we want to be sure that we are not importing a class because a static field or method we already imported\n \t\t// moreover we make exception for same package classes to avoid problems in FQN mode\n+\n \t\tif (targetType != null) {\n \t\t\ttry {\n \t\t\t\tCtElement parent = ref.getParent();\n@@ -341,7 +349,6 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \t\t\t\t}\n \t\t\t}\n \t\t}\n-\n \t\t//note: we must add the type refs from the same package too, to assure that isImported(typeRef) returns true for them\n \t\t//these type refs are removed in #getClassImports()\n \t\tclassImports.put(ref.getSimpleName(), ref);\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 142754360,
        "hostName": "local",
        "totalMemory": 288358400,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 8:33:38 AM",
      "projectRootPomPath": "./workspace/INRIA/spoon/197673696/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            1,
            0,
            0,
            0,
            95
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 96
        },
        "testing": {
          "stepDurations": [
            294
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 294
        },
        "cloning": {
          "stepDurations": [
            22
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 22
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 8:21:03 AM",
      "totalDuration": 748
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1001,
        "numberRunning": 1002,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 2
      },
      "failingModule": "/root/workspace/INRIA/spoon/197674087",
      "failingClasses": [
        {
          "numberPassing": 5,
          "numberRunning": 6,
          "testClass": "spoon.test.interfaces.InterfaceTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testDefaultMethodInConsumer",
          "testClass": "spoon.test.interfaces.InterfaceTest",
          "detail": "The method in the interface must to be default",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/198523383",
        "date": "Feb 5, 2017 11:23:59 AM",
        "id": 198523383
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/197674087",
        "date": "Feb 2, 2017 4:27:43 PM",
        "id": 197674087
      }
    },
    "repository": {
      "name": "INRIA-spoon",
      "url": "https://github.com/INRIA/spoon",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 14176513
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/870a297e6b21673c5c62890cf4b57807dfaf3480",
        "sha": "870a297e6b21673c5c62890cf4b57807dfaf3480",
        "branchName": "master",
        "date": "Feb 5, 2017 11:15:35 AM",
        "repoName": "INRIA/spoon"
      },
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/a727953e00ea1f8fa64b11cb2d237a709fd15e38",
        "sha": "a727953e00ea1f8fa64b11cb2d237a709fd15e38",
        "branchName": "master",
        "date": "Feb 2, 2017 4:18:40 PM",
        "repoName": "INRIA/spoon"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/INRIA-spoon-197674087-198523383\n",
    "projectMetrics": {
      "numberSourceFiles": 461,
      "numberLibrariesFailingModule": 10,
      "numberTestFiles": 470,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 2,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 29,
        "numberDeleted": 12
      }
    },
    "diff": "diff --git a/src/main/java/spoon/support/visitor/java/JavaReflectionTreeBuilder.java b/src/main/java/spoon/support/visitor/java/JavaReflectionTreeBuilder.java\nindex 6ce5723f98..fe82d9360c 100644\n--- a/src/main/java/spoon/support/visitor/java/JavaReflectionTreeBuilder.java\n+++ b/src/main/java/spoon/support/visitor/java/JavaReflectionTreeBuilder.java\n@@ -245,6 +245,7 @@ public class JavaReflectionTreeBuilder extends JavaReflectionVisitorImpl {\n \t\tctMethod.setSimpleName(method.getName());\n \t\tctMethod.setBody(factory.Core().createBlock());\n \t\tsetModifier(ctMethod, method.getModifiers());\n+\t\tctMethod.setDefaultMethod(method.isDefault());\n \n \t\tenter(new ExecutableRuntimeBuilderContext(ctMethod));\n \t\tsuper.visitMethod(method);\ndiff --git a/src/main/java/spoon/support/visitor/java/reflect/RtMethod.java b/src/main/java/spoon/support/visitor/java/reflect/RtMethod.java\nindex 727969e566..d33761f6b5 100644\n--- a/src/main/java/spoon/support/visitor/java/reflect/RtMethod.java\n+++ b/src/main/java/spoon/support/visitor/java/reflect/RtMethod.java\n@@ -17,12 +17,15 @@\n package spoon.support.visitor.java.reflect;\n \n import java.lang.annotation.Annotation;\n+import java.lang.reflect.InvocationTargetException;\n import java.lang.reflect.Method;\n import java.lang.reflect.TypeVariable;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.List;\n \n+import spoon.SpoonException;\n+\n public class RtMethod {\n \tprivate Class<?> clazz;\n \tprivate String name;\n@@ -34,9 +37,10 @@ public class RtMethod {\n \tprivate Annotation[] annotations;\n \tprivate Annotation[][] parameterAnnotations;\n \tprivate boolean isVarArgs;\n+\tprivate boolean isDefault;\n \n \tpublic RtMethod(Class<?> clazz, String name, Class<?> returnType, TypeVariable<Method>[] typeParameters, Class<?>[] parameterTypes, Class<?>[] exceptionTypes, int modifiers, Annotation[] annotations,\n-\t\t\tAnnotation[][] parameterAnnotations, boolean isVarArgs) {\n+\t\t\tAnnotation[][] parameterAnnotations, boolean isVarArgs, boolean isDefault) {\n \t\tthis.clazz = clazz;\n \t\tthis.name = name;\n \t\tthis.returnType = returnType;\n@@ -47,6 +51,7 @@ public class RtMethod {\n \t\tthis.annotations = annotations;\n \t\tthis.parameterAnnotations = parameterAnnotations;\n \t\tthis.isVarArgs = isVarArgs;\n+\t\tthis.isDefault = isDefault;\n \t}\n \n \tpublic Class<?> getDeclaringClass() {\n@@ -89,6 +94,10 @@ public class RtMethod {\n \t\treturn isVarArgs;\n \t}\n \n+\tpublic boolean isDefault() {\n+\t\treturn isDefault;\n+\t}\n+\n \t@Override\n \tpublic boolean equals(Object o) {\n \t\tif (this == o) {\n@@ -120,7 +129,34 @@ public class RtMethod {\n \tpublic static RtMethod create(Method method) {\n \t\treturn new RtMethod(method.getDeclaringClass(), method.getName(), method.getReturnType(),\n \t\t\t\tmethod.getTypeParameters(), method.getParameterTypes(), method.getExceptionTypes(), method.getModifiers(),\n-\t\t\t\tmethod.getDeclaredAnnotations(), method.getParameterAnnotations(), method.isVarArgs());\n+\t\t\t\tmethod.getDeclaredAnnotations(), method.getParameterAnnotations(), method.isVarArgs(),\n+\t\t\t\t//spoon is compatible with Java 7, so compilation fails here\n+\t\t\t\t//method.isDefault());\n+\t\t\t\t_java8_isDefault(method));\n+\t}\n+\n+\tprivate static Method _method_isDefault;\n+\tstatic {\n+\t\ttry {\n+\t\t\t_method_isDefault = Method.class.getMethod(\"isDefault\");\n+\t\t} catch (NoSuchMethodException | SecurityException e) {\n+\t\t\t//spoon is running with java 7 JDK\n+\t\t\t_method_isDefault = null;\n+\t\t}\n+\t}\n+\n+\tprivate static boolean _java8_isDefault(Method method) {\n+\t\tif (_method_isDefault == null) {\n+\t\t\t//spoon is running with java 7 JDK, all methods are not default, because java 7 does not have default methods\n+\t\t\treturn false;\n+\t\t}\n+\t\ttry {\n+\t\t\treturn (Boolean) _method_isDefault.invoke(method);\n+\t\t} catch (IllegalAccessException | IllegalArgumentException e) {\n+\t\t\tthrow new SpoonException(\"Calling of Java8 Method#isDefault() failed\", e);\n+\t\t} catch (InvocationTargetException e) {\n+\t\t\tthrow new SpoonException(\"Calling of Java8 Method#isDefault() failed\", e.getTargetException());\n+\t\t}\n \t}\n \n \tpublic static <T> RtMethod[] methodsOf(Class<T> clazz) {\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 97150032,
        "hostName": "local",
        "totalMemory": 279445504,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 8:32:42 AM",
      "projectRootPomPath": "./workspace/INRIA/spoon/197674087/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            103
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 103
        },
        "testing": {
          "stepDurations": [
            283
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 283
        },
        "cloning": {
          "stepDurations": [
            20
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 20
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 8:19:47 AM",
      "totalDuration": 768
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1002,
        "numberRunning": 1005,
        "numberFailing": 0,
        "numberErroring": 3,
        "failures": [
          {
            "failureName": "spoon.SpoonException",
            "isError": true,
            "occurrences": 3
          }
        ],
        "numberSkipping": 2
      },
      "failingModule": "/root/workspace/INRIA/spoon/199972949",
      "failingClasses": [
        {
          "numberPassing": 18,
          "numberRunning": 20,
          "testClass": "spoon.test.lambda.LambdaTest",
          "numberFailing": 0,
          "numberErroring": 2,
          "numberSkipping": 0
        },
        {
          "numberPassing": 5,
          "numberRunning": 6,
          "testClass": "spoon.test.main.MainTest",
          "numberFailing": 0,
          "numberErroring": 1,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "spoon.SpoonException",
          "testMethod": "testCompileLambdaGeneratedBySpoon",
          "testClass": "spoon.test.lambda.LambdaTest",
          "detail": "The lambda can be based on interface, which has only one method. But spoon.test.lambda.testclasses.LambdaRxJava$NbpOperator has at least two: <T extends java.lang.Object> java.util.function.Function identity() and java.lang.Object apply(java.lang.Object)",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "testMethod": "testGetOverriddenMethodWithFunction",
          "testClass": "spoon.test.lambda.LambdaTest",
          "detail": "The lambda can be based on interface, which has only one method. But spoon.test.lambda.testclasses.LambdaRxJava$NbpOperator has at least two: <T extends java.lang.Object> java.util.function.Function identity() and java.lang.Object apply(java.lang.Object)",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "testMethod": "testTest",
          "testClass": "spoon.test.main.MainTest",
          "detail": "spoon.SpoonException: The lambda can be based on interface, which has only one method. But spoon.test.lambda.testclasses.LambdaRxJava$NbpOperator has at least two: <T extends java.lang.Object> java.util.function.Function identity() and java.lang.Object apply(java.lang.Object)",
          "isError": true
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/199993301",
        "date": "Feb 9, 2017 3:35:45 PM",
        "id": 199993301
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/199972949",
        "date": "Feb 9, 2017 2:32:36 PM",
        "id": 199972949
      }
    },
    "repository": {
      "name": "INRIA-spoon",
      "url": "https://github.com/INRIA/spoon",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 14176513
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/b63ac185bb5c83b60f1c1bdbc10aa9b4004ae3a6",
        "sha": "b63ac185bb5c83b60f1c1bdbc10aa9b4004ae3a6",
        "branchName": "master",
        "date": "Feb 9, 2017 3:27:05 PM",
        "repoName": "INRIA/spoon"
      },
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/fb9016f48e167c188c604492befa23560173be7e",
        "sha": "fb9016f48e167c188c604492befa23560173be7e",
        "branchName": "master",
        "date": "Feb 9, 2017 2:23:49 PM",
        "repoName": "INRIA/spoon"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/INRIA-spoon-199972949-199993301\n",
    "projectMetrics": {
      "numberSourceFiles": 461,
      "numberLibrariesFailingModule": 10,
      "numberTestFiles": 471,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 1,
        "numberDeleted": 1
      }
    },
    "diff": "diff --git a/src/main/java/spoon/support/reflect/code/CtLambdaImpl.java b/src/main/java/spoon/support/reflect/code/CtLambdaImpl.java\nindex cc74f8c79a..b52bf81c19 100644\n--- a/src/main/java/spoon/support/reflect/code/CtLambdaImpl.java\n+++ b/src/main/java/spoon/support/reflect/code/CtLambdaImpl.java\n@@ -109,7 +109,7 @@ public class CtLambdaImpl<T> extends CtExpressionImpl<T> implements CtLambda<T>\n \t\t\tlambdaExecutableMethod = lambdaTypeMethods.iterator().next();\n \t\t} else {\n \t\t\tfor (CtMethod<?> method : lambdaTypeMethods) {\n-\t\t\t\tif (method.isDefaultMethod() || method.hasModifier(ModifierKind.PRIVATE)) {\n+\t\t\t\tif (method.isDefaultMethod() || method.hasModifier(ModifierKind.PRIVATE) || method.hasModifier(ModifierKind.STATIC)) {\n \t\t\t\t\tcontinue;\n \t\t\t\t}\n \t\t\t\tif (lambdaExecutableMethod != null) {\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 188174168,
        "hostName": "local",
        "totalMemory": 247988224,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 8:18:36 AM",
      "projectRootPomPath": "./workspace/INRIA/spoon/199972949/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            85
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 85
        },
        "testing": {
          "stepDurations": [
            273
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 273
        },
        "cloning": {
          "stepDurations": [
            17
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 17
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 8:06:02 AM",
      "totalDuration": 746
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1023,
        "numberRunning": 1028,
        "numberFailing": 4,
        "numberErroring": 1,
        "failures": [
          {
            "failureName": "spoon.SpoonException",
            "isError": true,
            "occurrences": 1
          },
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 4
          }
        ],
        "numberSkipping": 2
      },
      "failingModule": "/root/workspace/INRIA/spoon/199993301",
      "failingClasses": [
        {
          "numberPassing": 3,
          "numberRunning": 7,
          "testClass": "spoon.test.query_function.VariableReferencesTest",
          "numberFailing": 3,
          "numberErroring": 1,
          "numberSkipping": 0
        },
        {
          "numberPassing": 9,
          "numberRunning": 10,
          "testClass": "spoon.test.reference.VariableAccessTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testVariableReferenceFunction",
          "testClass": "spoon.test.query_function.VariableReferencesTest",
          "detail": "Test failed on VariableReferencesModelTest#localVarsInFor",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testReferencesInInitExpression",
          "testClass": "spoon.test.reference.VariableAccessTest",
          "detail": "expected:<1> but was:<0>",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testLocalVariableReferenceDeclarationFunction",
          "testClass": "spoon.test.query_function.VariableReferencesTest",
          "detail": "CtLocalVariableReference#getDeclaration returned wrong declaration in VariableReferencesModelTest#localVarInNestedClass expected:<23> but was:<25>",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testLocalVariableReferenceFunction",
          "testClass": "spoon.test.query_function.VariableReferencesTest",
          "detail": "Test failed on VariableReferencesModelTest#localVarsInFor",
          "isError": false
        },
        {
          "failureName": "spoon.SpoonException",
          "testMethod": "testVariableScopeFunction",
          "testClass": "spoon.test.query_function.VariableReferencesTest",
          "detail": "Cannot found index of local variable declaration int field = 10 in statement list {\n    for (int field = 10; field == 10;) {\n        org.junit.Assert.assertTrue((field == 10));\n        break;\n    }\n    int field = 11;\n    org.junit.Assert.assertTrue((field == 11));\n}",
          "isError": true
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/200108848",
        "date": "Feb 9, 2017 9:06:23 PM",
        "id": 200108848
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/199993301",
        "date": "Feb 9, 2017 3:35:45 PM",
        "id": 199993301
      }
    },
    "repository": {
      "name": "INRIA-spoon",
      "url": "https://github.com/INRIA/spoon",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 14176513
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/05592e51945eb22dd570955c33c83a01d757bac8",
        "sha": "05592e51945eb22dd570955c33c83a01d757bac8",
        "branchName": "master",
        "date": "Feb 9, 2017 8:53:14 PM",
        "repoName": "INRIA/spoon"
      },
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/b63ac185bb5c83b60f1c1bdbc10aa9b4004ae3a6",
        "sha": "b63ac185bb5c83b60f1c1bdbc10aa9b4004ae3a6",
        "branchName": "master",
        "date": "Feb 9, 2017 3:27:05 PM",
        "repoName": "INRIA/spoon"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/INRIA-spoon-199993301-200108848\n",
    "projectMetrics": {
      "numberSourceFiles": 463,
      "numberLibrariesFailingModule": 10,
      "numberTestFiles": 473,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 3,
        "numberDeleted": 2
      },
      "lines": {
        "numberAdded": 106,
        "numberDeleted": 224
      }
    },
    "diff": "diff --git a/src/main/java/spoon/reflect/visitor/filter/LocalVariableReferenceFunction.java b/src/main/java/spoon/reflect/visitor/filter/LocalVariableReferenceFunction.java\nindex d11477e52d..2c64708e74 100644\n--- a/src/main/java/spoon/reflect/visitor/filter/LocalVariableReferenceFunction.java\n+++ b/src/main/java/spoon/reflect/visitor/filter/LocalVariableReferenceFunction.java\n@@ -17,7 +17,10 @@\n package spoon.reflect.visitor.filter;\r\n \r\n import spoon.reflect.code.CtLocalVariable;\r\n+import spoon.reflect.declaration.CtElement;\r\n+import spoon.reflect.declaration.CtType;\r\n import spoon.reflect.reference.CtLocalVariableReference;\r\n+import spoon.reflect.visitor.Filter;\r\n import spoon.reflect.visitor.chain.CtConsumableFunction;\r\n import spoon.reflect.visitor.chain.CtConsumer;\r\n \r\n@@ -40,10 +43,35 @@ public class LocalVariableReferenceFunction implements CtConsumableFunction<CtLo\n \t}\r\n \r\n \t@Override\r\n-\tpublic void apply(CtLocalVariable<?> localVariable, CtConsumer<Object> outputConsumer) {\r\n+\tpublic void apply(final CtLocalVariable<?> localVariable, CtConsumer<Object> outputConsumer) {\r\n+\t\tfinal String simpleName = localVariable.getSimpleName();\r\n+\t\tclass Context {\r\n+\t\t\tboolean hasLocalType = false;\r\n+\t\t}\r\n+\t\tfinal Context context = new Context();\r\n \t\tlocalVariable\r\n \t\t\t.map(new LocalVariableScopeFunction())\r\n-\t\t\t.select(new DirectReferenceFilter<CtLocalVariableReference<?>>(localVariable.getReference()))\r\n+\t\t\t.select(new Filter<CtElement>() {\r\n+\t\t\t\t@Override\r\n+\t\t\t\tpublic boolean matches(CtElement element) {\r\n+\t\t\t\t\tif (element instanceof CtType) {\r\n+\t\t\t\t\t\tcontext.hasLocalType = true;\r\n+\t\t\t\t\t} else if (element instanceof CtLocalVariableReference<?>) {\r\n+\t\t\t\t\t\tCtLocalVariableReference<?> localVarRef = (CtLocalVariableReference<?>) element;\r\n+\t\t\t\t\t\tif (simpleName.equals(localVarRef.getSimpleName())) {\r\n+\t\t\t\t\t\t\t//we have found a variable reference in visibility scope of localVariable\r\n+\t\t\t\t\t\t\tif (context.hasLocalType) {\r\n+\t\t\t\t\t\t\t\t//there exists a local type in visibility scope of this variable declaration\r\n+\t\t\t\t\t\t\t\t//the variable declarations in scope of this local class may shadow input localVariable\r\n+\t\t\t\t\t\t\t\t//so finally check that there is no other localVariable, which shadows the input localVariable\r\n+\t\t\t\t\t\t\t\treturn localVariable == localVarRef.getDeclaration();\r\n+\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\treturn true;\r\n+\t\t\t\t\t\t}\r\n+\t\t\t\t\t}\r\n+\t\t\t\t\treturn false;\r\n+\t\t\t\t}\r\n+\t\t\t})\r\n \t\t\t.forEach(outputConsumer);\r\n \t}\r\n }\r\ndiff --git a/src/main/java/spoon/reflect/visitor/filter/LocalVariableScopeFunction.java b/src/main/java/spoon/reflect/visitor/filter/LocalVariableScopeFunction.java\nindex f72fab4b82..1c2cfc8d33 100644\n--- a/src/main/java/spoon/reflect/visitor/filter/LocalVariableScopeFunction.java\n+++ b/src/main/java/spoon/reflect/visitor/filter/LocalVariableScopeFunction.java\n@@ -16,15 +16,9 @@\n  */\r\n package spoon.reflect.visitor.filter;\r\n \r\n-import java.util.List;\r\n-\r\n-import spoon.SpoonException;\r\n import spoon.reflect.code.CtLocalVariable;\r\n-import spoon.reflect.code.CtStatement;\r\n-import spoon.reflect.code.CtStatementList;\r\n import spoon.reflect.visitor.chain.CtConsumableFunction;\r\n import spoon.reflect.visitor.chain.CtConsumer;\r\n-import spoon.reflect.visitor.chain.CtQuery;\r\n \r\n /**\r\n  * This Query expects a {@link CtLocalVariable} as input\r\n@@ -50,22 +44,6 @@ public class LocalVariableScopeFunction implements CtConsumableFunction<CtLocalV\n \r\n \t@Override\r\n \tpublic void apply(CtLocalVariable<?> localVariable, CtConsumer<Object> outputConsumer) {\r\n-\t\tCtStatementList statements = localVariable.getParent(CtStatementList.class);\r\n-\t\tif (statements == null) {\r\n-\t\t\t//cannot search for variable references of variable which has no parent statement list/block\r\n-\t\t\treturn;\r\n-\t\t}\r\n-\t\t//create query which will be evaluated on each statement after local variable declaration\r\n-\t\tCtQuery query = localVariable.getFactory().createQuery().filterChildren(null);\r\n-\t\tList<CtStatement> stats = statements.getStatements();\r\n-\t\t//search for variable declaration in statements of current block\r\n-\t\tint idxOfVar = stats.indexOf(localVariable);\r\n-\t\tif (idxOfVar < 0) {\r\n-\t\t\tthrow new SpoonException(\"Cannot found index of local variable declaration \" + localVariable + \" in statement list \" + statements);\r\n-\t\t}\r\n-\t\t//scan only all elements AFTER this variable declaration\r\n-\t\tfor (int i = idxOfVar + 1; i < stats.size(); i++) {\r\n-\t\t\tquery.setInput(stats.get(i)).forEach(outputConsumer);\r\n-\t\t}\r\n+\t\tlocalVariable.map(new SiblingsFunction().mode(SiblingsFunction.Mode.NEXT).includingSelf(true)).filterChildren(null).forEach(outputConsumer);\r\n \t}\r\n }\r\ndiff --git a/src/main/java/spoon/reflect/visitor/filter/PotentialVariableDeclarationFunction.java b/src/main/java/spoon/reflect/visitor/filter/PotentialVariableDeclarationFunction.java\nnew file mode 100644\nindex 0000000000..12d93e40a5\n--- /dev/null\n+++ b/src/main/java/spoon/reflect/visitor/filter/PotentialVariableDeclarationFunction.java\n@@ -0,0 +1,112 @@\n+/**\r\n+ * Copyright (C) 2006-2017 INRIA and contributors\r\n+ * Spoon - http://spoon.gforge.inria.fr/\r\n+ *\r\n+ * This software is governed by the CeCILL-C License under French law and\r\n+ * abiding by the rules of distribution of free software. You can use, modify\r\n+ * and/or redistribute the software under the terms of the CeCILL-C license as\r\n+ * circulated by CEA, CNRS and INRIA at http://www.cecill.info.\r\n+ *\r\n+ * This program is distributed in the hope that it will be useful, but WITHOUT\r\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\r\n+ * FITNESS FOR A PARTICULAR PURPOSE. See the CeCILL-C License for more details.\r\n+ *\r\n+ * The fact that you are presently reading this means that you have had\r\n+ * knowledge of the CeCILL-C license and that you accept its terms.\r\n+ */\r\n+package spoon.reflect.visitor.filter;\r\n+\r\n+import java.util.Collection;\r\n+\r\n+import spoon.reflect.code.CtBodyHolder;\r\n+import spoon.reflect.code.CtCatch;\r\n+import spoon.reflect.code.CtStatementList;\r\n+import spoon.reflect.declaration.CtElement;\r\n+import spoon.reflect.declaration.CtExecutable;\r\n+import spoon.reflect.declaration.CtField;\r\n+import spoon.reflect.declaration.CtPackage;\r\n+import spoon.reflect.declaration.CtParameter;\r\n+import spoon.reflect.declaration.CtType;\r\n+import spoon.reflect.reference.CtFieldReference;\r\n+import spoon.reflect.reference.CtVariableReference;\r\n+import spoon.reflect.visitor.chain.CtConsumableFunction;\r\n+import spoon.reflect.visitor.chain.CtConsumer;\r\n+import spoon.reflect.visitor.chain.CtQuery;\r\n+\r\n+/**\r\n+ * This Query expects a {@link CtVariableReference}, which represents reference to an variable, as input\r\n+ * and returns all {@link CtElement} instances, which might be a declaration of that variable reference\r\n+ * <br>\r\n+ * In other words, it returns all elements,\r\n+ * which might be declaration of input variable reference.\r\n+ * <br>\r\n+ * It returns {@link CtParameter} instances from methods, lambdas and catch blocks.\r\n+ * It returns {@link CtField} instances from wrapping classes and their super classes too.\r\n+ * <br>\r\n+ * The elements are visited in defined order. First are elements from nearest parent blocks,\r\n+ * then fields of wrapping classes, then fields of super classes, etc.\r\n+ * <br>\r\n+ * It can be used to search for variable declarations of\r\n+ * variable references and for detection of variable name conflicts\r\n+ * <br>\r\n+ * Usage:<br>\r\n+ * <pre> {@code\r\n+ * CtVariableReference varRef = ...;\r\n+ * varRef.map(new PotentialVariableDeclarationFunction()).forEach(...process result...);\r\n+ * }\r\n+ * </pre>\r\n+ */\r\n+public class PotentialVariableDeclarationFunction implements CtConsumableFunction<CtElement> {\r\n+\r\n+\tprivate boolean includingFields = true;\r\n+\r\n+\tpublic PotentialVariableDeclarationFunction() {\r\n+\t}\r\n+\r\n+\t@Override\r\n+\tpublic void apply(CtElement input, CtConsumer<Object> outputConsumer) {\r\n+\t\t//Search previous siblings for element which may represents the declaration of this local variable\r\n+\t\tCtQuery siblingsQuery = input.getFactory().createQuery().map(new SiblingsFunction().mode(SiblingsFunction.Mode.PREVIOUS));\r\n+\r\n+\t\tCtElement scopeElement = input;\r\n+\t\t//Search input and then all parents until first CtPackage for element which may represents the declaration of this local variable\r\n+\t\twhile (scopeElement != null && !(scopeElement instanceof CtPackage)) {\r\n+\t\t\tCtElement parent = scopeElement.getParent();\r\n+\t\t\tif (parent instanceof CtType<?>) {\r\n+\t\t\t\tif (includingFields) {\r\n+\t\t\t\t\t//TODO replace getAllFields() followed by getFieldDeclaration, by direct visiting of fields of types in super classes.\r\n+\t\t\t\t\tCollection<CtFieldReference<?>> allFields = ((CtType<?>) parent).getAllFields();\r\n+\t\t\t\t\tfor (CtFieldReference<?> fieldReference : allFields) {\r\n+\t\t\t\t\t\toutputConsumer.accept(fieldReference.getFieldDeclaration());\r\n+\t\t\t\t\t}\r\n+\t\t\t\t}\r\n+\t\t\t} else if (parent instanceof CtBodyHolder || parent instanceof CtStatementList) {\r\n+\t\t\t\t//visit all previous siblings of scopeElement element in parent BodyHolder or Statement list\r\n+\t\t\t\tsiblingsQuery.setInput(scopeElement).forEach(outputConsumer);\r\n+\t\t\t\t//visit parameters of CtCatch and CtExecutable (method, lambda)\r\n+\t\t\t\tif (parent instanceof CtCatch) {\r\n+\t\t\t\t\tCtCatch ctCatch = (CtCatch) parent;\r\n+\t\t\t\t\toutputConsumer.accept(ctCatch.getParameter());\r\n+\t\t\t\t} else if (parent instanceof CtExecutable) {\r\n+\t\t\t\t\tCtExecutable<?> exec = (CtExecutable<?>) parent;\r\n+\t\t\t\t\tfor (CtParameter<?> param : exec.getParameters()) {\r\n+\t\t\t\t\t\toutputConsumer.accept(param);\r\n+\t\t\t\t\t}\r\n+\t\t\t\t}\r\n+\t\t\t}\r\n+\t\t\tscopeElement = parent;\r\n+\t\t}\r\n+\t}\r\n+\r\n+\tpublic boolean isIncludingFields() {\r\n+\t\treturn includingFields;\r\n+\t}\r\n+\r\n+\t/**\r\n+\t * @param includingFields if true then CtFields of wrapping class and all super classes are returned too\r\n+\t */\r\n+\tpublic PotentialVariableDeclarationFunction includingFields(boolean includingFields) {\r\n+\t\tthis.includingFields = includingFields;\r\n+\t\treturn this;\r\n+\t}\r\n+}\r\ndiff --git a/src/main/java/spoon/reflect/visitor/filter/SiblingsFunction.java b/src/main/java/spoon/reflect/visitor/filter/SiblingsFunction.java\nnew file mode 100644\nindex 0000000000..50752460ab\n--- /dev/null\n+++ b/src/main/java/spoon/reflect/visitor/filter/SiblingsFunction.java\n@@ -0,0 +1,90 @@\n+/**\r\n+ * Copyright (C) 2006-2017 INRIA and contributors\r\n+ * Spoon - http://spoon.gforge.inria.fr/\r\n+ *\r\n+ * This software is governed by the CeCILL-C License under French law and\r\n+ * abiding by the rules of distribution of free software. You can use, modify\r\n+ * and/or redistribute the software under the terms of the CeCILL-C license as\r\n+ * circulated by CEA, CNRS and INRIA at http://www.cecill.info.\r\n+ *\r\n+ * This program is distributed in the hope that it will be useful, but WITHOUT\r\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\r\n+ * FITNESS FOR A PARTICULAR PURPOSE. See the CeCILL-C License for more details.\r\n+ *\r\n+ * The fact that you are presently reading this means that you have had\r\n+ * knowledge of the CeCILL-C license and that you accept its terms.\r\n+ */\r\n+package spoon.reflect.visitor.filter;\r\n+\r\n+import spoon.reflect.declaration.CtElement;\r\n+import spoon.reflect.visitor.CtScanner;\r\n+import spoon.reflect.visitor.chain.CtConsumableFunction;\r\n+import spoon.reflect.visitor.chain.CtConsumer;\r\n+\r\n+/**\r\n+ * visits siblings of input element.\r\n+ * The sibling is the element whose sibling.getParent()==input.getParent()\r\n+ * <br>\r\n+ * The siblings are visited in order in which they would be visited by CtScanner.\r\n+ * The input element is by default not visited. But if {@link #includingSelf(boolean)} is called with value true,\r\n+ * then input element is visited too in the order in which CtScanner would visit it.\r\n+ *\r\n+ *  The visiting order is relevant, because this scanner is used for example resolve local variable declarations.\r\n+ */\r\n+public class SiblingsFunction implements CtConsumableFunction<CtElement> {\r\n+\r\n+\t/**\r\n+\t * Defines visiting mode\r\n+\t */\r\n+\tpublic enum Mode {\r\n+\t\tALL,\t//all siblings are visited\r\n+\t\tPREVIOUS, //only previous siblings of input element\r\n+\t\tNEXT\t//only next siblings of input element\r\n+\t}\r\n+\r\n+\tprivate Mode mode = Mode.ALL;\r\n+\tprivate boolean includingSelf = false;\r\n+\r\n+\tpublic SiblingsFunction() {\r\n+\t}\r\n+\r\n+\t/**\r\n+\t * @param includingSelf if false then input element is not visited\r\n+\t */\r\n+\tpublic SiblingsFunction includingSelf(boolean includingSelf) {\r\n+\t\tthis.includingSelf = includingSelf;\r\n+\t\treturn this;\r\n+\t}\r\n+\r\n+\t/**\r\n+\t * @param mode defines which siblings will be visited. See {@link Mode} for possible values\r\n+\t */\r\n+\tpublic SiblingsFunction mode(Mode mode) {\r\n+\t\tthis.mode = mode;\r\n+\t\treturn this;\r\n+\t}\r\n+\r\n+\t@Override\r\n+\tpublic void apply(final CtElement input, final CtConsumer<Object> outputConsumer) {\r\n+\t\tfinal CtElement parent = input.getParent();\r\n+\t\tparent.accept(new CtScanner() {\r\n+\t\t\tboolean hasVisitedInput = false;\r\n+\t\t\tboolean visitPrev = mode == Mode.ALL || mode == Mode.PREVIOUS;\r\n+\t\t\tboolean visitNext = mode == Mode.ALL || mode == Mode.NEXT;\r\n+\t\t\t@Override\r\n+\t\t\tpublic void scan(CtElement element) {\r\n+\t\t\t\tif (element != null && element.getParent() == parent) {\r\n+\t\t\t\t\t//visit only elements whose parent is same\r\n+\t\t\t\t\tboolean canVisit = hasVisitedInput ? visitNext : visitPrev;\r\n+\t\t\t\t\tif (input == element) {\r\n+\t\t\t\t\t\thasVisitedInput = true;\r\n+\t\t\t\t\t\tcanVisit = includingSelf;\r\n+\t\t\t\t\t}\r\n+\t\t\t\t\tif (canVisit) {\r\n+\t\t\t\t\t\toutputConsumer.accept(element);\r\n+\t\t\t\t\t}\r\n+\t\t\t\t}\r\n+\t\t\t}\r\n+\t\t});\r\n+\t}\r\n+}\r\ndiff --git a/src/main/java/spoon/support/reflect/reference/CtLocalVariableReferenceImpl.java b/src/main/java/spoon/support/reflect/reference/CtLocalVariableReferenceImpl.java\nindex 6711d33833..3bd5259016 100644\n--- a/src/main/java/spoon/support/reflect/reference/CtLocalVariableReferenceImpl.java\n+++ b/src/main/java/spoon/support/reflect/reference/CtLocalVariableReferenceImpl.java\n@@ -17,15 +17,13 @@\n package spoon.support.reflect.reference;\n \n import spoon.reflect.code.CtLocalVariable;\n-import spoon.reflect.declaration.CtElement;\n-import spoon.reflect.declaration.CtPackage;\n+import spoon.reflect.declaration.CtVariable;\n import spoon.reflect.declaration.ParentNotInitializedException;\n import spoon.reflect.factory.Factory;\n import spoon.reflect.reference.CtLocalVariableReference;\n import spoon.reflect.visitor.CtVisitor;\n-import spoon.reflect.visitor.filter.AbstractFilter;\n-\n-import java.util.List;\n+import spoon.reflect.visitor.Filter;\n+import spoon.reflect.visitor.filter.PotentialVariableDeclarationFunction;\n \n /**\n  * An implementation for {@link CtLocalVariableReference}.\n@@ -50,6 +48,7 @@ public class CtLocalVariableReferenceImpl<T>\n \t\tvisitor.visitCtLocalVariableReference(this);\n \t}\n \n+\t@SuppressWarnings(\"unchecked\")\n \t@Override\n \tpublic CtLocalVariable<T> getDeclaration() {\n \t\t// without a factory, we are not able to filter for local variables\n@@ -57,30 +56,35 @@ public class CtLocalVariableReferenceImpl<T>\n \t\tif (factory == null) {\n \t\t\treturn null;\n \t\t}\n-\t\tfinal SimpleNameFilter filter = new SimpleNameFilter();\n \n-\t\t// successively iterate through all parents of this reference and\n-\t\t// return first result (which must be the closest declaration\n-\t\t// respecting visible scope)\n+\t\tfinal String simpleName = getSimpleName();\n+\n+\t\t//handle the CtLocalVariableReference which were created by CtLocalVariable#getReference() and which are not yet part of model, so we cannot found them using standard rules\n+\t\tif (parent instanceof CtLocalVariable) {\n+\t\t\tCtLocalVariable<T> var = (CtLocalVariable<T>) parent;\n+\t\t\tif (simpleName.equals(var.getSimpleName())) {\n+\t\t\t\treturn var;\n+\t\t\t}\n+\t\t}\n \t\ttry {\n-\t\t\tCtElement parent = getParent();\n-\t\t\t// stop at `package` level to avoid lookups to foreign Java files\n-\t\t\twhile (parent != null && !(parent instanceof CtPackage)) {\n-\t\t\t\tfinal List<CtLocalVariable<T>> localVariables =\n-\t\t\t\t\t\tparent.getElements(filter);\n-\t\t\t\t// since `parent` may be a class declaring multiple local\n-\t\t\t\t// variables with same name in different methods, we have to\n-\t\t\t\t// check if any of the findings is visible in current scope by\n-\t\t\t\t// validating that the parent of a finding is parent of this\n-\t\t\t\t// reference as well\n-\t\t\t\tfor (final CtLocalVariable<T> lv : localVariables) {\n-\t\t\t\t\tif (getParent().equals(lv) || hasParent(lv.getParent())) {\n-\t\t\t\t\t\treturn lv;\n-\t\t\t\t\t}\n+\t\t\t// successively iterate through all parents of this reference and\n+\t\t\t// return first result (which must be the closest declaration\n+\t\t\t// respecting visible scope)\n+\t\t\tCtVariable<?> var = map(new PotentialVariableDeclarationFunction()).select(new Filter<CtVariable<?>>() {\n+\t\t\t\t@Override\n+\t\t\t\tpublic boolean matches(CtVariable<?> var) {\n+\t\t\t\t\treturn simpleName.equals(var.getSimpleName());\n \t\t\t\t}\n-\t\t\t\tparent = parent.getParent();\n+\t\t\t}).first();\n+\t\t\tif (var instanceof CtLocalVariable) {\n+\t\t\t\treturn (CtLocalVariable<T>) var;\n \t\t\t}\n-\t\t} catch (final ParentNotInitializedException e) {\n+\t\t\tif (var != null) {\n+\t\t\t\t//we have found another variable declaration with same simple name, which hides declaration of this local variable reference\n+\t\t\t\t//handle it as not found\n+\t\t\t\treturn null;\n+\t\t\t}\n+\t\t} catch (ParentNotInitializedException e) {\n \t\t\t// handle this case as 'not found'\n \t\t}\n \t\treturn null;\n@@ -90,22 +94,4 @@ public class CtLocalVariableReferenceImpl<T>\n \tpublic CtLocalVariableReference<T> clone() {\n \t\treturn (CtLocalVariableReference<T>) super.clone();\n \t}\n-\n-\t/**\n-\t * A {@link spoon.reflect.visitor.Filter} that filters all\n-\t * {@link CtLocalVariable}s with simple name equals to\n-\t * {@link #getSimpleName()}.\n-\t */\n-\tprivate final class SimpleNameFilter\n-\t\t\textends AbstractFilter<CtLocalVariable<T>> {\n-\n-\t\tSimpleNameFilter() {\n-\t\t\tsuper();\n-\t\t}\n-\n-\t\t@Override\n-\t\tpublic boolean matches(final CtLocalVariable<T> element) {\n-\t\t\treturn element.getSimpleName().equals(getSimpleName());\n-\t\t}\n-\t}\n }\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 128588560,
        "hostName": "local",
        "totalMemory": 274726912,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 8:18:45 AM",
      "projectRootPomPath": "./workspace/INRIA/spoon/199993301/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            85
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 85
        },
        "testing": {
          "stepDurations": [
            285
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 285
        },
        "cloning": {
          "stepDurations": [
            19
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 19
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 8:05:48 AM",
      "totalDuration": 769
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1017,
        "numberRunning": 1022,
        "numberFailing": 1,
        "numberErroring": 4,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 1
          },
          {
            "failureName": "spoon.SpoonException",
            "isError": true,
            "occurrences": 4
          }
        ],
        "numberSkipping": 2
      },
      "failingModule": "/root/workspace/INRIA/spoon/201940544",
      "failingClasses": [
        {
          "numberPassing": 21,
          "numberRunning": 25,
          "testClass": "spoon.test.imports.ImportTest",
          "numberFailing": 1,
          "numberErroring": 3,
          "numberSkipping": 0
        },
        {
          "numberPassing": 5,
          "numberRunning": 6,
          "testClass": "spoon.test.main.MainTest",
          "numberFailing": 0,
          "numberErroring": 1,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "spoon.SpoonException",
          "testMethod": "testSpoonWithImports",
          "testClass": "spoon.test.imports.ImportTest",
          "detail": "Cannot compute access path to type: spoon.test.imports.testclasses.internal.SuperClass$ProtectedInterface$NestedOfProtectedInterface in context of type: spoon.test.imports.testclasses.ClientClass$InnerClass5",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "testMethod": "testTest",
          "testClass": "spoon.test.main.MainTest",
          "detail": "spoon.SpoonException: Cannot compute access path to type: spoon.test.imports.testclasses.internal.SuperClass$ProtectedInterface$NestedOfProtectedInterface in context of type: spoon.test.imports.testclasses.ClientClass$InnerClass5",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "testMethod": "testImportOfAnInnerClassInASuperClassPackageAutoImport",
          "testClass": "spoon.test.imports.ImportTest",
          "detail": "spoon.SpoonException: Cannot compute access path to type: spoon.test.imports.testclasses.internal.SuperClass$ProtectedInterface$NestedOfProtectedInterface in context of type: spoon.test.imports.testclasses.ClientClass$InnerClass5",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "testMethod": "testImportOfAnInnerClassInASuperClassPackageFullQualified",
          "testClass": "spoon.test.imports.ImportTest",
          "detail": "spoon.SpoonException: Cannot compute access path to type: spoon.test.imports.testclasses.internal.SuperClass$ProtectedInterface$NestedOfProtectedInterface in context of type: spoon.test.imports.testclasses.ClientClass$InnerClass5",
          "isError": true
        },
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testCanAccess",
          "testClass": "spoon.test.imports.ImportTest",
          "detail": "ClientClass should have access to spoon.test.imports.testclasses.internal.PublicInterface2$NestedInterface but it has not",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/203101555",
        "date": "Feb 19, 2017 8:42:14 AM",
        "id": 203101555
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/201940544",
        "date": "Feb 15, 2017 6:14:42 PM",
        "id": 201940544
      }
    },
    "repository": {
      "name": "INRIA-spoon",
      "url": "https://github.com/INRIA/spoon",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 14176513
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/92cedf9af2909264092eff8d75069d74e9368ea6",
        "sha": "92cedf9af2909264092eff8d75069d74e9368ea6",
        "branchName": "master",
        "date": "Feb 19, 2017 8:33:22 AM",
        "repoName": "INRIA/spoon"
      },
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/e5665b160f66a421bcf48c7625401a3d292bcb21",
        "sha": "e5665b160f66a421bcf48c7625401a3d292bcb21",
        "branchName": "master",
        "date": "Feb 15, 2017 6:01:30 PM",
        "repoName": "INRIA/spoon"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/INRIA-spoon-201940544-203101555\n",
    "projectMetrics": {
      "numberSourceFiles": 463,
      "numberLibrariesFailingModule": 10,
      "numberTestFiles": 469,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 21,
        "numberDeleted": 28
      }
    },
    "diff": "diff --git a/src/main/java/spoon/support/reflect/reference/CtTypeReferenceImpl.java b/src/main/java/spoon/support/reflect/reference/CtTypeReferenceImpl.java\nindex 95dfeb29ad..4d39fac444 100644\n--- a/src/main/java/spoon/support/reflect/reference/CtTypeReferenceImpl.java\n+++ b/src/main/java/spoon/support/reflect/reference/CtTypeReferenceImpl.java\n@@ -264,6 +264,22 @@ public class CtTypeReferenceImpl<T> extends CtReferenceImpl implements CtTypeRef\n \t\t}\n \t}\n \n+\t/**\n+\t * Detects if this type is an code responsible for implementing of that type.<br>\n+\t * In means it detects whether this type can access protected members of that type\n+\t * @return true if this type or any declaring type recursively is subtype of type or directly is the type.\n+\t */\n+\tprivate boolean isImplementationOf(CtTypeReference<?> type) {\n+\t\tCtTypeReference<?> impl = this;\n+\t\twhile (impl != null) {\n+\t\t\tif (impl.isSubtypeOf(type)) {\n+\t\t\t\treturn true;\n+\t\t\t}\n+\t\t\timpl = impl.getDeclaringType();\n+\t\t}\n+\t\treturn false;\n+\t}\n+\n \t@Override\n \tpublic <C extends CtActualTypeContainer> C setActualTypeArguments(List<? extends CtTypeReference<?>> actualTypeArguments) {\n \t\tif (actualTypeArguments == null || actualTypeArguments.isEmpty()) {\n@@ -621,21 +637,36 @@ public class CtTypeReferenceImpl<T> extends CtReferenceImpl implements CtTypeRef\n \t\t\t\treturn true;\n \t\t\t}\n \t\t\tif (modifiers.contains(ModifierKind.PROTECTED)) {\n-\t\t\t\tif (isSubtypeOf(type)) {\n-\t\t\t\t\t//is visible in subtypes\n+\t\t\t\t//the accessed type is protected in scope of declaring type.\n+\t\t\t\tCtTypeReference<?> declaringType = type.getDeclaringType();\n+\t\t\t\tif (declaringType == null) {\n+\t\t\t\t\t//top level type cannot be protected. So this is a model inconsistency.\n+\t\t\t\t\tthrow new SpoonException(\"The protected class \" + type.getQualifiedName() + \" has no declaring class.\");\n+\t\t\t\t}\n+\t\t\t\tif (isImplementationOf(declaringType)) {\n+\t\t\t\t\t//type is visible in code which implements declaringType\n \t\t\t\t\treturn true;\n \t\t\t\t} //else it is visible in same package, like package protected\n+\t\t\t\treturn isInSamePackage(type);\n \t\t\t}\n \t\t\tif (modifiers.contains(ModifierKind.PRIVATE)) {\n \t\t\t\t//it is visible in scope of the same class only\n \t\t\t\treturn type.getTopLevelType().getQualifiedName().equals(this.getTopLevelType().getQualifiedName());\n \t\t\t}\n-\t\t\t//package protected\n-\t\t\tif (type.getTopLevelType().getPackage().getSimpleName().equals(this.getTopLevelType().getPackage().getSimpleName())) {\n-\t\t\t\t//visible only in scope of the same package\n+\t\t\t/*\n+\t\t\t * no modifier, we have to check if it is nested type and if yes, if parent is interface or class.\n+\t\t\t * In case of no parent then implicit access is package protected\n+\t\t\t * In case of parent is interface, then implicit access is PUBLIC\n+\t\t\t * In case of parent is class, then implicit access is package protected\n+\t\t\t */\n+\t\t\tCtTypeReference<?> declaringTypeRef = type.getDeclaringType();\n+\t\t\tif (declaringTypeRef != null && declaringTypeRef.isInterface()) {\n+\t\t\t\t//the declaring type is interface, then implicit access is PUBLIC\n \t\t\t\treturn true;\n \t\t\t}\n-\t\t\treturn false;\n+\t\t\t//package protected\n+\t\t\t//visible only in scope of the same package\n+\t\t\treturn isInSamePackage(type);\n \t\t} catch (SpoonClassNotFoundException e) {\n \t\t\thandleParentNotFound(e);\n \t\t\t//if the modifiers cannot be resolved then we expect that it is visible\n@@ -643,6 +674,10 @@ public class CtTypeReferenceImpl<T> extends CtReferenceImpl implements CtTypeRef\n \t\t}\n \t}\n \n+\tprivate boolean isInSamePackage(CtTypeReference<?> type) {\n+\t\treturn type.getTopLevelType().getPackage().getSimpleName().equals(this.getTopLevelType().getPackage().getSimpleName());\n+\t}\n+\n \t@Override\n \tpublic CtTypeReference<?> getTopLevelType() {\n \t\tCtTypeReference<?> type = this;\n@@ -659,7 +694,7 @@ public class CtTypeReferenceImpl<T> extends CtReferenceImpl implements CtTypeRef\n \tpublic CtTypeReference<?> getAccessType() {\n \t\tCtTypeReference<?> declType = this.getDeclaringType();\n \t\tif (declType == null) {\n-\t\t\tthrow new SpoonException(\"The nestedType is expected, but it is: \" + getQualifiedName());\n+\t\t\tthrow new SpoonException(\"The declaring type is expected, but \" + getQualifiedName() + \" is top level type\");\n \t\t}\n \t\tCtType<?> contextType = getParent(CtType.class);\n \t\tif (contextType == null) {\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 101301248,
        "hostName": "local",
        "totalMemory": 296222720,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 8:05:21 AM",
      "projectRootPomPath": "./workspace/INRIA/spoon/201940544/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            1,
            0,
            0,
            0,
            69
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 70
        },
        "testing": {
          "stepDurations": [
            259
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 259
        },
        "cloning": {
          "stepDurations": [
            20
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 20
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 7:53:35 AM",
      "totalDuration": 700
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1021,
        "numberRunning": 1024,
        "numberFailing": 3,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "org.junit.ComparisonFailure",
            "isError": false,
            "occurrences": 3
          }
        ],
        "numberSkipping": 2
      },
      "failingModule": "/root/workspace/INRIA/spoon/204567691",
      "failingClasses": [
        {
          "numberPassing": 6,
          "numberRunning": 7,
          "testClass": "spoon.test.constructorcallnewclass.NewClassTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        },
        {
          "numberPassing": 11,
          "numberRunning": 12,
          "testClass": "spoon.test.type.TypeTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        },
        {
          "numberPassing": 3,
          "numberRunning": 4,
          "testClass": "spoon.test.arrays.ArraysTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "testMethod": "test",
          "testClass": "spoon.test.type.TypeTest",
          "detail": "expected:<[android.content.]DialogInterface$OnCl...> but was:<[]DialogInterface$OnCl...>",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "testMethod": "testInitializeWithNewArray",
          "testClass": "spoon.test.arrays.ArraysTest",
          "detail": "expected:<new [com.example.]Type[list.size()]> but was:<new []Type[list.size()]>",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "testMethod": "testCtNewClassInNoClasspath",
          "testClass": "spoon.test.constructorcallnewclass.NewClassTest",
          "detail": "expected:<[org.apache.lucene.store.]Lock$With> but was:<[]Lock$With>",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/207361743",
        "date": "Mar 3, 2017 2:53:53 PM",
        "id": 207361743
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/204567691",
        "date": "Feb 23, 2017 1:46:32 PM",
        "id": 204567691
      }
    },
    "repository": {
      "name": "INRIA-spoon",
      "url": "https://github.com/INRIA/spoon",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 14176513
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/6433c2c6641e4e3eb172d04cb39ac5373b38ed74",
        "sha": "6433c2c6641e4e3eb172d04cb39ac5373b38ed74",
        "branchName": "master",
        "date": "Mar 3, 2017 2:44:31 PM",
        "repoName": "INRIA/spoon"
      },
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/e7acf58718e88be92e7a50531510a152df03504d",
        "sha": "e7acf58718e88be92e7a50531510a152df03504d",
        "branchName": "master",
        "date": "Feb 23, 2017 1:26:35 PM",
        "repoName": "INRIA/spoon"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/INRIA-spoon-204567691-207361743\n",
    "projectMetrics": {
      "numberSourceFiles": 463,
      "numberLibrariesFailingModule": 10,
      "numberTestFiles": 469,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 5,
        "numberDeleted": 7
      }
    },
    "diff": "diff --git a/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java b/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java\nindex 41a22b34d8..58f0d86f7c 100644\n--- a/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java\n+++ b/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java\n@@ -84,6 +84,7 @@ import spoon.reflect.code.CtLambda;\n import spoon.reflect.declaration.CtPackage;\n import spoon.reflect.declaration.CtParameter;\n import spoon.reflect.declaration.ModifierKind;\n+import spoon.reflect.factory.PackageFactory;\n import spoon.reflect.reference.CtArrayTypeReference;\n import spoon.reflect.reference.CtCatchVariableReference;\n import spoon.reflect.reference.CtExecutableReference;\n@@ -532,10 +533,11 @@ public class ReferenceBuilder {\n \t\tif (res == null) {\n \t\t\treturn this.jdtTreeBuilder.getFactory().Type().createReference(CharOperation.toString(ref.getParameterizedTypeName()));\n \t\t}\n-\t\tCtPackageReference packageReference = index >= 0\n-\t\t\t\t? this.jdtTreeBuilder.getFactory().Package().getOrCreate(concatSubArray(namesParameterized, index)).getReference()\n-\t\t\t\t: this.jdtTreeBuilder.getFactory().Package().topLevel();\n-\t\tinner.setPackage(packageReference);\n+\t\tif (inner.getPackage() == null) {\n+\t\t\tPackageFactory packageFactory = this.jdtTreeBuilder.getFactory().Package();\n+\t\t\tCtPackageReference packageReference = index >= 0 ? packageFactory.getOrCreate(concatSubArray(namesParameterized, index)).getReference() : packageFactory.topLevel();\n+\t\t\tinner.setPackage(packageReference);\n+\t\t}\n \t\treturn res;\n \t}\n \n@@ -572,6 +574,8 @@ public class ReferenceBuilder {\n \t\t} else if (Character.isUpperCase(name.charAt(0))) {\n \t\t\tmain = this.jdtTreeBuilder.getFactory().Core().createTypeReference();\n \t\t\tmain.setSimpleName(name);\n+\t\t\tfinal CtReference declaring = this.getDeclaringReferenceFromImports(name.toCharArray());\n+\t\t\tsetPackageOrDeclaringType(main, declaring);\n \t\t} else if (name.startsWith(\"?\")) {\n \t\t\treturn (CtTypeReference) this.jdtTreeBuilder.getFactory().Core().createWildcardReference();\n \t\t}\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 164877992,
        "hostName": "local",
        "totalMemory": 247463936,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 7:52:52 AM",
      "projectRootPomPath": "./workspace/INRIA/spoon/204567691/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            1,
            0,
            0,
            0,
            80
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 81
        },
        "testing": {
          "stepDurations": [
            282
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 282
        },
        "cloning": {
          "stepDurations": [
            20
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 20
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 7:40:15 AM",
      "totalDuration": 751
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1026,
        "numberRunning": 1027,
        "numberFailing": 0,
        "numberErroring": 1,
        "failures": [
          {
            "failureName": "spoon.reflect.declaration.ParentNotInitializedException",
            "isError": true,
            "occurrences": 1
          }
        ],
        "numberSkipping": 2
      },
      "failingModule": "/root/workspace/INRIA/spoon/210079209",
      "failingClasses": [
        {
          "numberPassing": 2,
          "numberRunning": 3,
          "testClass": "spoon.test.prettyprinter.QualifiedThisRefTest",
          "numberFailing": 0,
          "numberErroring": 1,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "spoon.reflect.declaration.ParentNotInitializedException",
          "testMethod": "testPrintCtFieldAccessWorkEvenWhenParentNotInitialized",
          "testClass": "spoon.test.prettyprinter.QualifiedThisRefTest",
          "detail": "parent not initialized for class spoon.support.reflect.code.CtInvocationImpl (unknown file)",
          "isError": true
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/210080599",
        "date": "Mar 11, 2017 5:48:52 PM",
        "id": 210080599
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/210079209",
        "date": "Mar 11, 2017 5:40:40 PM",
        "id": 210079209
      }
    },
    "repository": {
      "name": "INRIA-spoon",
      "url": "https://github.com/INRIA/spoon",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 14176513
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/6d7af94b1e5cd9295c379ecfa886cacd97af7a9a",
        "sha": "6d7af94b1e5cd9295c379ecfa886cacd97af7a9a",
        "branchName": "master",
        "date": "Mar 11, 2017 5:40:44 PM",
        "repoName": "INRIA/spoon"
      },
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/24ccd7213761c97d2de8586a48cc49c500ffd740",
        "sha": "24ccd7213761c97d2de8586a48cc49c500ffd740",
        "branchName": "master",
        "date": "Mar 11, 2017 5:32:15 PM",
        "repoName": "INRIA/spoon"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/INRIA-spoon-210079209-210080599\n",
    "projectMetrics": {
      "numberSourceFiles": 469,
      "numberLibrariesFailingModule": 10,
      "numberTestFiles": 469,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 1,
        "numberDeleted": 1
      }
    },
    "diff": "diff --git a/src/main/java/spoon/reflect/visitor/filter/PotentialVariableDeclarationFunction.java b/src/main/java/spoon/reflect/visitor/filter/PotentialVariableDeclarationFunction.java\nindex 12d93e40a5..842b070d07 100644\n--- a/src/main/java/spoon/reflect/visitor/filter/PotentialVariableDeclarationFunction.java\n+++ b/src/main/java/spoon/reflect/visitor/filter/PotentialVariableDeclarationFunction.java\n@@ -70,7 +70,7 @@ public class PotentialVariableDeclarationFunction implements CtConsumableFunctio\n \r\n \t\tCtElement scopeElement = input;\r\n \t\t//Search input and then all parents until first CtPackage for element which may represents the declaration of this local variable\r\n-\t\twhile (scopeElement != null && !(scopeElement instanceof CtPackage)) {\r\n+\t\twhile (scopeElement != null && !(scopeElement instanceof CtPackage) && scopeElement.isParentInitialized()) {\r\n \t\t\tCtElement parent = scopeElement.getParent();\r\n \t\t\tif (parent instanceof CtType<?>) {\r\n \t\t\t\tif (includingFields) {\r\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 175543448,
        "hostName": "local",
        "totalMemory": 251658240,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 7:38:20 AM",
      "projectRootPomPath": "./workspace/INRIA/spoon/210079209/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            74
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 74
        },
        "testing": {
          "stepDurations": [
            202
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 202
        },
        "cloning": {
          "stepDurations": [
            21
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 21
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 7:29:54 AM",
      "totalDuration": 498
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1026,
        "numberRunning": 1028,
        "numberFailing": 2,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 2
          }
        ],
        "numberSkipping": 2
      },
      "failingModule": "/root/workspace/INRIA/spoon/211086222",
      "failingClasses": [
        {
          "numberPassing": 37,
          "numberRunning": 39,
          "testClass": "spoon.test.filters.FilterTest",
          "numberFailing": 2,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testOverridingMethodFromSubClassOfAbstractClass",
          "testClass": "spoon.test.filters.FilterTest",
          "detail": "expected:<3> but was:<2>",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testOverridingMethodFromSubClassOfInterface",
          "testClass": "spoon.test.filters.FilterTest",
          "detail": "expected:<1> but was:<0>",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/211090498",
        "date": "Mar 14, 2017 9:12:55 PM",
        "id": 211090498
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/211086222",
        "date": "Mar 14, 2017 9:01:01 PM",
        "id": 211086222
      }
    },
    "repository": {
      "name": "INRIA-spoon",
      "url": "https://github.com/INRIA/spoon",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 14176513
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/286e6e993ab642e2e4331ba4573eadab5ca12b1c",
        "sha": "286e6e993ab642e2e4331ba4573eadab5ca12b1c",
        "branchName": "master",
        "date": "Mar 14, 2017 9:04:50 PM",
        "repoName": "INRIA/spoon"
      },
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/f87ba4fe585aa93f9ec950b08179b5a1411e1e28",
        "sha": "f87ba4fe585aa93f9ec950b08179b5a1411e1e28",
        "branchName": "master",
        "date": "Mar 14, 2017 8:53:04 PM",
        "repoName": "INRIA/spoon"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/INRIA-spoon-211086222-211090498\n",
    "projectMetrics": {
      "numberSourceFiles": 469,
      "numberLibrariesFailingModule": 10,
      "numberTestFiles": 470,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 5,
        "numberDeleted": 1
      }
    },
    "diff": "diff --git a/src/main/java/spoon/support/reflect/reference/CtExecutableReferenceImpl.java b/src/main/java/spoon/support/reflect/reference/CtExecutableReferenceImpl.java\nindex 68438c4236..bad72384e0 100644\n--- a/src/main/java/spoon/support/reflect/reference/CtExecutableReferenceImpl.java\n+++ b/src/main/java/spoon/support/reflect/reference/CtExecutableReferenceImpl.java\n@@ -236,11 +236,7 @@ public class CtExecutableReferenceImpl<T> extends CtReferenceImpl implements CtE\n \t\tif (!isSame) {\n \t\t\treturn false;\n \t\t}\n-\t\tif (getDeclaringType().isAnonymous()) {\n-\t\t\tif (!getDeclaringType().getDeclaringType().isSubtypeOf(executable.getDeclaringType())) {\n-\t\t\t\treturn false;\n-\t\t\t}\n-\t\t} else if (!getDeclaringType().isSubtypeOf(executable.getDeclaringType())) {\n+\t\tif (!getDeclaringType().isSubtypeOf(executable.getDeclaringType())) {\n \t\t\treturn false;\n \t\t}\n \t\treturn true;\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 144297976,
        "hostName": "local",
        "totalMemory": 285212672,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 7:36:50 AM",
      "projectRootPomPath": "./workspace/INRIA/spoon/211086222/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            67
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 67
        },
        "testing": {
          "stepDurations": [
            181
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 181
        },
        "cloning": {
          "stepDurations": [
            21
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 21
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 7:28:11 AM",
      "totalDuration": 511
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1028,
        "numberRunning": 1029,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 2
      },
      "failingModule": "/root/workspace/INRIA/spoon/211090498",
      "failingClasses": [
        {
          "numberPassing": 0,
          "numberRunning": 1,
          "testClass": "spoon.test.ctBlock.TestCtBlock",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testRemoveStatement",
          "isError": false,
          "testClass": "spoon.test.ctBlock.TestCtBlock"
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/211342085",
        "date": "Mar 15, 2017 2:22:34 PM",
        "id": 211342085
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/211090498",
        "date": "Mar 14, 2017 9:12:55 PM",
        "id": 211090498
      }
    },
    "repository": {
      "name": "INRIA-spoon",
      "url": "https://github.com/INRIA/spoon",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 14176513
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/561853c421c1e8fc6b3cdd3b3837bf8c2940020a",
        "sha": "561853c421c1e8fc6b3cdd3b3837bf8c2940020a",
        "branchName": "master",
        "date": "Mar 15, 2017 2:13:01 PM",
        "repoName": "INRIA/spoon"
      },
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/286e6e993ab642e2e4331ba4573eadab5ca12b1c",
        "sha": "286e6e993ab642e2e4331ba4573eadab5ca12b1c",
        "branchName": "master",
        "date": "Mar 14, 2017 9:04:50 PM",
        "repoName": "INRIA/spoon"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/INRIA-spoon-211090498-211342085\n",
    "projectMetrics": {
      "numberSourceFiles": 469,
      "numberLibrariesFailingModule": 10,
      "numberTestFiles": 472,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 17,
        "numberDeleted": 1
      }
    },
    "diff": "diff --git a/src/main/java/spoon/support/reflect/code/CtBlockImpl.java b/src/main/java/spoon/support/reflect/code/CtBlockImpl.java\nindex 1e289a5cea..64700e721e 100644\n--- a/src/main/java/spoon/support/reflect/code/CtBlockImpl.java\n+++ b/src/main/java/spoon/support/reflect/code/CtBlockImpl.java\n@@ -190,7 +190,23 @@ public class CtBlockImpl<R> extends CtStatementImpl implements CtBlock<R> {\n \t@Override\n \tpublic void removeStatement(CtStatement statement) {\n \t\tif (this.statements != CtElementImpl.<CtStatement>emptyList()) {\n-\t\t\tthis.statements.remove(statement);\n+\n+\t\t\tboolean hasBeenRemoved = false;\n+\t\t\t// we cannot use a remove(statement) as it uses the equals\n+\t\t\t// and a block can have twice exactly the same statement.\n+\t\t\tfor (int i = 0; i < this.statements.size(); i++) {\n+\t\t\t\tif (this.statements.get(i) == statement) {\n+\t\t\t\t\tthis.statements.remove(i);\n+\t\t\t\t\thasBeenRemoved = true;\n+\t\t\t\t\tbreak;\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t\t// in case we use it with a statement manually built\n+\t\t\tif (!hasBeenRemoved) {\n+\t\t\t\tthis.statements.remove(statement);\n+\t\t\t}\n+\n \t\t\tif (isImplicit() && statements.size() == 0) {\n \t\t\t\tsetImplicit(false);\n \t\t\t}\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 154958136,
        "hostName": "local",
        "totalMemory": 248512512,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 7:27:51 AM",
      "projectRootPomPath": "./workspace/INRIA/spoon/211090498/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            73
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 73
        },
        "testing": {
          "stepDurations": [
            193
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 193
        },
        "cloning": {
          "stepDurations": [
            19
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 19
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 7:19:52 AM",
      "totalDuration": 474
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1029,
        "numberRunning": 1031,
        "numberFailing": 2,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 2
          }
        ],
        "numberSkipping": 2
      },
      "failingModule": "/root/workspace/INRIA/spoon/211342085",
      "failingClasses": [
        {
          "numberPassing": 1,
          "numberRunning": 2,
          "testClass": "spoon.test.reference.CloneReferenceTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        },
        {
          "numberPassing": 3,
          "numberRunning": 4,
          "testClass": "spoon.test.field.FieldTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testGetDefaultExpression",
          "testClass": "spoon.test.field.FieldTest",
          "detail": "expected:<public static final java.lang.String PREFIX = \"BasePrefix\";> but was:<public static final java.lang.String PREFIX = (spoon.test.field.testclasses.BaseClass.PREFIX) + \".b\";>",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testGetDeclarationOfFieldAfterClone",
          "isError": false,
          "testClass": "spoon.test.reference.CloneReferenceTest"
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/211425556",
        "date": "Mar 15, 2017 5:52:56 PM",
        "id": 211425556
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/211342085",
        "date": "Mar 15, 2017 2:22:34 PM",
        "id": 211342085
      }
    },
    "repository": {
      "name": "INRIA-spoon",
      "url": "https://github.com/INRIA/spoon",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 14176513
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/f818e07e0713e20a4cb40dae32a8c7579d8bf140",
        "sha": "f818e07e0713e20a4cb40dae32a8c7579d8bf140",
        "branchName": "master",
        "date": "Mar 15, 2017 5:44:35 PM",
        "repoName": "INRIA/spoon"
      },
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/561853c421c1e8fc6b3cdd3b3837bf8c2940020a",
        "sha": "561853c421c1e8fc6b3cdd3b3837bf8c2940020a",
        "branchName": "master",
        "date": "Mar 15, 2017 2:13:01 PM",
        "repoName": "INRIA/spoon"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/INRIA-spoon-211342085-211425556\n",
    "projectMetrics": {
      "numberSourceFiles": 469,
      "numberLibrariesFailingModule": 10,
      "numberTestFiles": 474,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 4,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 32,
        "numberDeleted": 6
      }
    },
    "diff": "diff --git a/src/main/java/spoon/refactoring/Refactoring.java b/src/main/java/spoon/refactoring/Refactoring.java\nindex 398b076b27..fce0c5fd24 100644\n--- a/src/main/java/spoon/refactoring/Refactoring.java\n+++ b/src/main/java/spoon/refactoring/Refactoring.java\n@@ -36,10 +36,14 @@ public final class Refactoring {\n \t * \t\tNew name of the element.\n \t */\n \tpublic static void changeTypeName(final CtType<?> type, String name) {\n+\n+\t\tfinal String typeQFN = type.getQualifiedName();\n+\n \t\tfinal List<CtTypeReference<?>> references = Query.getElements(type.getFactory(), new TypeFilter<CtTypeReference<?>>(CtTypeReference.class) {\n \t\t\t@Override\n \t\t\tpublic boolean matches(CtTypeReference<?> reference) {\n-\t\t\t\treturn type.getQualifiedName().equals(reference.getQualifiedName());\n+\t\t\t\tString refFQN = reference.getQualifiedName();\n+\t\t\t\treturn typeQFN.equals(refFQN);\n \t\t\t}\n \t\t});\n \ndiff --git a/src/main/java/spoon/support/compiler/SnippetCompilationHelper.java b/src/main/java/spoon/support/compiler/SnippetCompilationHelper.java\nindex 96ba423afc..7039feb2a5 100644\n--- a/src/main/java/spoon/support/compiler/SnippetCompilationHelper.java\n+++ b/src/main/java/spoon/support/compiler/SnippetCompilationHelper.java\n@@ -91,9 +91,8 @@ public class SnippetCompilationHelper {\n \r\n \t\tif (ret instanceof CtClass) {\r\n \t\t\tCtClass klass = (CtClass) ret;\r\n-\t\t\tklass.setSimpleName(klass.getSimpleName().replaceAll(\"^[0-9]*\", \"\"));\r\n-\t\t\tklass.setParent(ret.getFactory().Package().getRootPackage());\r\n \t\t\tret.getFactory().Package().getRootPackage().addType(klass);\r\n+\t\t\tklass.setSimpleName(klass.getSimpleName().replaceAll(\"^[0-9]*\", \"\"));\r\n \t\t}\r\n \t\treturn ret;\r\n \t}\r\ndiff --git a/src/main/java/spoon/support/reflect/declaration/CtNamedElementImpl.java b/src/main/java/spoon/support/reflect/declaration/CtNamedElementImpl.java\nindex db4eb5fba1..aefe25df55 100644\n--- a/src/main/java/spoon/support/reflect/declaration/CtNamedElementImpl.java\n+++ b/src/main/java/spoon/support/reflect/declaration/CtNamedElementImpl.java\n@@ -43,6 +43,7 @@ public abstract class CtNamedElementImpl extends CtElementImpl implements CtName\n \t\tif (factory instanceof FactoryImpl) {\n \t\t\tsimpleName = ((FactoryImpl) factory).dedup(simpleName);\n \t\t}\n+\n \t\tthis.simpleName = simpleName;\n \t\treturn (T) this;\n \t}\ndiff --git a/src/main/java/spoon/support/reflect/reference/CtFieldReferenceImpl.java b/src/main/java/spoon/support/reflect/reference/CtFieldReferenceImpl.java\nindex e112408924..fc7c633870 100644\n--- a/src/main/java/spoon/support/reflect/reference/CtFieldReferenceImpl.java\n+++ b/src/main/java/spoon/support/reflect/reference/CtFieldReferenceImpl.java\n@@ -17,13 +17,11 @@\n package spoon.support.reflect.reference;\n \n import spoon.Launcher;\n-import spoon.reflect.declaration.CtElement;\n import spoon.reflect.declaration.CtEnum;\n import spoon.reflect.declaration.CtField;\n import spoon.reflect.declaration.CtType;\n import spoon.reflect.declaration.CtVariable;\n import spoon.reflect.declaration.ModifierKind;\n-import spoon.reflect.declaration.ParentNotInitializedException;\n import spoon.reflect.reference.CtFieldReference;\n import spoon.reflect.reference.CtTypeReference;\n import spoon.reflect.visitor.CtVisitor;\n@@ -130,35 +128,9 @@ public class CtFieldReferenceImpl<T> extends CtVariableReferenceImpl<T> implemen\n \t@Override\n \t@SuppressWarnings(\"unchecked\")\n \tpublic CtField<T> getDeclaration() {\n-\t\tfinal CtField<T> ctField = lookupDynamically();\n-\t\tif (ctField != null) {\n-\t\t\treturn ctField;\n-\t\t}\n \t\treturn fromDeclaringType();\n \t}\n \n-\tprivate CtField<T> lookupDynamically() {\n-\t\tCtElement element = this;\n-\t\tCtField optional = null;\n-\t\tString name = getSimpleName();\n-\t\ttry {\n-\t\t\tdo {\n-\t\t\t\tCtType type = element.getParent(CtType.class);\n-\t\t\t\tif (type == null) {\n-\t\t\t\t\treturn null;\n-\t\t\t\t}\n-\t\t\t\tfinal CtField potential = type.getField(name);\n-\t\t\t\tif (potential != null) {\n-\t\t\t\t\toptional = potential;\n-\t\t\t\t}\n-\t\t\t\telement = type;\n-\t\t\t} while (optional == null);\n-\t\t} catch (ParentNotInitializedException e) {\n-\t\t\treturn null;\n-\t\t}\n-\t\treturn optional;\n-\t}\n-\n \tprivate CtField<T> fromDeclaringType() {\n \t\tif (declaringType == null) {\n \t\t\treturn null;\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 118243048,
        "hostName": "local",
        "totalMemory": 305135616,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 7:24:53 AM",
      "projectRootPomPath": "./workspace/INRIA/spoon/211342085/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            72
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 72
        },
        "testing": {
          "stepDurations": [
            154
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 154
        },
        "cloning": {
          "stepDurations": [
            22
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 22
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 7:16:38 AM",
      "totalDuration": 486
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1039,
        "numberRunning": 1040,
        "numberFailing": 0,
        "numberErroring": 1,
        "failures": [
          {
            "failureName": "java.lang.NullPointerException",
            "isError": true,
            "occurrences": 1
          }
        ],
        "numberSkipping": 2
      },
      "failingModule": "/root/workspace/INRIA/spoon/213996751",
      "failingClasses": [
        {
          "numberPassing": 0,
          "numberRunning": 1,
          "testClass": "spoon.test.ctElement.MetadataTest",
          "numberFailing": 0,
          "numberErroring": 1,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.NullPointerException",
          "testMethod": "testMetadata",
          "isError": true,
          "testClass": "spoon.test.ctElement.MetadataTest"
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/215500998",
        "date": "Mar 27, 2017 2:04:47 PM",
        "id": 215500998
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/213996751",
        "date": "Mar 22, 2017 9:44:04 PM",
        "id": 213996751
      }
    },
    "repository": {
      "name": "INRIA-spoon",
      "url": "https://github.com/INRIA/spoon",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 14176513
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/5403f1552074216126dd0350d0426fc7ccf2dd2c",
        "sha": "5403f1552074216126dd0350d0426fc7ccf2dd2c",
        "branchName": "master",
        "date": "Mar 27, 2017 1:56:43 PM",
        "repoName": "INRIA/spoon"
      },
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/f190d8ebcdcfdba60a5490a5a934599fd93b159d",
        "sha": "f190d8ebcdcfdba60a5490a5a934599fd93b159d",
        "branchName": "master",
        "date": "Mar 22, 2017 9:35:37 PM",
        "repoName": "INRIA/spoon"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/INRIA-spoon-213996751-215500998\n",
    "projectMetrics": {
      "numberSourceFiles": 474,
      "numberLibrariesFailingModule": 10,
      "numberTestFiles": 478,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 0,
        "numberDeleted": 3
      }
    },
    "diff": "diff --git a/src/main/java/spoon/support/reflect/declaration/CtElementImpl.java b/src/main/java/spoon/support/reflect/declaration/CtElementImpl.java\nindex 465902d648..c7750769da 100644\n--- a/src/main/java/spoon/support/reflect/declaration/CtElementImpl.java\n+++ b/src/main/java/spoon/support/reflect/declaration/CtElementImpl.java\n@@ -386,6 +386,9 @@ public abstract class CtElementImpl implements CtElement, Serializable {\n \n \t@Override\n \tpublic Set<String> getMetadataKeys() {\n+\t\tif (metadata == null) {\n+\t\t\treturn Collections.EMPTY_SET;\n+\t\t}\n \t\treturn metadata.keySet();\n \t}\n \n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 129243320,
        "hostName": "local",
        "totalMemory": 286261248,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 7:19:09 AM",
      "projectRootPomPath": "./workspace/INRIA/spoon/213996751/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            1,
            0,
            0,
            0,
            66
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 67
        },
        "testing": {
          "stepDurations": [
            171
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 171
        },
        "cloning": {
          "stepDurations": [
            22
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 22
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 7:11:04 AM",
      "totalDuration": 478
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1047,
        "numberRunning": 1048,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "org.junit.ComparisonFailure",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 2
      },
      "failingModule": "/root/workspace/INRIA/spoon/218213030",
      "failingClasses": [
        {
          "numberPassing": 27,
          "numberRunning": 28,
          "testClass": "spoon.test.imports.ImportTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "testMethod": "testAnotherMissingImport",
          "testClass": "spoon.test.imports.ImportTest",
          "detail": "expected:<...gImport#doSomething([externallib].SomeType)> but was:<...gImport#doSomething([fr.inria].SomeType)>",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/221992429",
        "date": "Apr 14, 2017 9:23:15 AM",
        "id": 221992429
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/218213030",
        "date": "Apr 3, 2017 10:15:39 PM",
        "id": 218213030
      }
    },
    "repository": {
      "name": "INRIA-spoon",
      "url": "https://github.com/INRIA/spoon",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 14176513
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/d25247f87b6bdb3aa917a90e70f1d1117424f153",
        "sha": "d25247f87b6bdb3aa917a90e70f1d1117424f153",
        "branchName": "master",
        "date": "Apr 14, 2017 9:14:26 AM",
        "repoName": "INRIA/spoon"
      },
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/11d500fb62e40afef7e00af14a5cfadf4eb73011",
        "sha": "11d500fb62e40afef7e00af14a5cfadf4eb73011",
        "branchName": "master",
        "date": "Apr 3, 2017 10:03:43 PM",
        "repoName": "INRIA/spoon"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/INRIA-spoon-218213030-221992429\n",
    "projectMetrics": {
      "numberSourceFiles": 474,
      "numberLibrariesFailingModule": 10,
      "numberTestFiles": 480,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 0,
        "numberDeleted": 3
      }
    },
    "diff": "diff --git a/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java b/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java\nindex 58f0d86f7c..a04d953236 100644\n--- a/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java\n+++ b/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java\n@@ -641,6 +641,9 @@ public class ReferenceBuilder {\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n+\t\t\tif (binding.actualType() instanceof MissingTypeBinding) {\n+\t\t\t\tref = getTypeReference(binding.actualType());\n+\t\t\t}\n \n \t\t\tif (((ParameterizedTypeBinding) binding).arguments != null) {\n \t\t\t\tfor (TypeBinding b : ((ParameterizedTypeBinding) binding).arguments) {\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 143795520,
        "hostName": "local",
        "totalMemory": 284164096,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 9, 2018 11:59:49 PM",
      "projectRootPomPath": "./workspace/INRIA/spoon/218213030/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            1,
            0,
            0,
            1,
            102
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 104
        },
        "testing": {
          "stepDurations": [
            271
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 271
        },
        "cloning": {
          "stepDurations": [
            23
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 23
        }
      },
      "reproductionDateBeginning": "Oct 9, 2018 11:48:23 PM",
      "totalDuration": 678
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1057,
        "numberRunning": 1058,
        "numberFailing": 0,
        "numberErroring": 1,
        "failures": [
          {
            "failureName": "spoon.SpoonException",
            "isError": true,
            "occurrences": 1
          }
        ],
        "numberSkipping": 2
      },
      "failingModule": "/root/workspace/INRIA/spoon/225344336",
      "failingClasses": [
        {
          "numberPassing": 31,
          "numberRunning": 32,
          "testClass": "spoon.test.generics.GenericsTest",
          "numberFailing": 0,
          "numberErroring": 1,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "spoon.SpoonException",
          "testMethod": "testClassContextOnInnerClass",
          "testClass": "spoon.test.generics.GenericsTest",
          "detail": "Cannot resolve 1) type parameter <T>  of declarer public class Banana<T> {\n    abstract class Vitamins extends java.util.AbstractList<T> {    }\n}",
          "isError": true
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/226528821",
        "date": "Apr 27, 2017 9:17:25 PM",
        "id": 226528821
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/225344336",
        "date": "Apr 24, 2017 9:37:50 PM",
        "id": 225344336
      }
    },
    "repository": {
      "name": "INRIA-spoon",
      "url": "https://github.com/INRIA/spoon",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 14176513
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/4c0ac3299569c30661ef249b9a30813fc1081b62",
        "sha": "4c0ac3299569c30661ef249b9a30813fc1081b62",
        "branchName": "master",
        "date": "Apr 27, 2017 9:08:19 PM",
        "repoName": "INRIA/spoon"
      },
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/27fc8208c4da4145c687c7f4db057de7dbed50f6",
        "sha": "27fc8208c4da4145c687c7f4db057de7dbed50f6",
        "branchName": "master",
        "date": "Apr 24, 2017 9:28:30 PM",
        "repoName": "INRIA/spoon"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/INRIA-spoon-225344336-226528821\n",
    "projectMetrics": {
      "numberSourceFiles": 478,
      "numberLibrariesFailingModule": 10,
      "numberTestFiles": 484,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 1,
        "numberDeleted": 12
      }
    },
    "diff": "diff --git a/src/main/java/spoon/support/visitor/ClassTypingContext.java b/src/main/java/spoon/support/visitor/ClassTypingContext.java\nindex ba9f1cc535..8147a59e92 100644\n--- a/src/main/java/spoon/support/visitor/ClassTypingContext.java\n+++ b/src/main/java/spoon/support/visitor/ClassTypingContext.java\n@@ -373,7 +373,7 @@ public class ClassTypingContext implements GenericTypeAdapter {\n \t\t\t\t\tthrow new SpoonException(\"Cannot adapt type parameters of non type scope\");\r\n \t\t\t\t}\r\n \t\t\t\tCtType<?> typeDeclarer = (CtType<?>) declarer;\r\n-\t\t\t\tList<CtTypeReference<?>> actualTypeArguments = typeToArguments.get(typeDeclarer.getQualifiedName());\r\n+\t\t\t\tList<CtTypeReference<?>> actualTypeArguments = getActualTypeArguments(typeDeclarer.getQualifiedName());\r\n \t\t\t\tif (actualTypeArguments == null) {\r\n \t\t\t\t\t/*\r\n \t\t\t\t\t * the actualTypeArguments of this declarer cannot be resolved.\r\n@@ -399,6 +399,17 @@ public class ClassTypingContext implements GenericTypeAdapter {\n \t\treturn result;\r\n \t}\r\n \r\n+\tprivate List<CtTypeReference<?>> getActualTypeArguments(String qualifiedName) {\r\n+\t\tList<CtTypeReference<?>> actualTypeArguments = typeToArguments.get(qualifiedName);\r\n+\t\tif (actualTypeArguments != null) {\r\n+\t\t\treturn actualTypeArguments;\r\n+\t\t}\r\n+\t\tif (enclosingClassTypingContext != null) {\r\n+\t\t\treturn enclosingClassTypingContext.getActualTypeArguments(qualifiedName);\r\n+\t\t}\r\n+\t\treturn null;\r\n+\t}\r\n+\r\n \tprivate static CtTypeReference<?> getValue(List<CtTypeReference<?>> arguments, CtTypeParameter typeParam, CtFormalTypeDeclarer declarer) {\r\n \t\tif (declarer.getFormalCtTypeParameters().size() != arguments.size()) {\r\n \t\t\tthrow new SpoonException(\"Unexpected count of actual type arguments\");\r\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 151565960,
        "hostName": "local",
        "totalMemory": 377487360,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 9, 2018 11:54:40 PM",
      "projectRootPomPath": "./workspace/INRIA/spoon/225344336/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            1,
            0,
            0,
            0,
            100
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 101
        },
        "testing": {
          "stepDurations": [
            299
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 299
        },
        "cloning": {
          "stepDurations": [
            21
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 21
        }
      },
      "reproductionDateBeginning": "Oct 9, 2018 11:40:54 PM",
      "totalDuration": 820
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1059,
        "numberRunning": 1060,
        "numberFailing": 0,
        "numberErroring": 1,
        "failures": [
          {
            "failureName": "java.lang.ArrayIndexOutOfBoundsException",
            "isError": true,
            "occurrences": 1
          }
        ],
        "numberSkipping": 2
      },
      "failingModule": "/root/workspace/INRIA/spoon/227073271",
      "failingClasses": [
        {
          "numberPassing": 35,
          "numberRunning": 36,
          "testClass": "spoon.test.annotation.AnnotationTest",
          "numberFailing": 0,
          "numberErroring": 1,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.ArrayIndexOutOfBoundsException",
          "testMethod": "annotationAddValue",
          "testClass": "spoon.test.annotation.AnnotationTest",
          "detail": "0",
          "isError": true
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/228362442",
        "date": "May 3, 2017 4:37:12 PM",
        "id": 228362442
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/227073271",
        "date": "Apr 29, 2017 8:55:20 AM",
        "id": 227073271
      }
    },
    "repository": {
      "name": "INRIA-spoon",
      "url": "https://github.com/INRIA/spoon",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 14176513
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/4dedea2d16b5d20c99d724461318f783c8631d3d",
        "sha": "4dedea2d16b5d20c99d724461318f783c8631d3d",
        "branchName": "master",
        "date": "May 3, 2017 4:28:09 PM",
        "repoName": "INRIA/spoon"
      },
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/f993132633e7ecdd4145052b9eac0267659f9c6e",
        "sha": "f993132633e7ecdd4145052b9eac0267659f9c6e",
        "branchName": "master",
        "date": "Apr 29, 2017 8:46:32 AM",
        "repoName": "INRIA/spoon"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/INRIA-spoon-227073271-228362442\n",
    "projectMetrics": {
      "numberSourceFiles": 479,
      "numberLibrariesFailingModule": 10,
      "numberTestFiles": 486,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 2,
        "numberDeleted": 1
      }
    },
    "diff": "diff --git a/src/main/java/spoon/support/reflect/declaration/CtAnnotationImpl.java b/src/main/java/spoon/support/reflect/declaration/CtAnnotationImpl.java\nindex 9db6ff169c..5c89ea0128 100644\n--- a/src/main/java/spoon/support/reflect/declaration/CtAnnotationImpl.java\n+++ b/src/main/java/spoon/support/reflect/declaration/CtAnnotationImpl.java\n@@ -110,7 +110,8 @@ public class CtAnnotationImpl<A extends Annotation> extends CtExpressionImpl<A>\n \t\t\t// Value should be converted to a CtNewArray.\n \t\t\tres = getFactory().Core().createNewArray();\n \t\t\tObject[] values = (Object[]) value;\n-\t\t\tres.setType(getFactory().Type().createArrayReference(getFactory().Type().createReference(values[0].getClass())));\n+\n+\t\t\tres.setType(getFactory().Type().createArrayReference(getFactory().Type().createReference(value.getClass().getComponentType())));\n \t\t\tfor (Object o : values) {\n \t\t\t\t((CtNewArray) res).addElement(convertValueToExpression(o));\n \t\t\t}\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 102126664,
        "hostName": "local",
        "totalMemory": 201850880,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 5:31:43 PM",
      "projectRootPomPath": "./workspace/INRIA/spoon/227073271/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            62
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 62
        },
        "testing": {
          "stepDurations": [
            141
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 141
        },
        "cloning": {
          "stepDurations": [
            18
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 18
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 5:25:03 PM",
      "totalDuration": 393
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1059,
        "numberRunning": 1060,
        "numberFailing": 0,
        "numberErroring": 1,
        "failures": [
          {
            "failureName": "spoon.SpoonException",
            "isError": true,
            "occurrences": 1
          }
        ],
        "numberSkipping": 2
      },
      "failingModule": "/root/workspace/INRIA/spoon/228371032",
      "failingClasses": [
        {
          "numberPassing": 13,
          "numberRunning": 14,
          "testClass": "spoon.test.api.APITest",
          "numberFailing": 0,
          "numberErroring": 1,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "spoon.SpoonException",
          "testMethod": "testBasicAPIUsage",
          "testClass": "spoon.test.api.APITest",
          "detail": "java.lang.RuntimeException: inconsistent compilation unit: '/root/workspace/INRIA/spoon/228371032/src/test/resources/spoon/test/api/CommentedClass.java': declared types are []",
          "isError": true
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/228407512",
        "date": "May 3, 2017 6:24:13 PM",
        "id": 228407512
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/228371032",
        "date": "May 3, 2017 4:59:05 PM",
        "id": 228371032
      }
    },
    "repository": {
      "name": "INRIA-spoon",
      "url": "https://github.com/INRIA/spoon",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 14176513
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/d3f34babbcfeea49de9d6175d581df3f8b491845",
        "sha": "d3f34babbcfeea49de9d6175d581df3f8b491845",
        "branchName": "master",
        "date": "May 3, 2017 6:15:09 PM",
        "repoName": "INRIA/spoon"
      },
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/8850c5ba129601b4f38fb5a3017fe9dcbc918aa3",
        "sha": "8850c5ba129601b4f38fb5a3017fe9dcbc918aa3",
        "branchName": "master",
        "date": "May 3, 2017 4:50:14 PM",
        "repoName": "INRIA/spoon"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/INRIA-spoon-228371032-228407512\n",
    "projectMetrics": {
      "numberSourceFiles": 479,
      "numberLibrariesFailingModule": 10,
      "numberTestFiles": 486,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 11,
        "numberDeleted": 9
      }
    },
    "diff": "diff --git a/src/main/java/spoon/support/compiler/jdt/JDTBasedSpoonCompiler.java b/src/main/java/spoon/support/compiler/jdt/JDTBasedSpoonCompiler.java\nindex 71a37d7f45..58ba2da04e 100644\n--- a/src/main/java/spoon/support/compiler/jdt/JDTBasedSpoonCompiler.java\n+++ b/src/main/java/spoon/support/compiler/jdt/JDTBasedSpoonCompiler.java\n@@ -415,16 +415,18 @@ public class JDTBasedSpoonCompiler implements spoon.SpoonModelBuilder {\n \t\tJDTTreeBuilder builder = new JDTTreeBuilder(factory);\r\n \t\tunitLoop:\r\n \t\tfor (CompilationUnitDeclaration unit : units) {\r\n-\t\t\tfinal String unitPath = new String(unit.getFileName());\r\n-\t\t\tfor (final CompilationUnitFilter cuf : compilationUnitFilters) {\r\n-\t\t\t\tif (cuf.exclude(unitPath)) {\r\n-\t\t\t\t\t// do not traverse this unit\r\n-\t\t\t\t\tcontinue unitLoop;\r\n+\t\t\tif (!unit.isEmpty()) {\r\n+\t\t\t\tfinal String unitPath = new String(unit.getFileName());\r\n+\t\t\t\tfor (final CompilationUnitFilter cuf : compilationUnitFilters) {\r\n+\t\t\t\t\tif (cuf.exclude(unitPath)) {\r\n+\t\t\t\t\t\t// do not traverse this unit\r\n+\t\t\t\t\t\tcontinue unitLoop;\r\n+\t\t\t\t\t}\r\n+\t\t\t\t}\r\n+\t\t\t\tunit.traverse(builder, unit.scope);\r\n+\t\t\t\tif (getFactory().getEnvironment().isCommentsEnabled()) {\r\n+\t\t\t\t\tnew JDTCommentBuilder(unit, factory).build();\r\n \t\t\t\t}\r\n-\t\t\t}\r\n-\t\t\tunit.traverse(builder, unit.scope);\r\n-\t\t\tif (getFactory().getEnvironment().isCommentsEnabled()) {\r\n-\t\t\t\tnew JDTCommentBuilder(unit, factory).build();\r\n \t\t\t}\r\n \t\t}\r\n \t}\r\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 146372032,
        "hostName": "local",
        "totalMemory": 256901120,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 5:21:37 PM",
      "projectRootPomPath": "./workspace/INRIA/spoon/228371032/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            92
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 92
        },
        "testing": {
          "stepDurations": [
            141
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 141
        },
        "cloning": {
          "stepDurations": [
            19
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 19
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 5:14:30 PM",
      "totalDuration": 422
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1060,
        "numberRunning": 1061,
        "numberFailing": 0,
        "numberErroring": 1,
        "failures": [
          {
            "failureName": "spoon.SpoonException",
            "isError": true,
            "occurrences": 1
          }
        ],
        "numberSkipping": 2
      },
      "failingModule": "/root/workspace/INRIA/spoon/228407512",
      "failingClasses": [
        {
          "numberPassing": 10,
          "numberRunning": 11,
          "testClass": "spoon.test.methodreference.MethodReferenceTest",
          "numberFailing": 0,
          "numberErroring": 1,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "spoon.SpoonException",
          "testMethod": "testGetGenericMethodFromReferene",
          "testClass": "spoon.test.methodreference.MethodReferenceTest",
          "detail": "Cannot resolve type erasure of the type parameter reference, which is not able to found it's declaration.",
          "isError": true
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/228634633",
        "date": "May 4, 2017 9:54:45 AM",
        "id": 228634633
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/228407512",
        "date": "May 3, 2017 6:24:13 PM",
        "id": 228407512
      }
    },
    "repository": {
      "name": "INRIA-spoon",
      "url": "https://github.com/INRIA/spoon",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 14176513
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/caafc7ec841dd072fc0478d328ab5bd94eb6fdbe",
        "sha": "caafc7ec841dd072fc0478d328ab5bd94eb6fdbe",
        "branchName": "master",
        "date": "May 4, 2017 9:44:59 AM",
        "repoName": "INRIA/spoon"
      },
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/d3f34babbcfeea49de9d6175d581df3f8b491845",
        "sha": "d3f34babbcfeea49de9d6175d581df3f8b491845",
        "branchName": "master",
        "date": "May 3, 2017 6:15:09 PM",
        "repoName": "INRIA/spoon"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/INRIA-spoon-228407512-228634633\n",
    "projectMetrics": {
      "numberSourceFiles": 479,
      "numberLibrariesFailingModule": 10,
      "numberTestFiles": 487,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 2,
        "numberDeleted": 17
      }
    },
    "diff": "diff --git a/src/main/java/spoon/support/reflect/reference/CtTypeParameterReferenceImpl.java b/src/main/java/spoon/support/reflect/reference/CtTypeParameterReferenceImpl.java\nindex 692202a807..3267dd64eb 100644\n--- a/src/main/java/spoon/support/reflect/reference/CtTypeParameterReferenceImpl.java\n+++ b/src/main/java/spoon/support/reflect/reference/CtTypeParameterReferenceImpl.java\n@@ -19,9 +19,11 @@ package spoon.support.reflect.reference;\n import spoon.SpoonException;\n import spoon.reflect.declaration.CtElement;\n import spoon.reflect.declaration.CtFormalTypeDeclarer;\n+import spoon.reflect.declaration.CtMethod;\n import spoon.reflect.declaration.CtType;\n import spoon.reflect.declaration.CtTypeParameter;\n import spoon.reflect.reference.CtActualTypeContainer;\n+import spoon.reflect.reference.CtExecutableReference;\n import spoon.reflect.reference.CtIntersectionTypeReference;\n import spoon.reflect.reference.CtTypeParameterReference;\n import spoon.reflect.reference.CtTypeReference;\n@@ -173,15 +175,28 @@ public class CtTypeParameterReferenceImpl extends CtTypeReferenceImpl<Object> im\n \t\t\treturn null;\n \t\t}\n \n+\t\tCtElement e = this;\n+\t\tCtElement parent = getParent();\n+\t\tif (parent instanceof CtExecutableReference) {\n+\t\t\tCtElement parent2 = parent.getParent();\n+\t\t\tif (parent2 instanceof CtMethod) {\n+\t\t\t\te = parent2;\n+\t\t\t} else {\n+\t\t\t\te = ((CtExecutableReference<?>) parent).getDeclaringType().getTypeDeclaration();\n+\t\t\t}\n+\t\t} else {\n+\t\t\te = e.getParent(CtFormalTypeDeclarer.class);\n+\t\t}\n+\n \t\t// case #1: we're a type of a method parameter, a local variable, ...\n \t\t// the strategy is to look in the parents\n \t\t// collecting all formal type declarers of the hierarchy\n-\t\tCtElement e = this;\n-\t\twhile ((e = e.getParent(CtFormalTypeDeclarer.class)) != null) {\n+\t\twhile (e != null) {\n \t\t\tCtTypeParameter result = findTypeParamDeclaration((CtFormalTypeDeclarer) e, this.getSimpleName());\n \t\t\tif (result != null) {\n \t\t\t\treturn result;\n \t\t\t}\n+\t\t\te = e.getParent(CtFormalTypeDeclarer.class);\n \t\t}\n \t\treturn null;\n \t}\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 164235480,
        "hostName": "local",
        "totalMemory": 249561088,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 5:13:52 PM",
      "projectRootPomPath": "./workspace/INRIA/spoon/228407512/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            1,
            0,
            0,
            0,
            83
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 84
        },
        "testing": {
          "stepDurations": [
            209
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 209
        },
        "cloning": {
          "stepDurations": [
            18
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 18
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 5:04:09 PM",
      "totalDuration": 576
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1061,
        "numberRunning": 1062,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 2
      },
      "failingModule": "/root/workspace/INRIA/spoon/228634633",
      "failingClasses": [
        {
          "numberPassing": 28,
          "numberRunning": 29,
          "testClass": "spoon.test.imports.ImportTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testSuperInheritanceHierarchyFunctionNoClasspath",
          "testClass": "spoon.test.imports.ImportTest",
          "detail": "expected:<2> but was:<1>",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/228649848",
        "date": "May 4, 2017 10:57:12 AM",
        "id": 228649848
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/228634633",
        "date": "May 4, 2017 9:54:45 AM",
        "id": 228634633
      }
    },
    "repository": {
      "name": "INRIA-spoon",
      "url": "https://github.com/INRIA/spoon",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 14176513
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/8ca2213e50dbe82b0cbffc07a4d4aef573dcd06e",
        "sha": "8ca2213e50dbe82b0cbffc07a4d4aef573dcd06e",
        "branchName": "master",
        "date": "May 4, 2017 10:48:08 AM",
        "repoName": "INRIA/spoon"
      },
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/caafc7ec841dd072fc0478d328ab5bd94eb6fdbe",
        "sha": "caafc7ec841dd072fc0478d328ab5bd94eb6fdbe",
        "branchName": "master",
        "date": "May 4, 2017 9:44:59 AM",
        "repoName": "INRIA/spoon"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/INRIA-spoon-228634633-228649848\n",
    "projectMetrics": {
      "numberSourceFiles": 479,
      "numberLibrariesFailingModule": 10,
      "numberTestFiles": 487,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 2,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 57,
        "numberDeleted": 73
      }
    },
    "diff": "diff --git a/src/main/java/spoon/reflect/visitor/filter/SuperInheritanceHierarchyFunction.java b/src/main/java/spoon/reflect/visitor/filter/SuperInheritanceHierarchyFunction.java\nindex 2aa981bed5..15e59d4d18 100644\n--- a/src/main/java/spoon/reflect/visitor/filter/SuperInheritanceHierarchyFunction.java\n+++ b/src/main/java/spoon/reflect/visitor/filter/SuperInheritanceHierarchyFunction.java\n@@ -56,6 +56,47 @@ public class SuperInheritanceHierarchyFunction implements CtConsumableFunction<C\n \tprivate CtScannerListener listener;\r\n \tprivate boolean returnTypeReferences = false;\r\n \r\n+\t/**\r\n+\t * Super inheritance hierarchy scanning listener.\r\n+\t * Use it instead of {@link CtScannerListener}\r\n+\t * if you need to know whether visited type reference is class or interface\r\n+\t */\r\n+\tprivate static class Listener implements CtScannerListener {\r\n+\r\n+\t\t/**\r\n+\t\t * Called before the scanner enters an type\r\n+\t\t *\r\n+\t\t * @param typeRef the type reference to be scanned.\r\n+\t\t * @param isClass true if type reference refers to class, false if it is an interface\r\n+\t\t * @return a {@link ScanningMode} that drives how the scanner processes this element and its children.\r\n+\t\t * For instance, returning {@link ScanningMode#SKIP_ALL} causes that element and all children to be skipped and {@link #exit(CtElement)} are be NOT called for that element.\r\n+\t\t */\r\n+\t\tpublic ScanningMode enter(CtTypeReference<?> typeRef, boolean isClass) {\r\n+\t\t\treturn enter((CtElement) typeRef);\r\n+\t\t}\r\n+\r\n+\t\t/**\r\n+\t\t * This method is called after the element and all its children have been visited.\r\n+\t\t * This method is NOT called if an exception is thrown in {@link #enter(CtElement)} or during the scanning of the element or any of its children element.\r\n+\t\t * This method is NOT called for an element for which {@link #enter(CtElement)} returned {@link ScanningMode#SKIP_ALL}.\r\n+\t\t *\r\n+\t\t * @param typeRef the type reference that has just been scanned.\r\n+\t\t * @param isClass true if type reference refers to class, false if it is an interface\r\n+\t\t */\r\n+\t\tpublic void exit(CtTypeReference<?> typeRef, boolean isClass) {\r\n+\t\t\texit((CtElement) typeRef);\r\n+\t\t}\r\n+\r\n+\t\t@Override\r\n+\t\tpublic ScanningMode enter(CtElement element) {\r\n+\t\t\treturn ScanningMode.NORMAL;\r\n+\t\t}\r\n+\r\n+\t\t@Override\r\n+\t\tpublic void exit(CtElement element) {\r\n+\t\t}\r\n+\t}\r\n+\r\n \t/**\r\n \t * The mapping function created using this constructor\r\n \t * will visit each super class and super interface\r\n@@ -87,7 +128,7 @@ public class SuperInheritanceHierarchyFunction implements CtConsumableFunction<C\n \t * which is used to assure that each interface is visited only once.\r\n \t * It can be extended to implement more powerful listener\r\n \t */\r\n-\tpublic static class DistinctTypeListener implements CtScannerListener {\r\n+\tpublic static class DistinctTypeListener extends Listener {\r\n \t\tSet<String> visitedSet;\r\n \r\n \t\tpublic DistinctTypeListener(Set<String> visitedSet) {\r\n@@ -165,12 +206,30 @@ public class SuperInheritanceHierarchyFunction implements CtConsumableFunction<C\n \t@Override\r\n \tpublic void apply(CtTypeInformation input, CtConsumer<Object> outputConsumer) {\r\n \t\tCtTypeReference<?> typeRef;\r\n+\t\tCtType<?> type;\r\n+\t\t//detect whether input is a class or something else (e.g. interface)\r\n+\t\tboolean isClass;\r\n \t\tif (input instanceof CtType) {\r\n-\t\t\ttypeRef = ((CtType<?>) input).getReference();\r\n+\t\t\ttype = (CtType<?>) input;\r\n+\t\t\ttypeRef = type.getReference();\r\n \t\t} else {\r\n \t\t\ttypeRef = (CtTypeReference<?>) input;\r\n+\t\t\ttry {\r\n+\t\t\t\ttype = typeRef.getTypeDeclaration();\r\n+\t\t\t} catch (SpoonClassNotFoundException e) {\r\n+\t\t\t\tif (typeRef.getFactory().getEnvironment().getNoClasspath() == false) {\r\n+\t\t\t\t\tthrow e;\r\n+\t\t\t\t}\r\n+\t\t\t\ttype = null;\r\n+\t\t\t}\r\n \t\t}\r\n-\t\tScanningMode mode = enter(typeRef);\r\n+\t\t//if the type is unknown, than we expect it is interface, otherwise we would visit java.lang.Object too, even for interfaces\r\n+\t\tisClass = type == null ? false : (type instanceof CtClass);\r\n+\t\tif (isClass == false && includingInterfaces == false) {\r\n+\t\t\t//the input is interface, but this scanner should visit only interfaces. Finish\r\n+\t\t\treturn;\r\n+\t\t}\r\n+\t\tScanningMode mode = enter(typeRef, isClass);\r\n \t\tif (mode == SKIP_ALL) {\r\n \t\t\t//listener decided to not visit that input. Finish\r\n \t\t\treturn;\r\n@@ -182,14 +241,20 @@ public class SuperInheritanceHierarchyFunction implements CtConsumableFunction<C\n \t\t\t}\r\n \t\t}\r\n \t\tif (mode == NORMAL) {\r\n-\t\t\tvisitSuperClasses(typeRef, outputConsumer, includingInterfaces);\r\n+\t\t\tif (isClass == false) {\r\n+\t\t\t\tvisitSuperInterfaces(typeRef, outputConsumer);\r\n+\t\t\t} else {\r\n+\t\t\t\t//call visitSuperClasses only for input of type class. The contract of visitSuperClasses requires that\r\n+\t\t\t\tvisitSuperClasses(typeRef, outputConsumer, includingInterfaces);\r\n+\t\t\t}\r\n \t\t}\r\n-\t\texit(typeRef);\r\n+\t\texit(typeRef, isClass);\r\n \t}\r\n \r\n \t/**\r\n \t * calls `outputConsumer.accept(superClass)` for all super classes of superType.\r\n \t *\r\n+\t * @param superTypeRef the reference to a class. This method is called only for classes. Never for interface\r\n \t * @param includingInterfaces if true then all superInterfaces of each type are sent to `outputConsumer` too.\r\n \t */\r\n \tprotected void visitSuperClasses(CtTypeReference<?> superTypeRef, CtConsumer<Object> outputConsumer, boolean includingInterfaces) {\r\n@@ -205,23 +270,11 @@ public class SuperInheritanceHierarchyFunction implements CtConsumableFunction<C\n \t\t}\r\n \t\tCtTypeReference<?> superClassRef = superTypeRef.getSuperclass();\r\n \t\tif (superClassRef == null) {\r\n-\t\t\tCtType<?> superType;\r\n-\t\t\ttry {\r\n-\t\t\t\tsuperType = superTypeRef.getTypeDeclaration();\r\n-\t\t\t} catch (SpoonClassNotFoundException e) {\r\n-\t\t\t\tif (failOnClassNotFound) {\r\n-\t\t\t\t\tthrow e;\r\n-\t\t\t\t}\r\n-\t\t\t\treturn;\r\n-\t\t\t}\r\n-\t\t\tif (superType instanceof CtClass) {\r\n-\t\t\t\t// only CtCLasses extend object, so visit Object too\r\n-\t\t\t\tsuperClassRef = superTypeRef.getFactory().Type().OBJECT;\r\n-\t\t\t} else {\r\n-\t\t\t\treturn;\r\n-\t\t\t}\r\n+\t\t\t//only CtClasses extend object,\r\n+\t\t\t//this method is called only for classes (not for interfaces) so we know we can visit java.lang.Object now too\r\n+\t\t\tsuperClassRef = superTypeRef.getFactory().Type().OBJECT;\r\n \t\t}\r\n-\t\tScanningMode mode = enter(superClassRef);\r\n+\t\tScanningMode mode = enter(superClassRef, false);\r\n \t\tif (mode == SKIP_ALL) {\r\n \t\t\treturn;\r\n \t\t}\r\n@@ -229,7 +282,7 @@ public class SuperInheritanceHierarchyFunction implements CtConsumableFunction<C\n \t\tif (mode == NORMAL && query.isTerminated() == false) {\r\n \t\t\tvisitSuperClasses(superClassRef, outputConsumer, includingInterfaces);\r\n \t\t}\r\n-\t\texit(superClassRef);\r\n+\t\texit(superClassRef, false);\r\n \t}\r\n \r\n \t/**\r\n@@ -248,7 +301,7 @@ public class SuperInheritanceHierarchyFunction implements CtConsumableFunction<C\n \t\t\treturn;\r\n \t\t}\r\n \t\tfor (CtTypeReference<?> ifaceRef : superInterfaces) {\r\n-\t\t\tScanningMode mode = enter(ifaceRef);\r\n+\t\t\tScanningMode mode = enter(ifaceRef, true);\r\n \t\t\tif (mode == SKIP_ALL) {\r\n \t\t\t\tcontinue;\r\n \t\t\t}\r\n@@ -256,7 +309,7 @@ public class SuperInheritanceHierarchyFunction implements CtConsumableFunction<C\n \t\t\tif (mode == NORMAL && query.isTerminated() == false) {\r\n \t\t\t\tvisitSuperInterfaces(ifaceRef, outputConsumer);\r\n \t\t\t}\r\n-\t\t\texit(ifaceRef);\r\n+\t\t\texit(ifaceRef, true);\r\n \t\t\tif (query.isTerminated()) {\r\n \t\t\t\treturn;\r\n \t\t\t}\r\n@@ -268,13 +321,24 @@ public class SuperInheritanceHierarchyFunction implements CtConsumableFunction<C\n \t\tthis.query = query;\r\n \t}\r\n \r\n-\tprivate ScanningMode enter(CtTypeReference<?> type) {\r\n-\t\treturn listener == null ? NORMAL : listener.enter(type);\r\n+\tprivate ScanningMode enter(CtTypeReference<?> type, boolean isClass) {\r\n+\t\tif (listener == null) {\r\n+\t\t\treturn NORMAL;\r\n+\t\t}\r\n+\t\tif (listener instanceof Listener) {\r\n+\t\t\tListener typeListener = (Listener) listener;\r\n+\t\t\treturn typeListener.enter(type, isClass);\r\n+\t\t}\r\n+\t\treturn listener.enter(type);\r\n \t}\r\n \r\n-\tprivate void exit(CtTypeReference<?> type) {\r\n+\tprivate void exit(CtTypeReference<?> type, boolean isClass) {\r\n \t\tif (listener != null) {\r\n-\t\t\tlistener.exit(type);\r\n+\t\t\tif (listener instanceof Listener) {\r\n+\t\t\t\t((Listener) listener).exit(type, isClass);\r\n+\t\t\t} else {\r\n+\t\t\t\tlistener.exit(type);\r\n+\t\t\t}\r\n \t\t}\r\n \t}\r\n \r\ndiff --git a/src/main/java/spoon/support/visitor/ClassTypingContext.java b/src/main/java/spoon/support/visitor/ClassTypingContext.java\nindex e876c5fd8b..f382483cc7 100644\n--- a/src/main/java/spoon/support/visitor/ClassTypingContext.java\n+++ b/src/main/java/spoon/support/visitor/ClassTypingContext.java\n@@ -24,7 +24,6 @@ import java.util.Map;\n import java.util.Set;\r\n \r\n import spoon.SpoonException;\r\n-import spoon.reflect.declaration.CtClass;\r\n import spoon.reflect.declaration.CtElement;\r\n import spoon.reflect.declaration.CtFormalTypeDeclarer;\r\n import spoon.reflect.declaration.CtType;\r\n@@ -318,14 +317,13 @@ public class ClassTypingContext extends AbstractTypingContext {\n \t\t\tsuper(visitedSet);\r\n \t\t}\r\n \t\t@Override\r\n-\t\tpublic ScanningMode enter(CtElement element) {\r\n-\t\t\tScanningMode mode = super.enter(element);\r\n+\t\tpublic ScanningMode enter(CtTypeReference<?> typeRef, boolean isClass) {\r\n+\t\t\tScanningMode mode = super.enter(typeRef);\r\n \t\t\tif (mode == ScanningMode.SKIP_ALL) {\r\n \t\t\t\t//this interface was already visited. Do not visit it again\r\n \t\t\t\treturn mode;\r\n \t\t\t}\r\n-\t\t\tCtType<?> type = ((CtTypeReference<?>) element).getTypeDeclaration();\r\n-\t\t\tif (type instanceof CtClass) {\r\n+\t\t\tif (isClass) {\r\n \t\t\t\tif (foundArguments != null) {\r\n \t\t\t\t\t//we have found result then we can finish before entering super class. All interfaces of found type should be still visited\r\n \t\t\t\t\t//skip before super class (and it's interfaces) of found type is visited\r\n@@ -336,7 +334,7 @@ public class ClassTypingContext extends AbstractTypingContext {\n \t\t\t\t * Remember that, so we can continue at this place if needed.\r\n \t\t\t\t * If we enter class, then this listener assures that that class and all it's not yet visited interfaces are visited\r\n \t\t\t\t */\r\n-\t\t\t\tlastResolvedSuperclass = type;\r\n+\t\t\t\tlastResolvedSuperclass = typeRef;\r\n \t\t\t}\r\n \t\t\t//this type was not visited yet. Visit it normally\r\n \t\t\treturn ScanningMode.NORMAL;\r\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 147948512,
        "hostName": "local",
        "totalMemory": 251658240,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 5:13:47 PM",
      "projectRootPomPath": "./workspace/INRIA/spoon/228634633/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            86
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 86
        },
        "testing": {
          "stepDurations": [
            209
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 209
        },
        "cloning": {
          "stepDurations": [
            18
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 18
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 5:04:06 PM",
      "totalDuration": 575
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1065,
        "numberRunning": 1067,
        "numberFailing": 2,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "org.junit.ComparisonFailure",
            "isError": false,
            "occurrences": 1
          },
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 2
      },
      "failingModule": "/root/workspace/INRIA/spoon/232723487",
      "failingClasses": [
        {
          "numberPassing": 4,
          "numberRunning": 5,
          "testClass": "spoon.test.ctClass.CtClassTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        },
        {
          "numberPassing": 2,
          "numberRunning": 3,
          "testClass": "spoon.test.filters.CUFilterTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "testMethod": "testSingleExcludeWithoutFilter",
          "testClass": "spoon.test.filters.CUFilterTest",
          "detail": "expected:<[spoon.test.same.]B> but was:<[]B>",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testSpoonShouldInferImplicitPackageInNoClasspath",
          "testClass": "spoon.test.ctClass.CtClassTest",
          "detail": "\nExpected: is \"com.cristal.ircica.applicationcolis.userinterface.fragments.CompletableFragment\"\n     but: was \"CompletableFragment\"",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/232809734",
        "date": "May 16, 2017 2:50:58 PM",
        "id": 232809734
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/232723487",
        "date": "May 16, 2017 10:00:19 AM",
        "id": 232723487
      }
    },
    "repository": {
      "name": "INRIA-spoon",
      "url": "https://github.com/INRIA/spoon",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 14176513
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/71554f9048ff5fb4bc30acafecae71a13a5ba356",
        "sha": "71554f9048ff5fb4bc30acafecae71a13a5ba356",
        "branchName": "master",
        "date": "May 16, 2017 2:42:58 PM",
        "repoName": "INRIA/spoon"
      },
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/de8682d6032f9bcc2828679a82c41d1c4af7c9e9",
        "sha": "de8682d6032f9bcc2828679a82c41d1c4af7c9e9",
        "branchName": "master",
        "date": "May 16, 2017 9:52:23 AM",
        "repoName": "INRIA/spoon"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/INRIA-spoon-232723487-232809734\n",
    "projectMetrics": {
      "numberSourceFiles": 479,
      "numberLibrariesFailingModule": 10,
      "numberTestFiles": 493,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 2,
        "numberDeleted": 1
      }
    },
    "diff": "diff --git a/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java b/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java\nindex a04d953236..b245a2c74d 100644\n--- a/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java\n+++ b/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java\n@@ -913,7 +913,8 @@ public class ReferenceBuilder {\n \t\t} else if (declaring instanceof CtTypeReference) {\n \t\t\tref.setDeclaringType((CtTypeReference) declaring);\n \t\t} else if (declaring == null) {\n-\t\t\tref.setPackage(jdtTreeBuilder.getFactory().Package().topLevel());\n+\t\t\t// in that case we consider the package should be the same as the current one. Fix #1293\n+\t\t\tref.setPackage(jdtTreeBuilder.getContextBuilder().compilationUnitSpoon.getDeclaredPackage().getReference());\n \t\t} else {\n \t\t\tthrow new AssertionError(\"unexpected declaring type: \" + declaring.getClass() + \" of \" + declaring);\n \t\t}\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 146749392,
        "hostName": "local",
        "totalMemory": 235929600,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 4:52:46 PM",
      "projectRootPomPath": "./workspace/INRIA/spoon/232723487/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            62
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 62
        },
        "testing": {
          "stepDurations": [
            139
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 139
        },
        "cloning": {
          "stepDurations": [
            19
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 19
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 4:46:15 PM",
      "totalDuration": 386
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1067,
        "numberRunning": 1068,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 2
      },
      "failingModule": "/root/workspace/INRIA/spoon/232809734",
      "failingClasses": [
        {
          "numberPassing": 36,
          "numberRunning": 37,
          "testClass": "spoon.test.annotation.AnnotationTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testGetAnnotationFromParameter",
          "testClass": "spoon.test.annotation.AnnotationTest",
          "detail": "\nExpected: is <1>\n     but: was <0>",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/233513176",
        "date": "May 18, 2017 8:39:58 AM",
        "id": 233513176
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/232809734",
        "date": "May 16, 2017 2:50:58 PM",
        "id": 232809734
      }
    },
    "repository": {
      "name": "INRIA-spoon",
      "url": "https://github.com/INRIA/spoon",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 14176513
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/399f68100fcc56188172b4398acdfb48e9c1580c",
        "sha": "399f68100fcc56188172b4398acdfb48e9c1580c",
        "branchName": "master",
        "date": "May 18, 2017 8:31:13 AM",
        "repoName": "INRIA/spoon"
      },
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/71554f9048ff5fb4bc30acafecae71a13a5ba356",
        "sha": "71554f9048ff5fb4bc30acafecae71a13a5ba356",
        "branchName": "master",
        "date": "May 16, 2017 2:42:58 PM",
        "repoName": "INRIA/spoon"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/INRIA-spoon-232809734-233513176\n",
    "projectMetrics": {
      "numberSourceFiles": 479,
      "numberLibrariesFailingModule": 10,
      "numberTestFiles": 493,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 0,
        "numberDeleted": 7
      }
    },
    "diff": "diff --git a/src/main/java/spoon/support/compiler/jdt/JDTTreeBuilder.java b/src/main/java/spoon/support/compiler/jdt/JDTTreeBuilder.java\nindex ffc44d8aba..765efe123c 100644\n--- a/src/main/java/spoon/support/compiler/jdt/JDTTreeBuilder.java\n+++ b/src/main/java/spoon/support/compiler/jdt/JDTTreeBuilder.java\n@@ -88,6 +88,7 @@ import org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference;\n import org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference;\r\n import org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference;\r\n import org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference;\r\n+import org.eclipse.jdt.internal.compiler.ast.Receiver;\r\n import org.eclipse.jdt.internal.compiler.ast.ReferenceExpression;\r\n import org.eclipse.jdt.internal.compiler.ast.ReturnStatement;\r\n import org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation;\r\n@@ -955,6 +956,12 @@ public class JDTTreeBuilder extends ASTVisitor {\n \t\t\tcontext.exit(methodDeclaration);\r\n \t\t}\r\n \r\n+\t\t// We consider the receiver as a standard argument (i.e. as a parameter)\r\n+\t\tReceiver receiver = methodDeclaration.receiver;\r\n+\t\tif (receiver != null) {\r\n+\t\t\treceiver.traverse(this, methodDeclaration.scope);\r\n+\t\t}\r\n+\r\n \t\treturn true;\r\n \t}\r\n \r\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 109722464,
        "hostName": "local",
        "totalMemory": 244318208,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 4:45:32 PM",
      "projectRootPomPath": "./workspace/INRIA/spoon/232809734/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            74
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 74
        },
        "testing": {
          "stepDurations": [
            197
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 197
        },
        "cloning": {
          "stepDurations": [
            21
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 21
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 4:36:24 PM",
      "totalDuration": 541
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1078,
        "numberRunning": 1079,
        "numberFailing": 0,
        "numberErroring": 1,
        "failures": [
          {
            "failureName": "spoon.compiler.ModelBuildingException",
            "isError": true,
            "occurrences": 1
          }
        ],
        "numberSkipping": 2
      },
      "failingModule": "/root/workspace/INRIA/spoon/234113323",
      "failingClasses": [
        {
          "numberPassing": 5,
          "numberRunning": 6,
          "testClass": "spoon.test.ctClass.CtClassTest",
          "numberFailing": 0,
          "numberErroring": 1,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "testMethod": "testDefaultConstructorAreOk",
          "testClass": "spoon.test.ctClass.CtClassTest",
          "detail": "The constructor BooleanArrays() is not visible at /root/workspace/INRIA/spoon/234113323/BooleanArraysBaseTest.java:14",
          "isError": true
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/234113988",
        "date": "May 19, 2017 8:23:16 PM",
        "id": 234113988
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/234113323",
        "date": "May 19, 2017 8:20:50 PM",
        "id": 234113323
      }
    },
    "repository": {
      "name": "INRIA-spoon",
      "url": "https://github.com/INRIA/spoon",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 14176513
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/014167880a6e1c523bb27614a02a298ff12eade7",
        "sha": "014167880a6e1c523bb27614a02a298ff12eade7",
        "branchName": "master",
        "date": "May 19, 2017 8:14:44 PM",
        "repoName": "INRIA/spoon"
      },
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/9b69b9c3611a632324d3ae00e658b0280dcc734b",
        "sha": "9b69b9c3611a632324d3ae00e658b0280dcc734b",
        "branchName": "master",
        "date": "May 19, 2017 8:12:28 PM",
        "repoName": "INRIA/spoon"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/INRIA-spoon-234113323-234113988\n",
    "projectMetrics": {
      "numberSourceFiles": 482,
      "numberLibrariesFailingModule": 10,
      "numberTestFiles": 510,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 2,
        "numberDeleted": 16
      }
    },
    "diff": "diff --git a/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java b/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java\nindex 564d67f1af..41edede7b1 100644\n--- a/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java\n+++ b/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java\n@@ -73,6 +73,7 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \tprotected CtTypeReference<?> targetType;\n \tprivate Map<String, Boolean> namesPresentInJavaLang = new HashMap<>();\n \tprivate Set<String> fieldAndMethodsNames = new HashSet<String>();\n+\tprivate Set<CtTypeReference> exploredReferences = new HashSet<>(); // list of explored references\n \n \t@Override\n \tpublic <T> void visitCtFieldRead(CtFieldRead<T> fieldRead) {\n@@ -248,10 +249,20 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \t\t}\n \t}\n \n+\tprivate boolean isThereAnotherClassWithSameNameInAnotherPackage(CtTypeReference<?> ref) {\n+\t\tfor (CtTypeReference typeref : this.exploredReferences) {\n+\t\t\tif (typeref.getSimpleName().equals(ref.getSimpleName()) && !typeref.getQualifiedName().equals(ref.getQualifiedName())) {\n+\t\t\t\treturn true;\n+\t\t\t}\n+\t\t}\n+\t\treturn false;\n+\t}\n+\n \t/**\n \t * Adds a type to the classImports.\n \t */\n \tprotected boolean addClassImport(CtTypeReference<?> ref) {\n+\t\tthis.exploredReferences.add(ref);\n \t\tif (ref == null) {\n \t\t\treturn false;\n \t\t}\n@@ -279,6 +290,10 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \t\t\treturn false;\n \t\t}\n \n+\t\tif (this.isThereAnotherClassWithSameNameInAnotherPackage(ref)) {\n+\t\t\treturn false;\n+\t\t}\n+\n \t\t// we want to be sure that we are not importing a class because a static field or method we already imported\n \t\t// moreover we make exception for same package classes to avoid problems in FQN mode\n \n@@ -346,8 +361,7 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \t\t\t\t}\n \t\t\t}\n \t\t}\n-\t\t//note: we must add the type refs from the same package too, to assure that isImported(typeRef) returns true for them\n-\t\t//these type refs are removed in #getClassImports()\n+\n \t\tclassImports.put(ref.getSimpleName(), ref);\n \t\treturn true;\n \t}\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 159666320,
        "hostName": "local",
        "totalMemory": 251658240,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 4:32:39 PM",
      "projectRootPomPath": "./workspace/INRIA/spoon/234113323/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            74
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 74
        },
        "testing": {
          "stepDurations": [
            203
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 203
        },
        "cloning": {
          "stepDurations": [
            18
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 18
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 4:23:25 PM",
      "totalDuration": 547
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1074,
        "numberRunning": 1082,
        "numberFailing": 8,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 8
          }
        ],
        "numberSkipping": 2
      },
      "failingModule": "/root/workspace/INRIA/spoon/234612953",
      "failingClasses": [
        {
          "numberPassing": 5,
          "numberRunning": 9,
          "testClass": "spoon.test.variable.AccessFullyQualifiedFieldTest",
          "numberFailing": 4,
          "numberErroring": 0,
          "numberSkipping": 0
        },
        {
          "numberPassing": 27,
          "numberRunning": 30,
          "testClass": "spoon.test.imports.ImportTest",
          "numberFailing": 3,
          "numberErroring": 0,
          "numberSkipping": 0
        },
        {
          "numberPassing": 3,
          "numberRunning": 4,
          "testClass": "spoon.test.imports.ImportScannerTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testNoFQNWhenUsedInTryCatch",
          "testClass": "spoon.test.variable.AccessFullyQualifiedFieldTest",
          "detail": "The java file should contain import for Launcher",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testJavaLangIsConsideredAsImported",
          "testClass": "spoon.test.imports.ImportTest",
          "detail": "Can't compile spooned-javalang",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testSpoonWithImports",
          "testClass": "spoon.test.imports.ImportTest",
          "detail": "Spoon ignores the arguments of CtInvocations expected:<3> but was:<1>",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testComputeImportsInClass",
          "testClass": "spoon.test.imports.ImportScannerTest",
          "detail": "expected:<4> but was:<2>",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testNoFQNWhenUsedInLoop",
          "testClass": "spoon.test.variable.AccessFullyQualifiedFieldTest",
          "detail": "The java file should contain import for Launcher",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testNotImportExecutableType",
          "testClass": "spoon.test.imports.ImportTest",
          "detail": "expected:<3> but was:<2>",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testNoFQNWhenShadowedByLocalVariable",
          "testClass": "spoon.test.variable.AccessFullyQualifiedFieldTest",
          "detail": "The java file should contain import for Launcher",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testNoFQNWhenShadowedByField",
          "testClass": "spoon.test.variable.AccessFullyQualifiedFieldTest",
          "detail": "The java file should contain import for Launcher",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/235302726",
        "date": "May 23, 2017 6:51:13 PM",
        "id": 235302726
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/234612953",
        "date": "May 21, 2017 10:46:37 PM",
        "id": 234612953
      }
    },
    "repository": {
      "name": "INRIA-spoon",
      "url": "https://github.com/INRIA/spoon",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 14176513
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/08151bda54b23451d85534763a4ec706708c2e53",
        "sha": "08151bda54b23451d85534763a4ec706708c2e53",
        "branchName": "master",
        "date": "May 23, 2017 6:43:20 PM",
        "repoName": "INRIA/spoon"
      },
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/4a41286b73ef0230f3df61a921db0306195ca31e",
        "sha": "4a41286b73ef0230f3df61a921db0306195ca31e",
        "branchName": "master",
        "date": "May 21, 2017 10:38:30 PM",
        "repoName": "INRIA/spoon"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/INRIA-spoon-234612953-235302726\n",
    "projectMetrics": {
      "numberSourceFiles": 483,
      "numberLibrariesFailingModule": 10,
      "numberTestFiles": 511,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 3,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 64,
        "numberDeleted": 42
      }
    },
    "diff": "diff --git a/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java b/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java\nindex 41edede7b1..9f46670f61 100644\n--- a/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java\n+++ b/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java\n@@ -22,6 +22,7 @@ import spoon.reflect.code.CtFieldAccess;\n import spoon.reflect.code.CtFieldRead;\n import spoon.reflect.code.CtFieldWrite;\n import spoon.reflect.code.CtInvocation;\n+import spoon.reflect.code.CtLiteral;\n import spoon.reflect.declaration.CtAnnotationType;\n import spoon.reflect.declaration.CtClass;\n import spoon.reflect.declaration.CtElement;\n@@ -54,6 +55,7 @@ import java.util.LinkedList;\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n+import java.util.StringTokenizer;\n import java.util.TreeMap;\n \n /**\n@@ -100,10 +102,9 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \t@Override\n \tpublic <T> void visitCtFieldReference(CtFieldReference<T> reference) {\n \t\tenter(reference);\n+\t\tscan(reference.getDeclaringType());\n \t\tif (reference.isStatic()) {\n-\t\t\tif (!addFieldImport(reference)) {\n-\t\t\t\tscan(reference.getDeclaringType());\n-\t\t\t}\n+\t\t\taddFieldImport(reference);\n \t\t} else {\n \t\t\tscan(reference.getDeclaringType());\n \t\t}\n@@ -137,10 +138,15 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \t@Override\n \tpublic <T> void visitCtTypeReference(CtTypeReference<T> reference) {\n \t\tif (!(reference instanceof CtArrayTypeReference)) {\n+\t\t\tCtTypeReference typeReference;\n \t\t\tif (reference.getDeclaringType() == null) {\n-\t\t\t\taddClassImport(reference);\n+\t\t\t\ttypeReference = reference;\n \t\t\t} else {\n-\t\t\t\taddClassImport(reference.getAccessType());\n+\t\t\t\ttypeReference = reference.getAccessType();\n+\t\t\t}\n+\n+\t\t\tif (!this.isTypeInCollision(typeReference, false)) {\n+\t\t\t\tthis.addClassImport(typeReference);\n \t\t\t}\n \t\t}\n \t\tsuper.visitCtTypeReference(reference);\n@@ -277,14 +283,7 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \t\tif (ref.getPackage() == null || ref.getPackage().isUnnamedPackage()) {\n \t\t\treturn false;\n \t\t}\n-\t\tif (ref.getPackage().getSimpleName().equals(\"java.lang\")) {\n-\t\t\tif (classNamePresentInJavaLang(ref)) {\n-\t\t\t\t// Don't import class with names clashing with some classes present in java.lang,\n-\t\t\t\t// because it leads to undecidability and compilation errors. I. e. always leave\n-\t\t\t\t// com.mycompany.String fully-qualified.\n-\t\t\t\treturn false;\n-\t\t\t}\n-\t\t}\n+\n \t\tif (targetType != null && targetType.canAccess(ref) == false) {\n \t\t\t//ref type is not visible in targetType we must not add import for it, java compiler would fail on that.\n \t\t\treturn false;\n@@ -560,7 +559,6 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \n \t/**\n \t * Test if the reference can be imported, i.e. test if the importation could lead to a collision.\n-\t * In FQN mode, it only tests the first package name: if a collision occurs with this first one, it should be imported.\n \t * @param ref\n \t * @return true if the ref should be imported.\n \t */\n@@ -577,6 +575,12 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \t\t\t\tparent = ref;\n \t\t\t}\n \n+\t\t\t// in that case we are trying to import a type because of a literal we are scanning\n+\t\t\t// i.e. a string, an int, etc.\n+\t\t\tif (parent instanceof CtLiteral) {\n+\t\t\t\treturn false;\n+\t\t\t}\n+\n \t\t\tSet<String> localVariablesOfBlock = new HashSet<>();\n \n \t\t\tif (parent instanceof CtField) {\n@@ -588,8 +592,13 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \t\t\t}\n \n \t\t\twhile (!(parent instanceof CtPackage)) {\n-\t\t\t\tif ((parent instanceof CtFieldReference) || (parent instanceof CtExecutableReference)) {\n-\t\t\t\t\tCtReference parentType = (CtReference) parent;\n+\t\t\t\tif ((parent instanceof CtFieldReference) || (parent instanceof CtExecutableReference) || (parent instanceof CtInvocation)) {\n+\t\t\t\t\tCtReference parentType;\n+\t\t\t\t\tif (parent instanceof CtInvocation) {\n+\t\t\t\t\t\tparentType = ((CtInvocation) parent).getExecutable();\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\tparentType = (CtReference) parent;\n+\t\t\t\t\t}\n \t\t\t\t\tLinkedList<String> qualifiedNameTokens = new LinkedList<>();\n \n \t\t\t\t\t// we don't want to test the current ref name, as we risk to create field import and make autoreference\n@@ -600,39 +609,54 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \t\t\t\t\tCtTypeReference typeReference;\n \t\t\t\t\tif (parent instanceof CtFieldReference) {\n \t\t\t\t\t\ttypeReference = ((CtFieldReference) parent).getDeclaringType();\n-\t\t\t\t\t} else {\n+\t\t\t\t\t} else if (parent instanceof CtExecutableReference) {\n \t\t\t\t\t\ttypeReference = ((CtExecutableReference) parent).getDeclaringType();\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\ttypeReference = ((CtInvocation) parent).getExecutable().getDeclaringType();\n \t\t\t\t\t}\n \n \t\t\t\t\tif (typeReference != null) {\n-\t\t\t\t\t\tqualifiedNameTokens.add(typeReference.getSimpleName());\n+\t\t\t\t\t\tqualifiedNameTokens.addFirst(typeReference.getSimpleName());\n \n \t\t\t\t\t\tif (typeReference.getPackage() != null) {\n-\t\t\t\t\t\t\tCtPackage ctPackage = typeReference.getPackage().getDeclaration();\n-\n-\t\t\t\t\t\t\twhile (ctPackage != null) {\n-\t\t\t\t\t\t\t\tqualifiedNameTokens.add(ctPackage.getSimpleName());\n-\n-\t\t\t\t\t\t\t\tCtElement packParent = ctPackage.getParent();\n-\t\t\t\t\t\t\t\tif (packParent.getParent() != null && !((CtPackage) packParent).getSimpleName().equals(CtPackage.TOP_LEVEL_PACKAGE_NAME)) {\n-\t\t\t\t\t\t\t\t\tctPackage = (CtPackage) packParent;\n-\t\t\t\t\t\t\t\t} else {\n-\t\t\t\t\t\t\t\t\tctPackage = null;\n-\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\tStringTokenizer token = new StringTokenizer(typeReference.getPackage().getSimpleName(), CtPackage.PACKAGE_SEPARATOR);\n+\t\t\t\t\t\t\tint index = 0;\n+\t\t\t\t\t\t\twhile (token.hasMoreElements()) {\n+\t\t\t\t\t\t\t\tqualifiedNameTokens.add(index, token.nextToken());\n+\t\t\t\t\t\t\t\tindex++;\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t\tif (!qualifiedNameTokens.isEmpty()) {\n \t\t\t\t\t\t// qualified name token are ordered in the reverse order\n \t\t\t\t\t\t// if the first package name is a variable name somewhere, it could lead to a collision\n-\t\t\t\t\t\tif (fieldAndMethodsNames.contains(qualifiedNameTokens.getLast()) || localVariablesOfBlock.contains(qualifiedNameTokens.getLast())) {\n-\t\t\t\t\t\t\tqualifiedNameTokens.removeLast();\n+\t\t\t\t\t\tif (fieldAndMethodsNames.contains(qualifiedNameTokens.getFirst()) || localVariablesOfBlock.contains(qualifiedNameTokens.getFirst())) {\n+\t\t\t\t\t\t\tqualifiedNameTokens.removeFirst();\n \n \t\t\t\t\t\t\tif (fqnMode) {\n-\t\t\t\t\t\t\t\treturn true;\n+\t\t\t\t\t\t\t\t// in case we are testing a type: we should not import it if its entire name is in collision\n+\t\t\t\t\t\t\t\t// for example: spoon.Launcher if a field spoon and another one Launcher exists\n+\t\t\t\t\t\t\t\tif (ref instanceof CtTypeReference) {\n+\t\t\t\t\t\t\t\t\tif (qualifiedNameTokens.isEmpty()) {\n+\t\t\t\t\t\t\t\t\t\treturn true;\n+\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t\t// but if the other package names are not a variable name, it's ok to import\n+\t\t\t\t\t\t\t\t\tfor (int i =  0; i < qualifiedNameTokens.size(); i++) {\n+\t\t\t\t\t\t\t\t\t\tString testedToken = qualifiedNameTokens.get(i);\n+\t\t\t\t\t\t\t\t\t\tif (!fieldAndMethodsNames.contains(testedToken) && !localVariablesOfBlock.contains(testedToken)) {\n+\t\t\t\t\t\t\t\t\t\t\treturn true;\n+\t\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t\treturn false;\n+\n+\t\t\t\t\t\t\t\t// However if it is a static method/field, we always accept to import them in this case\n+\t\t\t\t\t\t\t\t// It is the last possibility for managing import for us\n+\t\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\t\treturn true;\n+\t\t\t\t\t\t\t\t}\n \t\t\t\t\t\t\t} else {\n \t\t\t\t\t\t\t\t// but if the other package names are not a variable name, it's ok to import\n-\t\t\t\t\t\t\t\tfor (int i = qualifiedNameTokens.size() - 1; i > 0; i--) {\n+\t\t\t\t\t\t\t\tfor (int i =  0; i < qualifiedNameTokens.size(); i++) {\n \t\t\t\t\t\t\t\t\tString testedToken = qualifiedNameTokens.get(i);\n \t\t\t\t\t\t\t\t\tif (!fieldAndMethodsNames.contains(testedToken) && !localVariablesOfBlock.contains(testedToken)) {\n \t\t\t\t\t\t\t\t\t\treturn false;\ndiff --git a/src/main/java/spoon/reflect/visitor/MinimalImportScanner.java b/src/main/java/spoon/reflect/visitor/MinimalImportScanner.java\nindex 912692f6cb..8f93166e31 100644\n--- a/src/main/java/spoon/reflect/visitor/MinimalImportScanner.java\n+++ b/src/main/java/spoon/reflect/visitor/MinimalImportScanner.java\n@@ -29,7 +29,8 @@ public class MinimalImportScanner extends ImportScannerImpl implements ImportSca\n \n \t/**\n \t * This method use @link{ImportScannerImpl#isTypeInCollision} to import a ref only if there is a collision\n-\t * @param ref\n+\t * @param ref: the type we are testing, it can be a CtTypeReference, a CtFieldReference or a CtExecutableReference\n+\t *\n \t * @return true if the ref should be imported.\n \t */\n \tprivate boolean shouldTypeBeImported(CtReference ref) {\n@@ -54,6 +55,12 @@ public class MinimalImportScanner extends ImportScannerImpl implements ImportSca\n \n \t@Override\n \tprotected boolean addFieldImport(CtFieldReference ref) {\n+\t\tif (ref.getDeclaringType() != null) {\n+\t\t\tif (isImportedInClassImports(ref.getDeclaringType())) {\n+\t\t\t\treturn false;\n+\t\t\t}\n+\t\t}\n+\n \t\tboolean shouldTypeBeImported = this.shouldTypeBeImported(ref);\n \n \t\tif (shouldTypeBeImported) {\n@@ -70,6 +77,11 @@ public class MinimalImportScanner extends ImportScannerImpl implements ImportSca\n \n \t@Override\n \tprotected boolean addMethodImport(CtExecutableReference ref) {\n+\t\tif (ref.getDeclaringType() != null) {\n+\t\t\tif (isImportedInClassImports(ref.getDeclaringType())) {\n+\t\t\t\treturn false;\n+\t\t\t}\n+\t\t}\n \t\tboolean shouldTypeBeImported = this.shouldTypeBeImported(ref);\n \n \t\tif (shouldTypeBeImported) {\ndiff --git a/src/main/java/spoon/reflect/visitor/printer/ElementPrinterHelper.java b/src/main/java/spoon/reflect/visitor/printer/ElementPrinterHelper.java\nindex 2133fe568b..8ede107b02 100644\n--- a/src/main/java/spoon/reflect/visitor/printer/ElementPrinterHelper.java\n+++ b/src/main/java/spoon/reflect/visitor/printer/ElementPrinterHelper.java\n@@ -283,7 +283,7 @@ public class ElementPrinterHelper {\n \t\t\t\t\timportTypeStr = this.removeInnerTypeSeparator(fieldRef.getDeclaringType().getQualifiedName()) + \".\" + fieldRef.getSimpleName();\n \t\t\t\t}\n \n-\t\t\t\tif (!importTypeStr.equals(\"\")) {\n+\t\t\t\tif (!importTypeStr.equals(\"\") && !importTypeStr.startsWith(\"java.lang\")) {\n \t\t\t\t\tprinter.write(importStr + \" \" + importTypeStr + \";\").writeln().writeTabs();\n \t\t\t\t}\n \t\t\t}\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 89932184,
        "hostName": "local",
        "totalMemory": 262668288,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 4:22:44 PM",
      "projectRootPomPath": "./workspace/INRIA/spoon/234612953/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            1,
            0,
            0,
            0,
            65
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 66
        },
        "testing": {
          "stepDurations": [
            169
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 169
        },
        "cloning": {
          "stepDurations": [
            19
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 19
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 4:14:08 PM",
      "totalDuration": 510
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1083,
        "numberRunning": 1084,
        "numberFailing": 0,
        "numberErroring": 1,
        "failures": [
          {
            "failureName": "java.lang.NullPointerException",
            "isError": true,
            "occurrences": 1
          }
        ],
        "numberSkipping": 2
      },
      "failingModule": "/root/workspace/INRIA/spoon/237078306",
      "failingClasses": [
        {
          "numberPassing": 4,
          "numberRunning": 5,
          "testClass": "spoon.test.imports.ImportScannerTest",
          "numberFailing": 0,
          "numberErroring": 1,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.NullPointerException",
          "testMethod": "testTargetTypeNull",
          "isError": true,
          "testClass": "spoon.test.imports.ImportScannerTest"
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/237089137",
        "date": "May 29, 2017 11:03:21 AM",
        "id": 237089137
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/237078306",
        "date": "May 29, 2017 10:21:36 AM",
        "id": 237078306
      }
    },
    "repository": {
      "name": "INRIA-spoon",
      "url": "https://github.com/INRIA/spoon",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 14176513
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/b3f568da7a38aad38505e923d9b9f4025f38b0ca",
        "sha": "b3f568da7a38aad38505e923d9b9f4025f38b0ca",
        "branchName": "master",
        "date": "May 29, 2017 10:54:20 AM",
        "repoName": "INRIA/spoon"
      },
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/54e1909ab7217cd8417d4d15cc7c0d127750b474",
        "sha": "54e1909ab7217cd8417d4d15cc7c0d127750b474",
        "branchName": "master",
        "date": "May 29, 2017 10:13:14 AM",
        "repoName": "INRIA/spoon"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/INRIA-spoon-237078306-237089137\n",
    "projectMetrics": {
      "numberSourceFiles": 484,
      "numberLibrariesFailingModule": 10,
      "numberTestFiles": 512,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 1,
        "numberDeleted": 1
      }
    },
    "diff": "diff --git a/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java b/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java\nindex 9f46670f61..614a6f93e6 100644\n--- a/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java\n+++ b/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java\n@@ -563,7 +563,7 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \t * @return true if the ref should be imported.\n \t */\n \tprotected boolean isTypeInCollision(CtReference ref, boolean fqnMode) {\n-\t\tif (targetType.getSimpleName().equals(ref.getSimpleName()) && !targetType.equals(ref)) {\n+\t\tif (targetType != null && targetType.getSimpleName().equals(ref.getSimpleName()) && !targetType.equals(ref)) {\n \t\t\treturn true;\n \t\t}\n \n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 144269200,
        "hostName": "local",
        "totalMemory": 258998272,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 4:14:54 PM",
      "projectRootPomPath": "./workspace/INRIA/spoon/237078306/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            1,
            0,
            0,
            0,
            93
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 94
        },
        "testing": {
          "stepDurations": [
            219
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 219
        },
        "cloning": {
          "stepDurations": [
            19
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 19
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 4:05:41 PM",
      "totalDuration": 547
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1087,
        "numberRunning": 1088,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 2
      },
      "failingModule": "/root/workspace/INRIA/spoon/237133219",
      "failingClasses": [
        {
          "numberPassing": 32,
          "numberRunning": 33,
          "testClass": "spoon.test.imports.ImportTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testmportInCu",
          "isError": false,
          "testClass": "spoon.test.imports.ImportTest"
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/237187910",
        "date": "May 29, 2017 4:29:03 PM",
        "id": 237187910
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/237133219",
        "date": "May 29, 2017 1:34:16 PM",
        "id": 237133219
      }
    },
    "repository": {
      "name": "INRIA-spoon",
      "url": "https://github.com/INRIA/spoon",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 14176513
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/0b9650639379d1d9f38060d5b013015d01c5b231",
        "sha": "0b9650639379d1d9f38060d5b013015d01c5b231",
        "branchName": "master",
        "date": "May 29, 2017 4:19:55 PM",
        "repoName": "INRIA/spoon"
      },
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/ce6baba196990f5ae3dcbf48bbdbd5d20cf95441",
        "sha": "ce6baba196990f5ae3dcbf48bbdbd5d20cf95441",
        "branchName": "master",
        "date": "May 29, 2017 1:26:05 PM",
        "repoName": "INRIA/spoon"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/INRIA-spoon-237133219-237187910\n",
    "projectMetrics": {
      "numberSourceFiles": 484,
      "numberLibrariesFailingModule": 10,
      "numberTestFiles": 516,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 2,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 35,
        "numberDeleted": 4
      }
    },
    "diff": "diff --git a/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java b/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java\nindex 2781fcda42..2749c97959 100644\n--- a/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java\n+++ b/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java\n@@ -1796,12 +1796,14 @@ public class DefaultJavaPrettyPrinter implements CtVisitor, PrettyPrinter {\n \t@Override\n \tpublic void calculate(CompilationUnit sourceCompilationUnit, List<CtType<?>> types) {\n \t\tthis.sourceCompilationUnit = sourceCompilationUnit;\n-\t\t// reset the import scanner between each compilationunit\n+\n+\t\t// reset the importsContext to avoid errors with multiple CU\n \t\tif (env.isAutoImports()) {\n \t\t\tthis.importsContext = new ImportScannerImpl();\n \t\t} else {\n \t\t\tthis.importsContext = new MinimalImportScanner();\n \t\t}\n+\n \t\tSet<CtReference> imports = new HashSet<>();\n \t\tfor (CtType<?> t : types) {\n \t\t\timports.addAll(computeImports(t));\ndiff --git a/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java b/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java\nindex 614a6f93e6..68e4f28a14 100644\n--- a/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java\n+++ b/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java\n@@ -20,7 +20,6 @@ import spoon.reflect.code.CtBlock;\n import spoon.reflect.code.CtCatchVariable;\n import spoon.reflect.code.CtFieldAccess;\n import spoon.reflect.code.CtFieldRead;\n-import spoon.reflect.code.CtFieldWrite;\n import spoon.reflect.code.CtInvocation;\n import spoon.reflect.code.CtLiteral;\n import spoon.reflect.declaration.CtAnnotationType;\n@@ -80,7 +79,6 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \t@Override\n \tpublic <T> void visitCtFieldRead(CtFieldRead<T> fieldRead) {\n \t\tenter(fieldRead);\n-\t\tscan(fieldRead.getVariable());\n \t\tscan(fieldRead.getAnnotations());\n \t\tscan(fieldRead.getTypeCasts());\n \t\tscan(fieldRead.getVariable());\n@@ -88,17 +86,6 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \t\texit(fieldRead);\n \t}\n \n-\t@Override\n-\tpublic <T> void visitCtFieldWrite(CtFieldWrite<T> fieldWrite) {\n-\t\tenter(fieldWrite);\n-\t\tscan(fieldWrite.getVariable());\n-\t\tscan(fieldWrite.getAnnotations());\n-\t\tscan(fieldWrite.getTypeCasts());\n-\t\tscan(fieldWrite.getVariable());\n-\t\tscan(fieldWrite.getTarget());\n-\t\texit(fieldWrite);\n-\t}\n-\n \t@Override\n \tpublic <T> void visitCtFieldReference(CtFieldReference<T> reference) {\n \t\tenter(reference);\n@@ -124,17 +111,6 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \t\texit(reference);\n \t}\n \n-\t@Override\n-\tpublic <T> void visitCtInvocation(CtInvocation<T> invocation) {\n-\t\tenter(invocation);\n-\t\tscan(invocation.getAnnotations());\n-\t\tscan(invocation.getTypeCasts());\n-\t\tscan(invocation.getTarget());\n-\t\tscan(invocation.getExecutable());\n-\t\tscan(invocation.getArguments());\n-\t\texit(invocation);\n-\t}\n-\n \t@Override\n \tpublic <T> void visitCtTypeReference(CtTypeReference<T> reference) {\n \t\tif (!(reference instanceof CtArrayTypeReference)) {\n@@ -207,9 +183,6 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \n \t@Override\n \tpublic Collection<CtReference> computeAllImports(CtType<?> simpleType) {\n-\t\tclassImports.clear();\n-\t\tfieldImports.clear();\n-\t\tmethodImports.clear();\n \t\t//look for top declaring type of that simpleType\n \t\ttargetType = simpleType.getReference().getTopLevelType();\n \t\taddClassImport(simpleType.getReference());\n@@ -224,11 +197,7 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \n \t@Override\n \tpublic Collection<CtTypeReference<?>> computeImports(CtElement element) {\n-\t\tclassImports.clear();\n-\t\tfieldImports.clear();\n-\t\tmethodImports.clear();\n \t\t//look for top declaring type of that simpleType\n-\n \t\tif (element instanceof CtType) {\n \t\t\tCtType simpleType = (CtType) element;\n \t\t\ttargetType = simpleType.getReference().getTopLevelType();\n@@ -404,11 +373,11 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \t */\n \tprivate boolean declaringTypeIsLocalOrImported(CtTypeReference declaringType) {\n \t\tif (declaringType != null) {\n-\t\t\tif (isImportedInClassImports(declaringType) || classNamePresentInJavaLang(declaringType)) {\n+\t\t\tif (!isTypeInCollision(declaringType, false) && addClassImport(declaringType)) {\n \t\t\t\treturn true;\n \t\t\t}\n \n-\t\t\tif (!isTypeInCollision(declaringType, false) && addClassImport(declaringType)) {\n+\t\t\tif (isImportedInClassImports(declaringType) || classNamePresentInJavaLang(declaringType)) {\n \t\t\t\treturn true;\n \t\t\t}\n \n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 173484160,
        "hostName": "local",
        "totalMemory": 262144000,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 4:02:25 PM",
      "projectRootPomPath": "./workspace/INRIA/spoon/237133219/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            1,
            0,
            0,
            0,
            89
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 90
        },
        "testing": {
          "stepDurations": [
            187
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 187
        },
        "cloning": {
          "stepDurations": [
            21
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 21
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 3:53:00 PM",
      "totalDuration": 557
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1088,
        "numberRunning": 1090,
        "numberFailing": 2,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 1
          },
          {
            "failureName": "org.junit.ComparisonFailure",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 2
      },
      "failingModule": "/root/workspace/INRIA/spoon/237507053",
      "failingClasses": [
        {
          "numberPassing": 9,
          "numberRunning": 10,
          "testClass": "spoon.test.prettyprinter.DefaultPrettyPrinterTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        },
        {
          "numberPassing": 1,
          "numberRunning": 2,
          "testClass": "spoon.test.prettyprinter.LinesTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testIdenticalPrettyPrinter",
          "testClass": "spoon.test.prettyprinter.LinesTest",
          "detail": "class A {\n    ArrayList<String> list = new ArrayList<>();} not handled expected:<5> but was:<7>",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "testMethod": "printClassCreatedWithSpoon",
          "testClass": "spoon.test.prettyprinter.DefaultPrettyPrinterTest",
          "detail": "expected:<[]package foo;\n\n\nclass...> but was:<[\n\n]package foo;\n\n\nclass...>",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/237511642",
        "date": "May 30, 2017 3:22:20 PM",
        "id": 237511642
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/237507053",
        "date": "May 30, 2017 3:08:35 PM",
        "id": 237507053
      }
    },
    "repository": {
      "name": "INRIA-spoon",
      "url": "https://github.com/INRIA/spoon",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 14176513
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/67934eece720ef593284dfa39edf57a3aa9458e0",
        "sha": "67934eece720ef593284dfa39edf57a3aa9458e0",
        "branchName": "master",
        "date": "May 30, 2017 3:14:01 PM",
        "repoName": "INRIA/spoon"
      },
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/4d49c23ba542e0eacb679d911a523cd9bf4a3712",
        "sha": "4d49c23ba542e0eacb679d911a523cd9bf4a3712",
        "branchName": "master",
        "date": "May 30, 2017 3:00:14 PM",
        "repoName": "INRIA/spoon"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/INRIA-spoon-237507053-237511642\n",
    "projectMetrics": {
      "numberSourceFiles": 485,
      "numberLibrariesFailingModule": 10,
      "numberTestFiles": 516,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 4,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 24,
        "numberDeleted": 23
      }
    },
    "diff": "diff --git a/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java b/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java\nindex 4439811157..6986322276 100644\n--- a/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java\n+++ b/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java\n@@ -282,7 +282,7 @@ public class DefaultJavaPrettyPrinter implements CtVisitor, PrettyPrinter {\n \t\t\tcontext.elementStack.push(e);\n \t\t\tif (env.isPreserveLineNumbers()) {\n \t\t\t\tif (!(e instanceof CtNamedElement)) {\n-\t\t\t\t\tprinter.adjustPosition(e, sourceCompilationUnit);\n+\t\t\t\t\tprinter.adjustStartPosition(e);\n \t\t\t\t}\n \t\t\t}\n \t\t\te.accept(this);\n@@ -436,9 +436,10 @@ public class DefaultJavaPrettyPrinter implements CtVisitor, PrettyPrinter {\n \t\t\t}\n \t\t}\n \t\tprinter.decTab();\n+\t\tprinter.adjustEndPosition(block);\n \t\tif (env.isPreserveLineNumbers()) {\n \t\t\tif (!block.isImplicit()) {\n-\t\t\t\tprinter.write(\"}\");\n+\t\t\t\tprinter.writeTabs().write(\"}\");\n \t\t\t}\n \t\t} else {\n \t\t\tprinter.writeln().writeTabs();\n@@ -528,7 +529,7 @@ public class DefaultJavaPrettyPrinter implements CtVisitor, PrettyPrinter {\n \t\t// lst.addAll(elementPrinterHelper.getComments(ctClass, CommentOffset.INSIDE));\n \t\tprinter.write(\" {\").incTab();\n \t\telementPrinterHelper.writeElementList(ctClass.getTypeMembers());\n-\t\tprinter.decTab().writeTabs().write(\"}\");\n+\t\tprinter.adjustEndPosition(ctClass).decTab().writeTabs().write(\"}\");\n \t\tcontext.popCurrentThis();\n \t}\n \n@@ -1092,7 +1093,7 @@ public class DefaultJavaPrettyPrinter implements CtVisitor, PrettyPrinter {\n \n \t\t\telementPrinterHelper.writeActualTypeArguments(invocation);\n \t\t\tif (env.isPreserveLineNumbers()) {\n-\t\t\t\tprinter.adjustPosition(invocation, sourceCompilationUnit);\n+\t\t\t\tprinter.adjustStartPosition(invocation);\n \t\t\t}\n \t\t\tprinter.write(invocation.getExecutable().getSimpleName());\n \t\t}\n@@ -1163,7 +1164,7 @@ public class DefaultJavaPrettyPrinter implements CtVisitor, PrettyPrinter {\n \t\t\tenterCtStatement(localVariable);\n \t\t}\n \t\tif (env.isPreserveLineNumbers()) {\n-\t\t\tprinter.adjustPosition(localVariable, sourceCompilationUnit);\n+\t\t\tprinter.adjustStartPosition(localVariable);\n \t\t}\n \t\tif (!context.noTypeDecl()) {\n \t\t\telementPrinterHelper.writeModifiers(localVariable);\n@@ -1185,7 +1186,7 @@ public class DefaultJavaPrettyPrinter implements CtVisitor, PrettyPrinter {\n \t@Override\n \tpublic <T> void visitCtCatchVariable(CtCatchVariable<T> catchVariable) {\n \t\tif (env.isPreserveLineNumbers()) {\n-\t\t\tprinter.adjustPosition(catchVariable, sourceCompilationUnit);\n+\t\t\tprinter.adjustStartPosition(catchVariable);\n \t\t}\n \t\telementPrinterHelper.writeModifiers(catchVariable);\n \t\tscan(catchVariable.getType());\n@@ -1813,7 +1814,12 @@ public class DefaultJavaPrettyPrinter implements CtVisitor, PrettyPrinter {\n \t\telementPrinterHelper.writeHeader(types, imports);\n \t\tfor (CtType<?> t : types) {\n \t\t\tscan(t);\n-\t\t\tprinter.writeln().writeln().writeTabs();\n+\t\t\tif (!env.isPreserveLineNumbers()) {\n+\t\t\t\t// saving lines and chars\n+\t\t\t\tprinter.writeln().writeln().writeTabs();\n+\t\t\t} else {\n+\t\t\t\tprinter.adjustEndPosition(t);\n+\t\t\t}\n \t\t}\n \t}\n \ndiff --git a/src/main/java/spoon/reflect/visitor/printer/ElementPrinterHelper.java b/src/main/java/spoon/reflect/visitor/printer/ElementPrinterHelper.java\nindex 0882ead28f..0f50d2a7cd 100644\n--- a/src/main/java/spoon/reflect/visitor/printer/ElementPrinterHelper.java\n+++ b/src/main/java/spoon/reflect/visitor/printer/ElementPrinterHelper.java\n@@ -88,7 +88,7 @@ public class ElementPrinterHelper {\n \tpublic void visitCtNamedElement(CtNamedElement namedElement, CompilationUnit sourceCompilationUnit) {\n \t\twriteAnnotations(namedElement);\n \t\tif (env.isPreserveLineNumbers()) {\n-\t\t\tprinter.adjustPosition(namedElement, sourceCompilationUnit);\n+\t\t\tprinter.adjustStartPosition(namedElement);\n \t\t}\n \t}\n \n@@ -261,7 +261,6 @@ public class ElementPrinterHelper {\n \t\tif (!types.isEmpty()) {\n \t\t\tfor (CtType<?> ctType : types) {\n \t\t\t\twriteComment(ctType, CommentOffset.TOP_FILE);\n-\t\t\t\tprinter.writeln().writeln().writeTabs();\n \t\t\t}\n \t\t\t// writing the header package\n \t\t\tif (!types.get(0).getPackage().isUnnamedPackage()) {\ndiff --git a/src/main/java/spoon/reflect/visitor/printer/PrinterHelper.java b/src/main/java/spoon/reflect/visitor/printer/PrinterHelper.java\nindex 9b19bc3a1f..e4c01edfd1 100644\n--- a/src/main/java/spoon/reflect/visitor/printer/PrinterHelper.java\n+++ b/src/main/java/spoon/reflect/visitor/printer/PrinterHelper.java\n@@ -16,7 +16,6 @@\n  */\n package spoon.reflect.visitor.printer;\n \n-import org.apache.log4j.Level;\n import spoon.compiler.Environment;\n import spoon.reflect.code.BinaryOperatorKind;\n import spoon.reflect.code.UnaryOperatorKind;\n@@ -160,24 +159,30 @@ public class PrinterHelper {\n \t\treturn (c == ' ') || (c == '\\t') || (c == '\\n') || (c == '\\r');\n \t}\n \n-\tpublic void adjustPosition(CtElement e, CompilationUnit unitExpected) {\n-\t\tif (e.getPosition() != null && !e.isImplicit() && e.getPosition().getCompilationUnit() != null && e.getPosition().getCompilationUnit() == unitExpected) {\n+\tpublic PrinterHelper adjustStartPosition(CtElement e) {\n+\t\tif (e.getPosition() != null && !e.isImplicit()) {\n+\t\t\t// we should add some lines\n \t\t\twhile (line < e.getPosition().getLine()) {\n \t\t\t\twriteln();\n \t\t\t}\n \t\t\t// trying to remove some lines\n \t\t\twhile (line > e.getPosition().getLine()) {\n \t\t\t\tif (!removeLine()) {\n-\t\t\t\t\tif (line > e.getPosition().getEndLine()) {\n-\t\t\t\t\t\tfinal String message = \"cannot adjust position of \" + e.getClass().getSimpleName() + \" '\" //\n-\t\t\t\t\t\t\t\t+ e.getShortRepresentation() + \"' \" + \" to match lines: \" + line + \" > [\" //\n-\t\t\t\t\t\t\t\t+ e.getPosition().getLine() + \", \" + e.getPosition().getEndLine() + \"]\"; //\n-\t\t\t\t\t\tenv.report(null, Level.WARN, e, message);\n-\t\t\t\t\t}\n \t\t\t\t\tbreak;\n \t\t\t\t}\n \t\t\t}\n \t\t}\n+\t\treturn this;\n+\t}\n+\n+\tpublic PrinterHelper adjustEndPosition(CtElement e) {\n+\t\tif (env.isPreserveLineNumbers() && e.getPosition() != null) {\n+\t\t\t// let's add lines if required\n+\t\t\twhile (line < e.getPosition().getEndLine()) {\n+\t\t\t\twriteln();\n+\t\t\t}\n+\t\t}\n+\t\treturn this;\n \t}\n \n \tpublic void undefineLine() {\ndiff --git a/src/main/java/spoon/support/compiler/jdt/JDTBasedSpoonCompiler.java b/src/main/java/spoon/support/compiler/jdt/JDTBasedSpoonCompiler.java\nindex ff14d04245..d9e128bc3d 100644\n--- a/src/main/java/spoon/support/compiler/jdt/JDTBasedSpoonCompiler.java\n+++ b/src/main/java/spoon/support/compiler/jdt/JDTBasedSpoonCompiler.java\n@@ -504,6 +504,7 @@ public class JDTBasedSpoonCompiler implements spoon.SpoonModelBuilder {\n \r\n \t\t\t\tIOUtils.copy(is, new FileOutputStream(file));\r\n \r\n+\r\n \t\t\t\tif (!printedFiles.contains(file)) {\r\n \t\t\t\t\tprintedFiles.add(file);\r\n \t\t\t\t}\r\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 169442888,
        "hostName": "local",
        "totalMemory": 299892736,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 3:50:43 PM",
      "projectRootPomPath": "./workspace/INRIA/spoon/237507053/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            76
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 76
        },
        "testing": {
          "stepDurations": [
            205
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 205
        },
        "cloning": {
          "stepDurations": [
            25
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 25
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 3:41:32 PM",
      "totalDuration": 544
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1089,
        "numberRunning": 1094,
        "numberFailing": 4,
        "numberErroring": 1,
        "failures": [
          {
            "failureName": "org.junit.ComparisonFailure",
            "isError": false,
            "occurrences": 2
          },
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 2
          },
          {
            "failureName": "spoon.SpoonException",
            "isError": true,
            "occurrences": 1
          }
        ],
        "numberSkipping": 2
      },
      "failingModule": "/root/workspace/INRIA/spoon/237627560",
      "failingClasses": [
        {
          "numberPassing": 10,
          "numberRunning": 12,
          "testClass": "spoon.test.methodreference.MethodReferenceTest",
          "numberFailing": 1,
          "numberErroring": 1,
          "numberSkipping": 0
        },
        {
          "numberPassing": 34,
          "numberRunning": 35,
          "testClass": "spoon.test.generics.GenericsTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        },
        {
          "numberPassing": 10,
          "numberRunning": 12,
          "testClass": "spoon.test.reference.ExecutableReferenceGenericTest",
          "numberFailing": 2,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "testMethod": "testOneReferenceWithGenericMethodOutOfTheClass",
          "testClass": "spoon.test.reference.ExecutableReferenceGenericTest",
          "detail": "expected:<<T[> void method1(T])> but was:<<T[ extends java.lang.String> void method1(T extends java.lang.String])>",
          "isError": false
        },
        {
          "failureName": "spoon.SpoonException",
          "testMethod": "testGetGenericMethodFromReference",
          "testClass": "spoon.test.methodreference.MethodReferenceTest",
          "detail": "Cannot resolve type erasure of the type parameter reference, which is not able to found it's declaration.",
          "isError": true
        },
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testGetGenericExecutableReference",
          "testClass": "spoon.test.methodreference.MethodReferenceTest",
          "detail": "expected:<T> but was:<T extends java.lang.String>",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testWildcard",
          "testClass": "spoon.test.generics.GenericsTest",
          "detail": "expected:<4> but was:<3>",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "testMethod": "testMultiReferenceBetweenMethodsWithGenericInSameClass",
          "testClass": "spoon.test.reference.ExecutableReferenceGenericTest",
          "detail": "expected:<<T[> void method1(T])> but was:<<T[ extends java.lang.String> void method1(T extends java.lang.String])>",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/237821366",
        "date": "May 31, 2017 9:52:54 AM",
        "id": 237821366
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/237627560",
        "date": "May 30, 2017 8:29:09 PM",
        "id": 237627560
      }
    },
    "repository": {
      "name": "INRIA-spoon",
      "url": "https://github.com/INRIA/spoon",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 14176513
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/95828480ea5fee6df898509c84c6a95b14681ce3",
        "sha": "95828480ea5fee6df898509c84c6a95b14681ce3",
        "branchName": "master",
        "date": "May 31, 2017 9:43:56 AM",
        "repoName": "INRIA/spoon"
      },
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/b6e524c0a197dd2cfe3b4752737e85729d17a59c",
        "sha": "b6e524c0a197dd2cfe3b4752737e85729d17a59c",
        "branchName": "master",
        "date": "May 30, 2017 8:20:24 PM",
        "repoName": "INRIA/spoon"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/INRIA-spoon-237627560-237821366\n",
    "projectMetrics": {
      "numberSourceFiles": 486,
      "numberLibrariesFailingModule": 10,
      "numberTestFiles": 516,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 4,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 71,
        "numberDeleted": 58
      }
    },
    "diff": "diff --git a/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java b/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java\nindex 6986322276..46b0b40ffc 100644\n--- a/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java\n+++ b/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java\n@@ -535,7 +535,24 @@ public class DefaultJavaPrettyPrinter implements CtVisitor, PrettyPrinter {\n \n \t@Override\n \tpublic void visitCtTypeParameter(CtTypeParameter typeParameter) {\n-\t\tvisitCtTypeParameterReference(typeParameter.getReference());\n+\t\tCtTypeParameterReference ref = typeParameter.getReference();\n+\t\tif (ref.isImplicit()) {\n+\t\t\treturn;\n+\t\t}\n+\t\telementPrinterHelper.writeAnnotations(ref);\n+\t\tif (printQualified(ref)) {\n+\t\t\tprinter.write(ref.getQualifiedName());\n+\t\t} else {\n+\t\t\tprinter.write(ref.getSimpleName());\n+\t\t}\n+\t\tif (ref.getBoundingType() != null) {\n+\t\t\tif (ref.isUpper()) {\n+\t\t\t\tprinter.write(\" extends \");\n+\t\t\t} else {\n+\t\t\t\tprinter.write(\" super \");\n+\t\t\t}\n+\t\t\tscan(ref.getBoundingType());\n+\t\t}\n \t}\n \n \t@Override\n@@ -1585,21 +1602,29 @@ public class DefaultJavaPrettyPrinter implements CtVisitor, PrettyPrinter {\n \t\t} else {\n \t\t\tprinter.write(ref.getSimpleName());\n \t\t}\n-\t\tif (ref.getBoundingType() != null) {\n-\t\t\tif (ref.isUpper()) {\n+\t}\n+\n+\t@Override\n+\tpublic void visitCtWildcardReference(CtWildcardReference wildcardReference) {\n+\t\tif (wildcardReference.isImplicit()) {\n+\t\t\treturn;\n+\t\t}\n+\t\telementPrinterHelper.writeAnnotations(wildcardReference);\n+\t\tif (printQualified(wildcardReference)) {\n+\t\t\tprinter.write(wildcardReference.getQualifiedName());\n+\t\t} else {\n+\t\t\tprinter.write(wildcardReference.getSimpleName());\n+\t\t}\n+\t\tif (wildcardReference.getBoundingType() != null) {\n+\t\t\tif (wildcardReference.isUpper()) {\n \t\t\t\tprinter.write(\" extends \");\n \t\t\t} else {\n \t\t\t\tprinter.write(\" super \");\n \t\t\t}\n-\t\t\tscan(ref.getBoundingType());\n+\t\t\tscan(wildcardReference.getBoundingType());\n \t\t}\n \t}\n \n-\t@Override\n-\tpublic void visitCtWildcardReference(CtWildcardReference wildcardReference) {\n-\t\tvisitCtTypeParameterReference(wildcardReference);\n-\t}\n-\n \tprivate boolean printQualified(CtTypeReference<?> ref) {\n \t\tif (importsContext.isImported(ref) || (this.env.isAutoImports() && ref.getPackage() != null && ref.getPackage().getSimpleName().equals(\"java.lang\"))) {\n \t\t\t// If my.pkg.Something is imported, but\ndiff --git a/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java b/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java\nindex 67c67e4a76..9b0bdead0b 100644\n--- a/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java\n+++ b/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java\n@@ -16,20 +16,6 @@\n  */\n package spoon.support.compiler.jdt;\n \n-import static spoon.support.compiler.jdt.JDTTreeBuilderQuery.searchPackage;\n-import static spoon.support.compiler.jdt.JDTTreeBuilderQuery.searchType;\n-import static spoon.support.compiler.jdt.JDTTreeBuilderQuery.searchTypeBinding;\n-\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.Collections;\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.TreeMap;\n-import java.util.regex.Matcher;\n-import java.util.regex.Pattern;\n-\n import org.eclipse.jdt.core.compiler.CharOperation;\n import org.eclipse.jdt.internal.compiler.ast.ASTNode;\n import org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;\n@@ -79,7 +65,6 @@ import org.eclipse.jdt.internal.compiler.lookup.TypeBinding;\n import org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding;\n import org.eclipse.jdt.internal.compiler.lookup.VariableBinding;\n import org.eclipse.jdt.internal.compiler.lookup.WildcardBinding;\n-\n import spoon.reflect.code.CtLambda;\n import spoon.reflect.declaration.CtPackage;\n import spoon.reflect.declaration.CtParameter;\n@@ -97,8 +82,27 @@ import spoon.reflect.reference.CtTypeParameterReference;\n import spoon.reflect.reference.CtTypeReference;\n import spoon.reflect.reference.CtVariableReference;\n \n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.TreeMap;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+import static spoon.support.compiler.jdt.JDTTreeBuilderQuery.searchPackage;\n+import static spoon.support.compiler.jdt.JDTTreeBuilderQuery.searchType;\n+import static spoon.support.compiler.jdt.JDTTreeBuilderQuery.searchTypeBinding;\n+\n public class ReferenceBuilder {\n \n+\t// Allow to detect circular references and to avoid endless recursivity\n+\t// when resolving parameterizedTypes (e.g. Enum<E extends Enum<E>>)\n+\tprivate Set<TypeBinding> exploringParameterizedBindings = new HashSet<>();\n \tprivate Map<String, CtTypeReference<?>> basestypes = new TreeMap<>();\n \n \tprivate boolean bounds = false;\n@@ -650,7 +654,12 @@ public class ReferenceBuilder {\n \t\t\t\t\tif (bindingCache.containsKey(b)) {\n \t\t\t\t\t\tref.addActualTypeArgument(getCtCircularTypeReference(b));\n \t\t\t\t\t} else {\n-\t\t\t\t\t\tref.addActualTypeArgument(getTypeReference(b));\n+\t\t\t\t\t\tif (!this.exploringParameterizedBindings.contains(b)) {\n+\t\t\t\t\t\t\tthis.exploringParameterizedBindings.add(b);\n+\t\t\t\t\t\t\tref.addActualTypeArgument(getTypeReference(b));\n+\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\tthis.exploringParameterizedBindings.remove(b);\n+\t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n@@ -676,12 +685,35 @@ public class ReferenceBuilder {\n \t\t\tref.setSimpleName(new String(binding.sourceName()));\n \t\t} else if (binding instanceof TypeVariableBinding) {\n \t\t\tboolean oldBounds = bounds;\n-\t\t\tref = this.jdtTreeBuilder.getFactory().Core().createTypeParameterReference();\n+\n \t\t\tif (binding instanceof CaptureBinding) {\n \t\t\t\tref = this.jdtTreeBuilder.getFactory().Core().createWildcardReference();\n \t\t\t\tbounds = true;\n \t\t\t} else {\n+\t\t\t\tTypeVariableBinding typeParamBinding = (TypeVariableBinding) binding;\n+\t\t\t\tReferenceBinding superClass = typeParamBinding.superclass;\n+\t\t\t\tReferenceBinding[] superInterfaces = typeParamBinding.superInterfaces();\n+\n+\t\t\t\tCtTypeReference refSuperClass = null;\n+\n+\t\t\t\t// if the type parameter has a super class other than java.lang.Object, we get it\n+\t\t\t\t// superClass.superclass() is null if it's java.lang.Object\n+\t\t\t\tif (superClass != null && !(superClass.superclass() == null)) {\n+\t\t\t\t\trefSuperClass = this.getTypeReference(superClass);\n+\n+\t\t\t\t// if the type parameter has a super interface, then we'll get it too, as a superclass\n+\t\t\t\t// type parameter can only extends an interface or a class, so we don't make the distinction\n+\t\t\t\t// in Spoon. Moreover we can only have one extends in a type parameter.\n+\t\t\t\t} else if (superInterfaces != null && superInterfaces.length == 1) {\n+\t\t\t\t\trefSuperClass = this.getTypeReference(superInterfaces[0]);\n+\t\t\t\t}\n+\n+\t\t\t\tref = this.jdtTreeBuilder.getFactory().Core().createTypeParameterReference();\n \t\t\t\tref.setSimpleName(new String(binding.sourceName()));\n+\n+\t\t\t\tif (refSuperClass != null) {\n+\t\t\t\t\t((CtTypeParameterReference) ref).addBound(refSuperClass);\n+\t\t\t\t}\n \t\t\t}\n \t\t\tTypeVariableBinding b = (TypeVariableBinding) binding;\n \t\t\tif (bounds) {\n@@ -721,15 +753,19 @@ public class ReferenceBuilder {\n \t\t\t\tref = ref == null ? ref : ref.clone();\n \t\t\t}\n \t\t} else if (binding instanceof WildcardBinding) {\n+\t\t\tWildcardBinding wildcardBinding = (WildcardBinding) binding;\n \t\t\tref = this.jdtTreeBuilder.getFactory().Core().createWildcardReference();\n-\t\t\tif (((WildcardBinding) binding).boundKind == Wildcard.SUPER && ref instanceof CtTypeParameterReference) {\n+\n+\t\t\tif (wildcardBinding.boundKind == Wildcard.SUPER && ref instanceof CtTypeParameterReference) {\n \t\t\t\t((CtTypeParameterReference) ref).setUpper(false);\n \t\t\t}\n \n-\t\t\tif (((WildcardBinding) binding).bound != null && ref instanceof CtTypeParameterReference) {\n-\t\t\t\tif (bindingCache.containsKey(((WildcardBinding) binding).bound)) {\n-\t\t\t\t\t((CtTypeParameterReference) ref).setBoundingType(getCtCircularTypeReference(((WildcardBinding) binding).bound));\n+\t\t\tif (wildcardBinding.bound != null && ref instanceof CtTypeParameterReference) {\n+\t\t\t\tif (bindingCache.containsKey(wildcardBinding.bound)) {\n+\t\t\t\t\t((CtTypeParameterReference) ref).setBoundingType(getCtCircularTypeReference(wildcardBinding.bound));\n \t\t\t\t} else {\n+\n+\n \t\t\t\t\t((CtTypeParameterReference) ref).setBoundingType(getTypeReference(((WildcardBinding) binding).bound));\n \t\t\t\t}\n \t\t\t}\n@@ -801,6 +837,7 @@ public class ReferenceBuilder {\n \t\t\tthrow new RuntimeException(\"Unknown TypeBinding: \" + binding.getClass() + \" \" + binding);\n \t\t}\n \t\tbindingCache.remove(binding);\n+\t\tthis.exploringParameterizedBindings.clear();\n \t\treturn (CtTypeReference<T>) ref;\n \t}\n \ndiff --git a/src/main/java/spoon/support/reflect/reference/CtExecutableReferenceImpl.java b/src/main/java/spoon/support/reflect/reference/CtExecutableReferenceImpl.java\nindex a194b82421..94d6a336e6 100644\n--- a/src/main/java/spoon/support/reflect/reference/CtExecutableReferenceImpl.java\n+++ b/src/main/java/spoon/support/reflect/reference/CtExecutableReferenceImpl.java\n@@ -315,7 +315,9 @@ public class CtExecutableReferenceImpl<T> extends CtReferenceImpl implements CtE\n \t\t\t\tcontinue;\n \t\t\t}\n \t\t\tfor (int i = 0; i < parameters.size(); i++) {\n-\t\t\t\tif (m.getParameterTypes()[i] != parameters.get(i).getActualClass()) {\n+\t\t\t\tClass<?> methodParameterType = m.getParameterTypes()[i];\n+\t\t\t\tClass<?> currentParameterType = parameters.get(i).getActualClass();\n+\t\t\t\tif (methodParameterType != currentParameterType) {\n \t\t\t\t\tcontinue method_loop;\n \t\t\t\t}\n \t\t\t}\ndiff --git a/src/main/java/spoon/support/reflect/reference/CtTypeParameterReferenceImpl.java b/src/main/java/spoon/support/reflect/reference/CtTypeParameterReferenceImpl.java\nindex 3267dd64eb..0fe88f8f60 100644\n--- a/src/main/java/spoon/support/reflect/reference/CtTypeParameterReferenceImpl.java\n+++ b/src/main/java/spoon/support/reflect/reference/CtTypeParameterReferenceImpl.java\n@@ -178,7 +178,8 @@ public class CtTypeParameterReferenceImpl extends CtTypeReferenceImpl<Object> im\n \t\tCtElement e = this;\n \t\tCtElement parent = getParent();\n \t\tif (parent instanceof CtExecutableReference) {\n-\t\t\tCtElement parent2 = parent.getParent();\n+\n+\t\t\tCtElement parent2 = ((CtExecutableReference) parent).getDeclaration();\n \t\t\tif (parent2 instanceof CtMethod) {\n \t\t\t\te = parent2;\n \t\t\t} else {\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 191414952,
        "hostName": "local",
        "totalMemory": 252182528,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 3:50:12 PM",
      "projectRootPomPath": "./workspace/INRIA/spoon/237627560/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            1,
            0,
            0,
            0,
            72
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 73
        },
        "testing": {
          "stepDurations": [
            210
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 210
        },
        "cloning": {
          "stepDurations": [
            19
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 19
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 3:40:44 PM",
      "totalDuration": 562
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1123,
        "numberRunning": 1124,
        "numberFailing": 0,
        "numberErroring": 1,
        "failures": [
          {
            "failureName": "java.lang.IllegalArgumentException",
            "isError": true,
            "occurrences": 1
          }
        ],
        "numberSkipping": 7
      },
      "failingModule": "/root/workspace/spring-projects/spring-data-commons/185852074",
      "failingClasses": [
        {
          "numberPassing": 11,
          "numberRunning": 12,
          "testClass": "org.springframework.data.auditing.IsNewAwareAuditingHandlerUnitTests",
          "numberFailing": 0,
          "numberErroring": 1,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.IllegalArgumentException",
          "testMethod": "skipsEntityWithoutIdentifier",
          "testClass": "org.springframework.data.auditing.IsNewAwareAuditingHandlerUnitTests",
          "detail": "Unsupported entity org.springframework.data.auditing.IsNewAwareAuditingHandlerUnitTests$EntityWithoutId! Could not determine IsNewStrategy.",
          "isError": true
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/spring-projects/spring-data-commons/builds/193313389",
        "date": "Jan 19, 2017 9:57:11 AM",
        "id": 193313389
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/spring-projects/spring-data-commons/builds/185852074",
        "date": "Dec 21, 2016 11:43:04 PM",
        "id": 185852074
      }
    },
    "repository": {
      "name": "spring-projects-spring-data-commons",
      "url": "https://github.com/spring-projects/spring-data-commons",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 1072614
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/spring-projects/spring-data-commons/commit/cdbd0720836779e332384e1bcec244c3f645af65",
        "sha": "cdbd0720836779e332384e1bcec244c3f645af65",
        "branchName": "1.11.x",
        "date": "Jan 19, 2017 9:50:06 AM",
        "repoName": "spring-projects/spring-data-commons"
      },
      "buggyBuild": {
        "url": "http://github.com/spring-projects/spring-data-commons/commit/d1d493150470b67dc3cfc54a746c9fa83eab16fd",
        "sha": "d1d493150470b67dc3cfc54a746c9fa83eab16fd",
        "branchName": "1.11.x",
        "date": "Dec 21, 2016 7:35:19 PM",
        "repoName": "spring-projects/spring-data-commons"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/spring-projects-spring-data-commons-185852074-193313389\n",
    "projectMetrics": {
      "numberSourceFiles": 347,
      "numberLibrariesFailingModule": 62,
      "numberTestFiles": 207,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 2,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 1,
        "numberDeleted": 11
      }
    },
    "diff": "diff --git a/src/main/java/org/springframework/data/auditing/AuditingHandler.java b/src/main/java/org/springframework/data/auditing/AuditingHandler.java\nindex f7433a51e8..5210104d91 100644\n--- a/src/main/java/org/springframework/data/auditing/AuditingHandler.java\n+++ b/src/main/java/org/springframework/data/auditing/AuditingHandler.java\n@@ -134,6 +134,16 @@ public class AuditingHandler implements InitializingBean {\n \t\ttouch(source, false);\n \t}\n \n+\t/**\n+\t * Returns whether the given source is considered to be auditable in the first place\n+\t * \n+\t * @param source can be {@literal null}.\n+\t * @return\n+\t */\n+\tprotected final boolean isAuditable(Object source) {\n+\t\treturn factory.getBeanWrapperFor(source) != null;\n+\t}\n+\n \tprivate void touch(Object target, boolean isNew) {\n \n \t\tAuditableBeanWrapper wrapper = factory.getBeanWrapperFor(target);\ndiff --git a/src/main/java/org/springframework/data/auditing/IsNewAwareAuditingHandler.java b/src/main/java/org/springframework/data/auditing/IsNewAwareAuditingHandler.java\nindex f9b1d4c591..74922f80bd 100644\n--- a/src/main/java/org/springframework/data/auditing/IsNewAwareAuditingHandler.java\n+++ b/src/main/java/org/springframework/data/auditing/IsNewAwareAuditingHandler.java\n@@ -73,7 +73,7 @@ public class IsNewAwareAuditingHandler extends AuditingHandler {\n \t */\n \tpublic void markAudited(Object object) {\n \n-\t\tif (object == null) {\n+\t\tif (!isAuditable(object)) {\n \t\t\treturn;\n \t\t}\n \n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 235738112,
        "hostName": "local",
        "totalMemory": 282591232,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 6:59:23 PM",
      "projectRootPomPath": "./workspace/spring-projects/spring-data-commons/185852074/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            4,
            0,
            0,
            180
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 184
        },
        "testing": {
          "stepDurations": [
            22
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 22
        },
        "cloning": {
          "stepDurations": [
            9
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 9
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 6:54:25 PM",
      "totalDuration": 293
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1998,
        "numberRunning": 1999,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "org.mockito.exceptions.verification.NeverWantedButInvoked",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 2
      },
      "failingModule": "/root/workspace/spring-projects/spring-data-commons/191588471",
      "failingClasses": [
        {
          "numberPassing": 11,
          "numberRunning": 12,
          "testClass": "org.springframework.data.repository.core.support.EventPublishingRepositoryProxyPostProcessorUnitTests",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "org.mockito.exceptions.verification.NeverWantedButInvoked",
          "testMethod": "publishesEventsAfterSaveInvocation",
          "testClass": "org.springframework.data.repository.core.support.EventPublishingRepositoryProxyPostProcessorUnitTests",
          "detail": "\npublisher.publishEvent(<any>);\nNever wanted here:\n-> at org.springframework.data.repository.core.support.EventPublishingRepositoryProxyPostProcessorUnitTests.publishesEventsAfterSaveInvocation(EventPublishingRepositoryProxyPostProcessorUnitTests.java:190)\nBut invoked here:\n-> at org.springframework.data.repository.core.support.EventPublishingRepositoryProxyPostProcessor$EventPublishingMethod.publishEventsFrom(EventPublishingRepositoryProxyPostProcessor.java:166)\n",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/spring-projects/spring-data-commons/builds/191604001",
        "date": "Jan 13, 2017 1:19:52 PM",
        "id": 191604001
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/spring-projects/spring-data-commons/builds/191588471",
        "date": "Jan 13, 2017 11:33:09 AM",
        "id": 191588471
      }
    },
    "repository": {
      "name": "spring-projects-spring-data-commons",
      "url": "https://github.com/spring-projects/spring-data-commons",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 1072614
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/spring-projects/spring-data-commons/commit/9ada55b050607e6000905ea9093e3026cacfacfe",
        "sha": "9ada55b050607e6000905ea9093e3026cacfacfe",
        "branchName": "master",
        "date": "Jan 13, 2017 12:18:25 PM",
        "repoName": "spring-projects/spring-data-commons"
      },
      "buggyBuild": {
        "url": "http://github.com/spring-projects/spring-data-commons/commit/389b88626434a1f1cd24d740f010e9fed220fdd0",
        "sha": "389b88626434a1f1cd24d740f010e9fed220fdd0",
        "branchName": "master",
        "date": "Jan 13, 2017 11:29:12 AM",
        "repoName": "spring-projects/spring-data-commons"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/spring-projects-spring-data-commons-191588471-191604001\n",
    "projectMetrics": {
      "numberSourceFiles": 378,
      "numberLibrariesFailingModule": 71,
      "numberTestFiles": 226,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 2,
        "numberDeleted": 4
      }
    },
    "diff": "diff --git a/src/main/java/org/springframework/data/repository/core/support/EventPublishingRepositoryProxyPostProcessor.java b/src/main/java/org/springframework/data/repository/core/support/EventPublishingRepositoryProxyPostProcessor.java\nindex 90200607d5..3311c91608 100644\n--- a/src/main/java/org/springframework/data/repository/core/support/EventPublishingRepositoryProxyPostProcessor.java\n+++ b/src/main/java/org/springframework/data/repository/core/support/EventPublishingRepositoryProxyPostProcessor.java\n@@ -87,15 +87,17 @@ public class EventPublishingRepositoryProxyPostProcessor implements RepositoryPr\n \t\t@Override\n \t\tpublic Object invoke(MethodInvocation invocation) throws Throwable {\n \n+\t\t\tObject result = invocation.proceed();\n+\n \t\t\tif (!invocation.getMethod().getName().equals(\"save\")) {\n-\t\t\t\treturn invocation.proceed();\n+\t\t\t\treturn result;\n \t\t\t}\n \n \t\t\tfor (Object argument : invocation.getArguments()) {\n \t\t\t\teventMethod.publishEventsFrom(argument, publisher);\n \t\t\t}\n \n-\t\t\treturn invocation.proceed();\n+\t\t\treturn result;\n \t\t}\n \t}\n \n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 113397536,
        "hostName": "local",
        "totalMemory": 238551040,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 7:08:01 PM",
      "projectRootPomPath": "./workspace/spring-projects/spring-data-commons/191588471/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            1,
            0,
            0,
            166
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 167
        },
        "testing": {
          "stepDurations": [
            40
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 40
        },
        "cloning": {
          "stepDurations": [
            8
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 8
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 7:02:31 PM",
      "totalDuration": 325
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 2000,
        "numberRunning": 2002,
        "numberFailing": 0,
        "numberErroring": 2,
        "failures": [
          {
            "failureName": "java.lang.NullPointerException",
            "isError": true,
            "occurrences": 2
          }
        ],
        "numberSkipping": 2
      },
      "failingModule": "/root/workspace/spring-projects/spring-data-commons/193313395",
      "failingClasses": [
        {
          "numberPassing": 3,
          "numberRunning": 5,
          "testClass": "org.springframework.data.web.ProjectingJackson2HttpMessageConverterUnitTests",
          "numberFailing": 0,
          "numberErroring": 2,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.NullPointerException",
          "testMethod": "doesNotConsiderTypeVariableBoundTo",
          "isError": true,
          "testClass": "org.springframework.data.web.ProjectingJackson2HttpMessageConverterUnitTests"
        },
        {
          "failureName": "java.lang.NullPointerException",
          "testMethod": "genericTypeOnConcreteOne",
          "isError": true,
          "testClass": "org.springframework.data.web.ProjectingJackson2HttpMessageConverterUnitTests"
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/spring-projects/spring-data-commons/builds/193356189",
        "date": "Jan 19, 2017 12:49:41 PM",
        "id": 193356189
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/spring-projects/spring-data-commons/builds/193313395",
        "date": "Jan 19, 2017 9:58:45 AM",
        "id": 193313395
      }
    },
    "repository": {
      "name": "spring-projects-spring-data-commons",
      "url": "https://github.com/spring-projects/spring-data-commons",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 1072614
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/spring-projects/spring-data-commons/commit/e68be19054603862acf5db25f66cb9a94784fe1e",
        "sha": "e68be19054603862acf5db25f66cb9a94784fe1e",
        "branchName": "master",
        "date": "Jan 19, 2017 12:23:14 PM",
        "repoName": "spring-projects/spring-data-commons"
      },
      "buggyBuild": {
        "url": "http://github.com/spring-projects/spring-data-commons/commit/60d40b51b3d1f8fd6135d4d9d3915d46df494d23",
        "sha": "60d40b51b3d1f8fd6135d4d9d3915d46df494d23",
        "branchName": "master",
        "date": "Jan 19, 2017 9:49:35 AM",
        "repoName": "spring-projects/spring-data-commons"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/spring-projects-spring-data-commons-193313395-193356189\n",
    "projectMetrics": {
      "numberSourceFiles": 378,
      "numberLibrariesFailingModule": 71,
      "numberTestFiles": 226,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 2,
        "numberDeleted": 1
      }
    },
    "diff": "diff --git a/src/main/java/org/springframework/data/web/ProjectingJackson2HttpMessageConverter.java b/src/main/java/org/springframework/data/web/ProjectingJackson2HttpMessageConverter.java\nindex bda6f47e06..efe34b17b1 100644\n--- a/src/main/java/org/springframework/data/web/ProjectingJackson2HttpMessageConverter.java\n+++ b/src/main/java/org/springframework/data/web/ProjectingJackson2HttpMessageConverter.java\n@@ -117,7 +117,8 @@ public class ProjectingJackson2HttpMessageConverter extends MappingJackson2HttpM\n \t\t\treturn false;\n \t\t}\n \n-\t\tClass<?> rawType = ResolvableType.forType(type).getRawClass();\n+\t\tResolvableType owner = contextClass == null ? null : ResolvableType.forClass(contextClass);\n+\t\tClass<?> rawType = ResolvableType.forType(type, owner).resolve(Object.class);\n \t\tBoolean result = supportedTypesCache.get(rawType);\n \n \t\tif (result != null) {\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 159380640,
        "hostName": "local",
        "totalMemory": 239075328,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 6:54:15 PM",
      "projectRootPomPath": "./workspace/spring-projects/spring-data-commons/193313395/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            2,
            0,
            0,
            199
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 201
        },
        "testing": {
          "stepDurations": [
            31
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 31
        },
        "cloning": {
          "stepDurations": [
            9
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 9
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 6:48:17 PM",
      "totalDuration": 352
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 2004,
        "numberRunning": 2006,
        "numberFailing": 2,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 2
          }
        ],
        "numberSkipping": 2
      },
      "failingModule": "/root/workspace/spring-projects/spring-data-commons/193356189",
      "failingClasses": [
        {
          "numberPassing": 2,
          "numberRunning": 4,
          "testClass": "org.springframework.data.web.ProxyingHandlerMethodArgumentResolverUnitTests",
          "numberFailing": 2,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "doesNotSupportUnannotatedInterfaceFromSpringNamespace",
          "testClass": "org.springframework.data.web.ProxyingHandlerMethodArgumentResolverUnitTests",
          "detail": "\nExpected: is <false>\n     but: was <true>",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "doesNotSupportCoreJavaType",
          "testClass": "org.springframework.data.web.ProxyingHandlerMethodArgumentResolverUnitTests",
          "detail": "\nExpected: is <false>\n     but: was <true>",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/spring-projects/spring-data-commons/builds/194423789",
        "date": "Jan 23, 2017 11:51:09 AM",
        "id": 194423789
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/spring-projects/spring-data-commons/builds/193356189",
        "date": "Jan 19, 2017 12:49:41 PM",
        "id": 193356189
      }
    },
    "repository": {
      "name": "spring-projects-spring-data-commons",
      "url": "https://github.com/spring-projects/spring-data-commons",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 1072614
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/spring-projects/spring-data-commons/commit/bf04e3232b959735a89ea2a06f77295773fce976",
        "sha": "bf04e3232b959735a89ea2a06f77295773fce976",
        "branchName": "master",
        "date": "Jan 23, 2017 11:41:39 AM",
        "repoName": "spring-projects/spring-data-commons"
      },
      "buggyBuild": {
        "url": "http://github.com/spring-projects/spring-data-commons/commit/e68be19054603862acf5db25f66cb9a94784fe1e",
        "sha": "e68be19054603862acf5db25f66cb9a94784fe1e",
        "branchName": "master",
        "date": "Jan 19, 2017 12:23:14 PM",
        "repoName": "spring-projects/spring-data-commons"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/spring-projects-spring-data-commons-193356189-194423789\n",
    "projectMetrics": {
      "numberSourceFiles": 378,
      "numberLibrariesFailingModule": 71,
      "numberTestFiles": 228,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 25,
        "numberDeleted": 8
      }
    },
    "diff": "diff --git a/src/main/java/org/springframework/data/web/ProxyingHandlerMethodArgumentResolver.java b/src/main/java/org/springframework/data/web/ProxyingHandlerMethodArgumentResolver.java\nindex b918f22acb..0ab0c9441e 100644\n--- a/src/main/java/org/springframework/data/web/ProxyingHandlerMethodArgumentResolver.java\n+++ b/src/main/java/org/springframework/data/web/ProxyingHandlerMethodArgumentResolver.java\n@@ -15,6 +15,9 @@\n  */\n package org.springframework.data.web;\n \n+import java.util.Arrays;\n+import java.util.List;\n+\n import org.springframework.beans.BeansException;\n import org.springframework.beans.MutablePropertyValues;\n import org.springframework.beans.factory.BeanClassLoaderAware;\n@@ -22,9 +25,11 @@ import org.springframework.beans.factory.BeanFactory;\n import org.springframework.beans.factory.BeanFactoryAware;\n import org.springframework.context.ResourceLoaderAware;\n import org.springframework.core.MethodParameter;\n+import org.springframework.core.annotation.AnnotatedElementUtils;\n import org.springframework.core.convert.ConversionService;\n import org.springframework.core.io.ResourceLoader;\n import org.springframework.data.projection.SpelAwareProxyProjectionFactory;\n+import org.springframework.util.ClassUtils;\n import org.springframework.web.bind.WebDataBinder;\n import org.springframework.web.bind.support.WebDataBinderFactory;\n import org.springframework.web.context.request.NativeWebRequest;\n@@ -40,6 +45,8 @@ import org.springframework.web.method.support.HandlerMethodArgumentResolver;\n public class ProxyingHandlerMethodArgumentResolver extends ModelAttributeMethodProcessor\n \t\timplements BeanFactoryAware, ResourceLoaderAware, BeanClassLoaderAware {\n \n+\tprivate static final List<String> IGNORED_PACKAGES = Arrays.asList(\"java\", \"org.springframework\");\n+\n \tprivate final SpelAwareProxyProjectionFactory proxyFactory;\n \tprivate final ConversionService conversionService;\n \n@@ -90,7 +97,31 @@ public class ProxyingHandlerMethodArgumentResolver extends ModelAttributeMethodP\n \t */\n \t@Override\n \tpublic boolean supportsParameter(MethodParameter parameter) {\n-\t\treturn parameter.getParameterType().isInterface();\n+\n+\t\tClass<?> type = parameter.getParameterType();\n+\n+\t\tif (!type.isInterface()) {\n+\t\t\treturn false;\n+\t\t}\n+\n+\t\t// Annotated parameter\n+\t\tif (parameter.getParameterAnnotation(ProjectedPayload.class) != null) {\n+\t\t\treturn true;\n+\t\t}\n+\n+\t\t// Annotated type\n+\t\tif (AnnotatedElementUtils.findMergedAnnotation(type, ProjectedPayload.class) != null) {\n+\t\t\treturn true;\n+\t\t}\n+\n+\t\t// Fallback for only user defined interfaces\n+\t\tfor (String prefix : IGNORED_PACKAGES) {\n+\t\t\tif (ClassUtils.getPackageName(type).startsWith(prefix)) {\n+\t\t\t\treturn false;\n+\t\t\t}\n+\t\t}\n+\n+\t\treturn true;\n \t}\n \n \t/* \n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 202264560,
        "hostName": "local",
        "totalMemory": 242221056,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 6:50:46 PM",
      "projectRootPomPath": "./workspace/spring-projects/spring-data-commons/193356189/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            3,
            0,
            0,
            187
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 190
        },
        "testing": {
          "stepDurations": [
            36
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 36
        },
        "cloning": {
          "stepDurations": [
            8
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 8
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 6:44:56 PM",
      "totalDuration": 344
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 2010,
        "numberRunning": 2011,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 2
      },
      "failingModule": "/root/workspace/spring-projects/spring-data-commons/207045952",
      "failingClasses": [
        {
          "numberPassing": 10,
          "numberRunning": 11,
          "testClass": "org.springframework.data.mapping.SimpleTypeHolderUnitTests",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "considersJavaLangTypesSimple",
          "testClass": "org.springframework.data.mapping.SimpleTypeHolderUnitTests",
          "detail": "\nExpected: is <true>\n     but: was <false>",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/spring-projects/spring-data-commons/builds/208573806",
        "date": "Mar 7, 2017 1:57:07 PM",
        "id": 208573806
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/spring-projects/spring-data-commons/builds/207045952",
        "date": "Mar 2, 2017 7:21:31 PM",
        "id": 207045952
      }
    },
    "repository": {
      "name": "spring-projects-spring-data-commons",
      "url": "https://github.com/spring-projects/spring-data-commons",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 1072614
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/spring-projects/spring-data-commons/commit/6ef41f6a7625e67bebbd42bb6239c1b7382467ef",
        "sha": "6ef41f6a7625e67bebbd42bb6239c1b7382467ef",
        "branchName": "1.13.x",
        "date": "Mar 7, 2017 1:45:38 PM",
        "repoName": "spring-projects/spring-data-commons"
      },
      "buggyBuild": {
        "url": "http://github.com/spring-projects/spring-data-commons/commit/b46b84d4bf8acdfda56f01e3d6f2f5368cae9990",
        "sha": "b46b84d4bf8acdfda56f01e3d6f2f5368cae9990",
        "branchName": "1.13.x",
        "date": "Mar 2, 2017 4:57:41 PM",
        "repoName": "spring-projects/spring-data-commons"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/spring-projects-spring-data-commons-207045952-208573806\n",
    "projectMetrics": {
      "numberSourceFiles": 378,
      "numberLibrariesFailingModule": 71,
      "numberTestFiles": 231,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 0,
        "numberDeleted": 4
      }
    },
    "diff": "diff --git a/src/main/java/org/springframework/data/mapping/model/SimpleTypeHolder.java b/src/main/java/org/springframework/data/mapping/model/SimpleTypeHolder.java\nindex ca570c0bb6..152928777c 100644\n--- a/src/main/java/org/springframework/data/mapping/model/SimpleTypeHolder.java\n+++ b/src/main/java/org/springframework/data/mapping/model/SimpleTypeHolder.java\n@@ -123,6 +123,10 @@ public class SimpleTypeHolder {\n \t\t\treturn true;\n \t\t}\n \n+\t\tif (type.getName().startsWith(\"java.lang\")) {\n+\t\t\treturn true;\n+\t\t}\n+\n \t\tfor (Class<?> clazz : simpleTypes) {\n \t\t\tif (clazz.isAssignableFrom(type)) {\n \t\t\t\tsimpleTypes.add(type);\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 111524648,
        "hostName": "local",
        "totalMemory": 238551040,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 6:59:01 AM",
      "projectRootPomPath": "./workspace/spring-projects/spring-data-commons/207045952/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            1,
            0,
            0,
            172
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 173
        },
        "testing": {
          "stepDurations": [
            31
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 31
        },
        "cloning": {
          "stepDurations": [
            7
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 7
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 6:53:45 AM",
      "totalDuration": 311
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 222,
        "numberRunning": 223,
        "numberFailing": 0,
        "numberErroring": 1,
        "failures": [
          {
            "failureName": "java.lang.NumberFormatException",
            "isError": true,
            "occurrences": 1
          }
        ],
        "numberSkipping": 1
      },
      "failingModule": "/root/workspace/traccar/traccar/188473748",
      "failingClasses": [
        {
          "numberPassing": 0,
          "numberRunning": 1,
          "testClass": "org.traccar.protocol.GoSafeProtocolDecoderTest",
          "numberFailing": 0,
          "numberErroring": 1,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.NumberFormatException",
          "testMethod": "testDecode",
          "testClass": "org.traccar.protocol.GoSafeProtocolDecoderTest",
          "detail": "For input string: \"3.75\"",
          "isError": true
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/188474474",
        "date": "Jan 3, 2017 10:49:06 AM",
        "id": 188474474
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/188473748",
        "date": "Jan 3, 2017 10:47:50 AM",
        "id": 188473748
      }
    },
    "repository": {
      "name": "traccar-traccar",
      "url": "https://github.com/traccar/traccar",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 4038949
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/7bd6551a2f5712d63bea7e8711944fbeb78323c8",
        "sha": "7bd6551a2f5712d63bea7e8711944fbeb78323c8",
        "branchName": "master",
        "date": "Jan 3, 2017 10:47:33 AM",
        "repoName": "traccar/traccar"
      },
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/e512848dc07145664f3c5d0adff7a9f88b2f17b6",
        "sha": "e512848dc07145664f3c5d0adff7a9f88b2f17b6",
        "branchName": "master",
        "date": "Jan 3, 2017 10:44:00 AM",
        "repoName": "traccar/traccar"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/traccar-traccar-188473748-188474474\n",
    "projectMetrics": {
      "numberSourceFiles": 478,
      "numberLibrariesFailingModule": 81,
      "numberTestFiles": 199,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 1,
        "numberDeleted": 1
      }
    },
    "diff": "diff --git a/src/org/traccar/protocol/GoSafeProtocolDecoder.java b/src/org/traccar/protocol/GoSafeProtocolDecoder.java\nindex deeea2333b..94d12e989b 100644\n--- a/src/org/traccar/protocol/GoSafeProtocolDecoder.java\n+++ b/src/org/traccar/protocol/GoSafeProtocolDecoder.java\n@@ -156,7 +156,7 @@ public class GoSafeProtocolDecoder extends BaseProtocolDecoder {\n \n         position.set(Position.KEY_HDOP, parser.next());\n \n-        if (parser.hasNext(4)) {\n+        if (parser.hasNext(5)) {\n             position.setNetwork(new Network(CellTower.from(\n                     parser.nextInt(), parser.nextInt(), parser.nextInt(16), parser.nextInt(16), parser.nextInt())));\n         }\n",
    "type": "failing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 127876536,
        "hostName": "local",
        "totalMemory": 261095424,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 1:57:32 PM",
      "projectRootPomPath": "./workspace/traccar/traccar/188473748/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            111
          ],
          "stepNames": [
            "CheckoutBuggyBuildCandidate",
            "BuildProjectBuggyBuildCandidate"
          ],
          "nbSteps": 2,
          "totalDuration": 111
        },
        "testing": {
          "stepDurations": [
            11
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidate"
          ],
          "nbSteps": 1,
          "totalDuration": 11
        },
        "cloning": {
          "stepDurations": [
            13
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 13
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 1:54:19 PM",
      "totalDuration": 187
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 224,
        "numberRunning": 225,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 1
      },
      "failingModule": "/root/workspace/traccar/traccar/190843415",
      "failingClasses": [
        {
          "numberPassing": 2,
          "numberRunning": 3,
          "testClass": "org.traccar.protocol.H02FrameDecoderTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testDecodeAlternative",
          "testClass": "org.traccar.protocol.H02FrameDecoderTest",
          "detail": "expected:<BigEndianHeapChannelBuffer(ridx=0, widx=32, cap=32)> but was:<null>",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/191103948",
        "date": "Jan 11, 2017 10:09:53 PM",
        "id": 191103948
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/190843415",
        "date": "Jan 11, 2017 5:29:01 AM",
        "id": 190843415
      }
    },
    "repository": {
      "name": "traccar-traccar",
      "url": "https://github.com/traccar/traccar",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 4038949
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/e54122e22725bae7a962d58e06a497526aed46cb",
        "sha": "e54122e22725bae7a962d58e06a497526aed46cb",
        "branchName": "master",
        "date": "Jan 11, 2017 1:07:56 PM",
        "repoName": "traccar/traccar"
      },
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/afa6bfcef49c7152b3292010f43075356b9c9727",
        "sha": "afa6bfcef49c7152b3292010f43075356b9c9727",
        "branchName": "master",
        "date": "Jan 11, 2017 5:27:39 AM",
        "repoName": "traccar/traccar"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/traccar-traccar-190843415-191103948\n",
    "projectMetrics": {
      "numberSourceFiles": 480,
      "numberLibrariesFailingModule": 81,
      "numberTestFiles": 200,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 2,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 5,
        "numberDeleted": 11
      }
    },
    "diff": "diff --git a/src/org/traccar/protocol/H02FrameDecoder.java b/src/org/traccar/protocol/H02FrameDecoder.java\nindex a22252a573..b2da648473 100644\n--- a/src/org/traccar/protocol/H02FrameDecoder.java\n+++ b/src/org/traccar/protocol/H02FrameDecoder.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright 2013 - 2016 Anton Tananaev (anton@traccar.org)\n+ * Copyright 2013 - 2017 Anton Tananaev (anton@traccar.org)\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n@@ -37,7 +37,7 @@ public class H02FrameDecoder extends FrameDecoder {\n \n         char marker = (char) buf.getByte(buf.readerIndex());\n \n-        while (marker != '*' && marker != '$' && buf.readableBytes() > 0) {\n+        while (marker != '*' && marker != '$' && marker != 'X' && buf.readableBytes() > 0) {\n             buf.skipBytes(1);\n             if (buf.readableBytes() > 0) {\n                 marker = (char) buf.getByte(buf.readerIndex());\n@@ -66,6 +66,12 @@ public class H02FrameDecoder extends FrameDecoder {\n                 return buf.readBytes(messageLength);\n             }\n \n+        } else if (marker == 'X') {\n+\n+            if (buf.readableBytes() >= MESSAGE_SHORT) {\n+                return buf.readBytes(MESSAGE_SHORT);\n+            }\n+\n         }\n \n         return null;\ndiff --git a/src/org/traccar/protocol/H02ProtocolDecoder.java b/src/org/traccar/protocol/H02ProtocolDecoder.java\nindex 431dd5c3cd..c2a3b2b09a 100644\n--- a/src/org/traccar/protocol/H02ProtocolDecoder.java\n+++ b/src/org/traccar/protocol/H02ProtocolDecoder.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright 2012 - 2016 Anton Tananaev (anton@traccar.org)\n+ * Copyright 2012 - 2017 Anton Tananaev (anton@traccar.org)\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n@@ -305,8 +305,6 @@ public class H02ProtocolDecoder extends BaseProtocolDecoder {\n         ChannelBuffer buf = (ChannelBuffer) msg;\n         String marker = buf.toString(0, 1, StandardCharsets.US_ASCII);\n \n-        // handle X mode?\n-\n         if (marker.equals(\"*\")) {\n             String sentence = buf.toString(StandardCharsets.US_ASCII);\n             if (sentence.contains(\",NBR,\")) {\n@@ -316,6 +314,8 @@ public class H02ProtocolDecoder extends BaseProtocolDecoder {\n             }\n         } else if (marker.equals(\"$\")) {\n             return decodeBinary(buf, channel, remoteAddress);\n+        } else if (marker.equals(\"X\")) {\n+            return null; // X mode\n         }\n \n         return null;\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 178062720,
        "hostName": "local",
        "totalMemory": 287309824,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 6:04:39 PM",
      "projectRootPomPath": "./workspace/traccar/traccar/190843415/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            101
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 101
        },
        "testing": {
          "stepDurations": [
            7
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 7
        },
        "cloning": {
          "stepDurations": [
            13
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 13
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 6:01:54 PM",
      "totalDuration": 159
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 225,
        "numberRunning": 226,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 2
      },
      "failingModule": "/root/workspace/traccar/traccar/195128524",
      "failingClasses": [
        {
          "numberPassing": 0,
          "numberRunning": 1,
          "testClass": "org.traccar.events.IgnitionEventHandlerTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testIgnitionEventHandler",
          "testClass": "org.traccar.events.IgnitionEventHandlerTest",
          "detail": "expected:<[org.traccar.model.Event@6b2ea799]> but was:<null>",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/195455832",
        "date": "Jan 26, 2017 9:21:07 AM",
        "id": 195455832
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/195128524",
        "date": "Jan 25, 2017 11:35:26 AM",
        "id": 195128524
      }
    },
    "repository": {
      "name": "traccar-traccar",
      "url": "https://github.com/traccar/traccar",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 4038949
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/3155b8697a9b3f8023e085a766a439eee4c058db",
        "sha": "3155b8697a9b3f8023e085a766a439eee4c058db",
        "branchName": "master",
        "date": "Jan 26, 2017 9:19:55 AM",
        "repoName": "traccar/traccar"
      },
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/b1453ebd231009e9d9078377f2a1e063d852c444",
        "sha": "b1453ebd231009e9d9078377f2a1e063d852c444",
        "branchName": "master",
        "date": "Jan 25, 2017 11:32:21 AM",
        "repoName": "traccar/traccar"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/traccar-traccar-195128524-195455832\n",
    "projectMetrics": {
      "numberSourceFiles": 485,
      "numberLibrariesFailingModule": 81,
      "numberTestFiles": 202,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 15,
        "numberDeleted": 10
      }
    },
    "diff": "diff --git a/src/org/traccar/events/IgnitionEventHandler.java b/src/org/traccar/events/IgnitionEventHandler.java\nindex 8464c3aefa..187b7ce735 100644\n--- a/src/org/traccar/events/IgnitionEventHandler.java\n+++ b/src/org/traccar/events/IgnitionEventHandler.java\n@@ -39,20 +39,21 @@ public class IgnitionEventHandler extends BaseEventHandler {\n \n         Collection<Event> result = null;\n \n-        boolean ignition = position.getBoolean(Position.KEY_IGNITION);\n-\n-        boolean oldIgnition = false;\n-        Position lastPosition = Context.getIdentityManager().getLastPosition(position.getDeviceId());\n-        if (lastPosition != null) {\n-            oldIgnition = lastPosition.getBoolean(Position.KEY_IGNITION);\n-        }\n-\n-        if (ignition && !oldIgnition) {\n-            result = Collections.singleton(\n-                    new Event(Event.TYPE_IGNITION_ON, position.getDeviceId(), position.getId()));\n-        } else if (!ignition && oldIgnition) {\n-            result = Collections.singleton(\n-                    new Event(Event.TYPE_IGNITION_OFF, position.getDeviceId(), position.getId()));\n+        if (position.getAttributes().containsKey(Position.KEY_IGNITION)) {\n+            boolean ignition = position.getBoolean(Position.KEY_IGNITION);\n+\n+            Position lastPosition = Context.getIdentityManager().getLastPosition(position.getDeviceId());\n+            if (lastPosition != null && lastPosition.getAttributes().containsKey(Position.KEY_IGNITION)) {\n+                boolean oldIgnition = lastPosition.getBoolean(Position.KEY_IGNITION);\n+\n+                if (ignition && !oldIgnition) {\n+                    result = Collections.singleton(\n+                            new Event(Event.TYPE_IGNITION_ON, position.getDeviceId(), position.getId()));\n+                } else if (!ignition && oldIgnition) {\n+                    result = Collections.singleton(\n+                            new Event(Event.TYPE_IGNITION_OFF, position.getDeviceId(), position.getId()));\n+                }\n+            }\n         }\n         return result;\n     }\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 152852096,
        "hostName": "local",
        "totalMemory": 360185856,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 5:57:56 PM",
      "projectRootPomPath": "./workspace/traccar/traccar/195128524/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            98
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 98
        },
        "testing": {
          "stepDurations": [
            10
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 10
        },
        "cloning": {
          "stepDurations": [
            15
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 15
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 5:54:56 PM",
      "totalDuration": 174
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 226,
        "numberRunning": 227,
        "numberFailing": 0,
        "numberErroring": 1,
        "failures": [
          {
            "failureName": "java.lang.IndexOutOfBoundsException",
            "isError": true,
            "occurrences": 1
          }
        ],
        "numberSkipping": 2
      },
      "failingModule": "/root/workspace/traccar/traccar/198464113",
      "failingClasses": [
        {
          "numberPassing": 0,
          "numberRunning": 1,
          "testClass": "org.traccar.protocol.Gl200ProtocolDecoderTest",
          "numberFailing": 0,
          "numberErroring": 1,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.IndexOutOfBoundsException",
          "testMethod": "testDecode",
          "testClass": "org.traccar.protocol.Gl200ProtocolDecoderTest",
          "detail": "No group 5",
          "isError": true
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/198488474",
        "date": "Feb 5, 2017 6:47:46 AM",
        "id": 198488474
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/198464113",
        "date": "Feb 5, 2017 3:07:28 AM",
        "id": 198464113
      }
    },
    "repository": {
      "name": "traccar-traccar",
      "url": "https://github.com/traccar/traccar",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 4038949
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/1909b845a8c77a2463c0ad8d4c1952b8c0852ae2",
        "sha": "1909b845a8c77a2463c0ad8d4c1952b8c0852ae2",
        "branchName": "master",
        "date": "Feb 5, 2017 6:46:26 AM",
        "repoName": "traccar/traccar"
      },
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/4e37ce80b615e126f82e567d06a60beff8c82fb0",
        "sha": "4e37ce80b615e126f82e567d06a60beff8c82fb0",
        "branchName": "master",
        "date": "Feb 5, 2017 3:05:52 AM",
        "repoName": "traccar/traccar"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/traccar-traccar-198464113-198488474\n",
    "projectMetrics": {
      "numberSourceFiles": 487,
      "numberLibrariesFailingModule": 81,
      "numberTestFiles": 203,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 13,
        "numberDeleted": 14
      }
    },
    "diff": "diff --git a/src/org/traccar/protocol/Gl200ProtocolDecoder.java b/src/org/traccar/protocol/Gl200ProtocolDecoder.java\nindex 60addcd04f..ab65071229 100644\n--- a/src/org/traccar/protocol/Gl200ProtocolDecoder.java\n+++ b/src/org/traccar/protocol/Gl200ProtocolDecoder.java\n@@ -32,6 +32,7 @@ import org.traccar.model.WifiAccessPoint;\n import java.net.SocketAddress;\n import java.util.LinkedList;\n import java.util.List;\n+import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n \n public class Gl200ProtocolDecoder extends BaseProtocolDecoder {\n@@ -237,11 +238,13 @@ public class Gl200ProtocolDecoder extends BaseProtocolDecoder {\n             .number(\"(d{15}|x{14}),\")            // imei\n             .expression(\"[^,]*,\")                // device name\n             .number(\"(d+),\")                     // count\n-            .groupBegin()\n-            .number(\"(x{12}),\")                  // bssid\n-            .number(\"(-?d+),,,,\")                // rssi\n-            .groupEnd(\"+\")\n-            .any()\n+            .number(\"((?:x{12},-?d+,,,,)+),,,,\") // wifi\n+            .number(\"(d{1,3}),\")                 // battery\n+            .number(\"(dddd)(dd)(dd)\")            // date\n+            .number(\"(dd)(dd)(dd)\").optional(2)  // time\n+            .text(\",\")\n+            .number(\"(xxxx)\")                    // count number\n+            .text(\"$\").optional()\n             .compile();\n \n     private static final Pattern PATTERN = new PatternBuilder()\n@@ -620,12 +623,18 @@ public class Gl200ProtocolDecoder extends BaseProtocolDecoder {\n \n         Network network = new Network();\n \n-        int count = parser.nextInt();\n-        for (int i = 0; i < count; i++) {\n-            String mac = parser.next().replaceAll(\"(..)\", \"$1:\");\n-            network.addWifiAccessPoint(WifiAccessPoint.from(mac.substring(0, mac.length() - 1), parser.nextInt()));\n+        parser.nextInt(); // count\n+        Matcher matcher = Pattern.compile(\"([0-9a-fA-F]{12}),(-?\\\\d+),,,,\").matcher(parser.next());\n+        while (matcher.find()) {\n+            String mac = matcher.group(1).replaceAll(\"(..)\", \"$1:\");\n+            network.addWifiAccessPoint(WifiAccessPoint.from(\n+                    mac.substring(0, mac.length() - 1), Integer.parseInt(matcher.group(2))));\n         }\n \n+        position.setNetwork(network);\n+\n+        position.set(Position.KEY_BATTERY, parser.nextInt());\n+\n         return position;\n     }\n \n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 182261232,
        "hostName": "local",
        "totalMemory": 258998272,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 5:34:22 AM",
      "projectRootPomPath": "./workspace/traccar/traccar/198464113/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            95
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 95
        },
        "testing": {
          "stepDurations": [
            10
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 10
        },
        "cloning": {
          "stepDurations": [
            15
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 15
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 5:31:36 AM",
      "totalDuration": 160
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 229,
        "numberRunning": 230,
        "numberFailing": 0,
        "numberErroring": 1,
        "failures": [
          {
            "failureName": "java.lang.IndexOutOfBoundsException",
            "isError": true,
            "occurrences": 1
          }
        ],
        "numberSkipping": 2
      },
      "failingModule": "/root/workspace/traccar/traccar/201008628",
      "failingClasses": [
        {
          "numberPassing": 0,
          "numberRunning": 1,
          "testClass": "org.traccar.protocol.TeltonikaProtocolDecoderTest",
          "numberFailing": 0,
          "numberErroring": 1,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.IndexOutOfBoundsException",
          "testMethod": "testDecode",
          "testClass": "org.traccar.protocol.TeltonikaProtocolDecoderTest",
          "detail": "Readable byte limit exceeded: 339",
          "isError": true
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/201013389",
        "date": "Feb 13, 2017 4:46:40 AM",
        "id": 201013389
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/201008628",
        "date": "Feb 13, 2017 4:11:10 AM",
        "id": 201008628
      }
    },
    "repository": {
      "name": "traccar-traccar",
      "url": "https://github.com/traccar/traccar",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 4038949
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/621576edf95c0d3af1919113e62ac1e9245efa88",
        "sha": "621576edf95c0d3af1919113e62ac1e9245efa88",
        "branchName": "master",
        "date": "Feb 13, 2017 4:45:12 AM",
        "repoName": "traccar/traccar"
      },
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/582d431cd4a01bf2a6f826f32f2b93c17fd00a7b",
        "sha": "582d431cd4a01bf2a6f826f32f2b93c17fd00a7b",
        "branchName": "master",
        "date": "Feb 12, 2017 8:09:03 PM",
        "repoName": "traccar/traccar"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/traccar-traccar-201008628-201013389\n",
    "projectMetrics": {
      "numberSourceFiles": 489,
      "numberLibrariesFailingModule": 81,
      "numberTestFiles": 205,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 7,
        "numberDeleted": 1
      }
    },
    "diff": "diff --git a/src/org/traccar/protocol/TeltonikaProtocolDecoder.java b/src/org/traccar/protocol/TeltonikaProtocolDecoder.java\nindex fc7a8fd3a3..4d4d68ec29 100644\n--- a/src/org/traccar/protocol/TeltonikaProtocolDecoder.java\n+++ b/src/org/traccar/protocol/TeltonikaProtocolDecoder.java\n@@ -82,12 +82,6 @@ public class TeltonikaProtocolDecoder extends BaseProtocolDecoder {\n             case 9:\n                 position.set(Position.PREFIX_ADC + 1, buf.readUnsignedShort());\n                 break;\n-            case 21:\n-                position.set(Position.KEY_RSSI, buf.readUnsignedByte());\n-                break;\n-            case 22:\n-                position.set(\"profile\", buf.readUnsignedByte());\n-                break;\n             case 66:\n                 position.set(Position.KEY_POWER, buf.readUnsignedShort() + \"mV\");\n                 break;\n@@ -95,7 +89,7 @@ public class TeltonikaProtocolDecoder extends BaseProtocolDecoder {\n                 position.set(Position.KEY_BATTERY, buf.readUnsignedShort() + \"mV\");\n                 break;\n             case 70:\n-                position.set(\"pcbTemp\", buf.readInt() * 0.1);\n+                position.set(\"pcbTemp\", (length == 4 ? buf.readInt() : buf.readShort()) * 0.1);\n                 break;\n             case 72:\n                 position.set(Position.PREFIX_TEMP + 1, buf.readInt() * 0.1);\n",
    "type": "failing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 194524960,
        "hostName": "local",
        "totalMemory": 245891072,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 4:30:33 AM",
      "projectRootPomPath": "./workspace/traccar/traccar/201008628/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            91
          ],
          "stepNames": [
            "CheckoutBuggyBuildCandidate",
            "BuildProjectBuggyBuildCandidate"
          ],
          "nbSteps": 2,
          "totalDuration": 91
        },
        "testing": {
          "stepDurations": [
            7
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidate"
          ],
          "nbSteps": 1,
          "totalDuration": 7
        },
        "cloning": {
          "stepDurations": [
            14
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 14
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 4:28:06 AM",
      "totalDuration": 143
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 227,
        "numberRunning": 230,
        "numberFailing": 3,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 3
          }
        ],
        "numberSkipping": 4
      },
      "failingModule": "/root/workspace/traccar/traccar/207561899",
      "failingClasses": [
        {
          "numberPassing": 0,
          "numberRunning": 1,
          "testClass": "org.traccar.protocol.TotemProtocolDecoderTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        },
        {
          "numberPassing": 0,
          "numberRunning": 1,
          "testClass": "org.traccar.protocol.MeitrackProtocolDecoderTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        },
        {
          "numberPassing": 0,
          "numberRunning": 1,
          "testClass": "org.traccar.protocol.AquilaProtocolDecoderTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testDecode",
          "isError": false,
          "testClass": "org.traccar.protocol.AquilaProtocolDecoderTest"
        },
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testDecode",
          "isError": false,
          "testClass": "org.traccar.protocol.MeitrackProtocolDecoderTest"
        },
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testDecode",
          "isError": false,
          "testClass": "org.traccar.protocol.TotemProtocolDecoderTest"
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/207563891",
        "date": "Mar 4, 2017 1:30:36 AM",
        "id": 207563891
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/207561899",
        "date": "Mar 4, 2017 1:29:02 AM",
        "id": 207561899
      }
    },
    "repository": {
      "name": "traccar-traccar",
      "url": "https://github.com/traccar/traccar",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 4038949
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/1423209d00804948110e1b70c2e41248b4945877",
        "sha": "1423209d00804948110e1b70c2e41248b4945877",
        "branchName": "master",
        "date": "Mar 4, 2017 1:28:03 AM",
        "repoName": "traccar/traccar"
      },
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/b29929c4c8f78f665dd1614e43ee108c6eeeaa89",
        "sha": "b29929c4c8f78f665dd1614e43ee108c6eeeaa89",
        "branchName": "master",
        "date": "Mar 4, 2017 1:18:16 AM",
        "repoName": "traccar/traccar"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/traccar-traccar-207561899-207563891\n",
    "projectMetrics": {
      "numberSourceFiles": 498,
      "numberLibrariesFailingModule": 84,
      "numberTestFiles": 207,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 3,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 3,
        "numberDeleted": 3
      }
    },
    "diff": "diff --git a/src/org/traccar/protocol/AquilaProtocolDecoder.java b/src/org/traccar/protocol/AquilaProtocolDecoder.java\nindex e1cebd20d9..11ab15c86b 100644\n--- a/src/org/traccar/protocol/AquilaProtocolDecoder.java\n+++ b/src/org/traccar/protocol/AquilaProtocolDecoder.java\n@@ -132,7 +132,7 @@ public class AquilaProtocolDecoder extends BaseProtocolDecoder {\n \n         position.setSpeed(UnitsConverter.knotsFromKph(parser.nextDouble()));\n \n-        position.set(Position.KEY_ODOMETER, parser.next());\n+        position.set(Position.KEY_ODOMETER, parser.nextInt());\n \n         if (parser.hasNext(9)) {\n \ndiff --git a/src/org/traccar/protocol/MeitrackProtocolDecoder.java b/src/org/traccar/protocol/MeitrackProtocolDecoder.java\nindex 4862b49375..f5253566b8 100644\n--- a/src/org/traccar/protocol/MeitrackProtocolDecoder.java\n+++ b/src/org/traccar/protocol/MeitrackProtocolDecoder.java\n@@ -124,7 +124,7 @@ public class MeitrackProtocolDecoder extends BaseProtocolDecoder {\n \n         position.setAltitude(parser.nextDouble());\n \n-        position.set(Position.KEY_ODOMETER, parser.next());\n+        position.set(Position.KEY_ODOMETER, parser.nextInt());\n         position.set(\"runtime\", parser.next());\n \n         position.setNetwork(new Network(\ndiff --git a/src/org/traccar/protocol/TotemProtocolDecoder.java b/src/org/traccar/protocol/TotemProtocolDecoder.java\nindex 6a4b2052ca..f36ef8143d 100644\n--- a/src/org/traccar/protocol/TotemProtocolDecoder.java\n+++ b/src/org/traccar/protocol/TotemProtocolDecoder.java\n@@ -290,7 +290,7 @@ public class TotemProtocolDecoder extends BaseProtocolDecoder {\n             position.setCourse(parser.nextDouble());\n             position.setSpeed(parser.nextDouble());\n             position.set(\"pdop\", parser.next());\n-            position.set(Position.KEY_ODOMETER, parser.next());\n+            position.set(Position.KEY_ODOMETER, parser.nextInt() * 1000);\n \n             position.setLatitude(parser.nextCoordinate());\n             position.setLongitude(parser.nextCoordinate());\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 187292416,
        "hostName": "local",
        "totalMemory": 257949696,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 5:07:33 AM",
      "projectRootPomPath": "./workspace/traccar/traccar/207561899/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            102
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 102
        },
        "testing": {
          "stepDurations": [
            9
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 9
        },
        "cloning": {
          "stepDurations": [
            17
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 17
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 5:04:36 AM",
      "totalDuration": 171
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 232,
        "numberRunning": 233,
        "numberFailing": 0,
        "numberErroring": 1,
        "failures": [
          {
            "failureName": "java.lang.NumberFormatException",
            "isError": true,
            "occurrences": 1
          }
        ],
        "numberSkipping": 4
      },
      "failingModule": "/root/workspace/traccar/traccar/212058933",
      "failingClasses": [
        {
          "numberPassing": 0,
          "numberRunning": 1,
          "testClass": "org.traccar.protocol.SuntechProtocolDecoderTest",
          "numberFailing": 0,
          "numberErroring": 1,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.NumberFormatException",
          "testMethod": "testDecode",
          "testClass": "org.traccar.protocol.SuntechProtocolDecoderTest",
          "detail": "For input string: \"017.159\"",
          "isError": true
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/212061222",
        "date": "Mar 17, 2017 11:31:02 AM",
        "id": 212061222
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/212058933",
        "date": "Mar 17, 2017 11:25:34 AM",
        "id": 212058933
      }
    },
    "repository": {
      "name": "traccar-traccar",
      "url": "https://github.com/traccar/traccar",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 4038949
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/c53feac38ec149fed84121704c620503bf1f7820",
        "sha": "c53feac38ec149fed84121704c620503bf1f7820",
        "branchName": "master",
        "date": "Mar 17, 2017 10:59:49 AM",
        "repoName": "traccar/traccar"
      },
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/8b46b34fb3e2c2635208f0cb427d45182c3fecc4",
        "sha": "8b46b34fb3e2c2635208f0cb427d45182c3fecc4",
        "branchName": "master",
        "date": "Mar 17, 2017 10:50:49 AM",
        "repoName": "traccar/traccar"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/traccar-traccar-212058933-212061222\n",
    "projectMetrics": {
      "numberSourceFiles": 505,
      "numberLibrariesFailingModule": 96,
      "numberTestFiles": 210,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 11,
        "numberDeleted": 5
      }
    },
    "diff": "diff --git a/src/org/traccar/protocol/SuntechProtocolDecoder.java b/src/org/traccar/protocol/SuntechProtocolDecoder.java\nindex 55d5c224a3..e19335cb03 100644\n--- a/src/org/traccar/protocol/SuntechProtocolDecoder.java\n+++ b/src/org/traccar/protocol/SuntechProtocolDecoder.java\n@@ -31,11 +31,13 @@ import java.util.TimeZone;\n public class SuntechProtocolDecoder extends BaseProtocolDecoder {\n \n     private int protocolType;\n+    private boolean hbm;\n \n     public SuntechProtocolDecoder(SuntechProtocol protocol) {\n         super(protocol);\n \n         protocolType = Context.getConfig().getInteger(getProtocolName() + \".protocolType\");\n+        hbm = Context.getConfig().getBoolean(getProtocolName() + \".hbm\");\n     }\n \n     public void setProtocolType(int protocolType) {\n@@ -144,12 +146,16 @@ public class SuntechProtocolDecoder extends BaseProtocolDecoder {\n             position.set(Position.KEY_INDEX, Integer.parseInt(values[index++]));\n         }\n \n-        if (index < values.length) {\n-            position.set(Position.KEY_HOURS, Integer.parseInt(values[index++]));\n-        }\n+        if (hbm) {\n+\n+            if (index < values.length) {\n+                position.set(Position.KEY_HOURS, Integer.parseInt(values[index++]));\n+            }\n+\n+            if (index < values.length) {\n+                position.set(Position.KEY_BATTERY, Double.parseDouble(values[index]));\n+            }\n \n-        if (index < values.length) {\n-            position.set(Position.KEY_BATTERY, Double.parseDouble(values[index]));\n         }\n \n         return position;\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 124132568,
        "hostName": "local",
        "totalMemory": 278396928,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 4:52:39 AM",
      "projectRootPomPath": "./workspace/traccar/traccar/212058933/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            110
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 110
        },
        "testing": {
          "stepDurations": [
            11
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 11
        },
        "cloning": {
          "stepDurations": [
            14
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 14
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 4:49:24 AM",
      "totalDuration": 189
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 232,
        "numberRunning": 233,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 4
      },
      "failingModule": "/root/workspace/traccar/traccar/216100740",
      "failingClasses": [
        {
          "numberPassing": 0,
          "numberRunning": 1,
          "testClass": "org.traccar.protocol.TelicProtocolDecoderTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testDecode",
          "testClass": "org.traccar.protocol.TelicProtocolDecoderTest",
          "detail": "position is null",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/216167822",
        "date": "Mar 29, 2017 3:01:35 AM",
        "id": 216167822
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/216100740",
        "date": "Mar 28, 2017 10:48:09 PM",
        "id": 216100740
      }
    },
    "repository": {
      "name": "traccar-traccar",
      "url": "https://github.com/traccar/traccar",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 4038949
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/9879e67c1f522fe6940b7a3ca5fde5c93875dcfb",
        "sha": "9879e67c1f522fe6940b7a3ca5fde5c93875dcfb",
        "branchName": "master",
        "date": "Mar 28, 2017 5:58:23 PM",
        "repoName": "traccar/traccar"
      },
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/b7d5d53ead8eb8f7dbe6e04cdee76ea2c05c1dbe",
        "sha": "b7d5d53ead8eb8f7dbe6e04cdee76ea2c05c1dbe",
        "branchName": "master",
        "date": "Mar 28, 2017 1:44:07 PM",
        "repoName": "traccar/traccar"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/traccar-traccar-216100740-216167822\n",
    "projectMetrics": {
      "numberSourceFiles": 506,
      "numberLibrariesFailingModule": 96,
      "numberTestFiles": 210,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 5,
        "numberDeleted": 4
      }
    },
    "diff": "diff --git a/src/org/traccar/protocol/TelicProtocolDecoder.java b/src/org/traccar/protocol/TelicProtocolDecoder.java\nindex bbd4b0574c..8207e59562 100644\n--- a/src/org/traccar/protocol/TelicProtocolDecoder.java\n+++ b/src/org/traccar/protocol/TelicProtocolDecoder.java\n@@ -54,7 +54,7 @@ public class TelicProtocolDecoder extends BaseProtocolDecoder {\n             .expression(\"(?:[^,]*,){7}\")\n             .number(\"(d+),\")                     // battery\n             .expression(\"[^,]*,\")\n-            .number(\"(d+)\")                      // external\n+            .number(\"(d+)?\")                     // external\n             .any()\n             .compile();\n \n@@ -83,6 +83,8 @@ public class TelicProtocolDecoder extends BaseProtocolDecoder {\n     @Override\n     protected Object decode(\n             Channel channel, SocketAddress remoteAddress, Object msg) throws Exception {\n+        org.traccar.helper.PatternUtil.MatchResult matchResult =\n+                org.traccar.helper.PatternUtil.checkPattern(PATTERN.pattern(), (String) msg);\n \n         Parser parser = new Parser(PATTERN, (String) msg);\n         if (!parser.matches()) {\n@@ -130,7 +132,10 @@ public class TelicProtocolDecoder extends BaseProtocolDecoder {\n         }\n \n         position.set(Position.KEY_BATTERY, parser.nextInt());\n-        position.set(Position.KEY_POWER, parser.nextInt());\n+\n+        if (parser.hasNext()) {\n+            position.set(Position.KEY_POWER, parser.nextInt());\n+        }\n \n         return position;\n     }\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 178704504,
        "hostName": "local",
        "totalMemory": 259522560,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 4:37:45 AM",
      "projectRootPomPath": "./workspace/traccar/traccar/216100740/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            106
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 106
        },
        "testing": {
          "stepDurations": [
            10
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 10
        },
        "cloning": {
          "stepDurations": [
            15
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 15
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 4:34:45 AM",
      "totalDuration": 174
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 232,
        "numberRunning": 233,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 4
      },
      "failingModule": "/root/workspace/traccar/traccar/216189551",
      "failingClasses": [
        {
          "numberPassing": 0,
          "numberRunning": 1,
          "testClass": "org.traccar.protocol.TelicProtocolDecoderTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testDecode",
          "testClass": "org.traccar.protocol.TelicProtocolDecoderTest",
          "detail": "position is null",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/216602583",
        "date": "Mar 30, 2017 4:50:55 AM",
        "id": 216602583
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/216189551",
        "date": "Mar 29, 2017 5:00:35 AM",
        "id": 216189551
      }
    },
    "repository": {
      "name": "traccar-traccar",
      "url": "https://github.com/traccar/traccar",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 4038949
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/6461a7fad516e46250daca301305f36ba8bab8e6",
        "sha": "6461a7fad516e46250daca301305f36ba8bab8e6",
        "branchName": "master",
        "date": "Mar 29, 2017 7:49:15 PM",
        "repoName": "traccar/traccar"
      },
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/d344bd8061dd15b0613a7f628decbd8bca3df095",
        "sha": "d344bd8061dd15b0613a7f628decbd8bca3df095",
        "branchName": "master",
        "date": "Mar 28, 2017 7:58:42 PM",
        "repoName": "traccar/traccar"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/traccar-traccar-216189551-216602583\n",
    "projectMetrics": {
      "numberSourceFiles": 506,
      "numberLibrariesFailingModule": 96,
      "numberTestFiles": 210,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 6,
        "numberDeleted": 0
      }
    },
    "diff": "diff --git a/src/org/traccar/protocol/TelicProtocolDecoder.java b/src/org/traccar/protocol/TelicProtocolDecoder.java\nindex dd20932d90..579a6466b2 100644\n--- a/src/org/traccar/protocol/TelicProtocolDecoder.java\n+++ b/src/org/traccar/protocol/TelicProtocolDecoder.java\n@@ -53,8 +53,6 @@ public class TelicProtocolDecoder extends BaseProtocolDecoder {\n             .number(\"(d+)?,\")                    // satellites\n             .expression(\"(?:[^,]*,){7}\")\n             .number(\"(d+),\")                     // battery\n-            .expression(\"[^,]*,\")\n-            .number(\"(d+)?\")                     // external\n             .any()\n             .compile();\n \n@@ -131,10 +129,6 @@ public class TelicProtocolDecoder extends BaseProtocolDecoder {\n \n         position.set(Position.KEY_BATTERY, parser.nextInt());\n \n-        if (parser.hasNext()) {\n-            position.set(Position.KEY_POWER, parser.nextInt());\n-        }\n-\n         return position;\n     }\n \n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 138715416,
        "hostName": "local",
        "totalMemory": 287309824,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 4:34:37 AM",
      "projectRootPomPath": "./workspace/traccar/traccar/216189551/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            111
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 111
        },
        "testing": {
          "stepDurations": [
            11
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 11
        },
        "cloning": {
          "stepDurations": [
            14
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 14
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 4:31:19 AM",
      "totalDuration": 191
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 232,
        "numberRunning": 233,
        "numberFailing": 0,
        "numberErroring": 1,
        "failures": [
          {
            "failureName": "java.lang.NumberFormatException",
            "isError": true,
            "occurrences": 1
          }
        ],
        "numberSkipping": 4
      },
      "failingModule": "/root/workspace/traccar/traccar/216602583",
      "failingClasses": [
        {
          "numberPassing": 0,
          "numberRunning": 1,
          "testClass": "org.traccar.protocol.StarLinkProtocolDecoderTest",
          "numberFailing": 0,
          "numberErroring": 1,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.NumberFormatException",
          "testMethod": "testDecode",
          "testClass": "org.traccar.protocol.StarLinkProtocolDecoderTest",
          "detail": "For input string: \"\"",
          "isError": true
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/216605267",
        "date": "Mar 30, 2017 5:07:42 AM",
        "id": 216605267
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/216602583",
        "date": "Mar 30, 2017 4:50:55 AM",
        "id": 216602583
      }
    },
    "repository": {
      "name": "traccar-traccar",
      "url": "https://github.com/traccar/traccar",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 4038949
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/cece144cb40875887800251e20b9d44cb609052f",
        "sha": "cece144cb40875887800251e20b9d44cb609052f",
        "branchName": "master",
        "date": "Mar 29, 2017 8:05:56 PM",
        "repoName": "traccar/traccar"
      },
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/6461a7fad516e46250daca301305f36ba8bab8e6",
        "sha": "6461a7fad516e46250daca301305f36ba8bab8e6",
        "branchName": "master",
        "date": "Mar 29, 2017 7:49:15 PM",
        "repoName": "traccar/traccar"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/traccar-traccar-216602583-216605267\n",
    "projectMetrics": {
      "numberSourceFiles": 506,
      "numberLibrariesFailingModule": 96,
      "numberTestFiles": 210,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 6,
        "numberDeleted": 2
      }
    },
    "diff": "diff --git a/src/org/traccar/protocol/StarLinkProtocolDecoder.java b/src/org/traccar/protocol/StarLinkProtocolDecoder.java\nindex 8d35ea5ba3..97091257fa 100644\n--- a/src/org/traccar/protocol/StarLinkProtocolDecoder.java\n+++ b/src/org/traccar/protocol/StarLinkProtocolDecoder.java\n@@ -151,10 +151,14 @@ public class StarLinkProtocolDecoder extends BaseProtocolDecoder {\n                     position.set(Position.PREFIX_OUT + 4, Integer.parseInt(data[i]));\n                     break;\n                 case \"#LAC#\":\n-                    lac = Integer.parseInt(data[i]);\n+                    if (!data[i].isEmpty()) {\n+                        lac = Integer.parseInt(data[i]);\n+                    }\n                     break;\n                 case \"#CID#\":\n-                    cid = Integer.parseInt(data[i]);\n+                    if (!data[i].isEmpty()) {\n+                        cid = Integer.parseInt(data[i]);\n+                    }\n                     break;\n                 case \"#VIN#\":\n                     position.set(Position.KEY_POWER, Double.parseDouble(data[i]));\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 189112464,
        "hostName": "local",
        "totalMemory": 263192576,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 4:34:35 AM",
      "projectRootPomPath": "./workspace/traccar/traccar/216602583/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            110
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 110
        },
        "testing": {
          "stepDurations": [
            11
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 11
        },
        "cloning": {
          "stepDurations": [
            13
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 13
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 4:31:19 AM",
      "totalDuration": 189
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 232,
        "numberRunning": 233,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 4
      },
      "failingModule": "/root/workspace/traccar/traccar/219945896",
      "failingClasses": [
        {
          "numberPassing": 0,
          "numberRunning": 1,
          "testClass": "org.traccar.protocol.CguardProtocolDecoderTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testDecode",
          "testClass": "org.traccar.protocol.CguardProtocolDecoderTest",
          "detail": "position is null",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/220224837",
        "date": "Apr 9, 2017 11:49:17 AM",
        "id": 220224837
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/219945896",
        "date": "Apr 8, 2017 6:43:53 AM",
        "id": 219945896
      }
    },
    "repository": {
      "name": "traccar-traccar",
      "url": "https://github.com/traccar/traccar",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 4038949
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/1f4dc7e4413aae6f8e927d7d5a9c40a8bd0ae082",
        "sha": "1f4dc7e4413aae6f8e927d7d5a9c40a8bd0ae082",
        "branchName": "master",
        "date": "Apr 9, 2017 11:47:16 AM",
        "repoName": "traccar/traccar"
      },
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/e104f5636d53311dfd91cafaa2cdea65260ae7dc",
        "sha": "e104f5636d53311dfd91cafaa2cdea65260ae7dc",
        "branchName": "master",
        "date": "Apr 8, 2017 6:42:23 AM",
        "repoName": "traccar/traccar"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/traccar-traccar-219945896-220224837\n",
    "projectMetrics": {
      "numberSourceFiles": 507,
      "numberLibrariesFailingModule": 96,
      "numberTestFiles": 210,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 7,
        "numberDeleted": 7
      }
    },
    "diff": "diff --git a/src/org/traccar/protocol/CguardProtocolDecoder.java b/src/org/traccar/protocol/CguardProtocolDecoder.java\nindex 19144017a8..f1d593944f 100644\n--- a/src/org/traccar/protocol/CguardProtocolDecoder.java\n+++ b/src/org/traccar/protocol/CguardProtocolDecoder.java\n@@ -35,13 +35,13 @@ public class CguardProtocolDecoder extends BaseProtocolDecoder {\n     private static final Pattern PATTERN_NV = new PatternBuilder()\n             .text(\"NV:\")\n             .number(\"(dd)(dd)(dd) \")             // date (yymmdd)\n-            .number(\"(dd)(dd)(dd):\")             // time (hhmmss)\n-            .number(\"(-?d+.d+):\")                // longitude\n-            .number(\"(-?d+.d+):\")                // latitude\n-            .number(\"(d+.?d*):\")                 // speed\n-            .number(\"(?:NAN|(d+.?d*)):\")         // accuracy\n-            .number(\"(?:NAN|(d+.?d*)):\")         // course\n-            .number(\"(?:NAN|(d+.?d*))\")          // altitude\n+            .number(\"(dd)(dd)(dd)\")              // time (hhmmss)\n+            .number(\":(-?d+.d+)\")                // longitude\n+            .number(\":(-?d+.d+)\")                // latitude\n+            .number(\":(d+.?d*)\")                 // speed\n+            .number(\":(?:NAN|(d+.?d*))\")         // accuracy\n+            .number(\":(?:NAN|(d+.?d*))\")         // course\n+            .number(\":(?:NAN|(d+.?d*))\").optional() // altitude\n             .compile();\n \n     private static final Pattern PATTERN_BC = new PatternBuilder()\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 119918408,
        "hostName": "local",
        "totalMemory": 203423744,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 9, 2018 11:02:46 PM",
      "projectRootPomPath": "./workspace/traccar/traccar/219945896/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            1,
            0,
            0,
            0,
            140
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 141
        },
        "testing": {
          "stepDurations": [
            11
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 11
        },
        "cloning": {
          "stepDurations": [
            23
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 23
        }
      },
      "reproductionDateBeginning": "Oct 9, 2018 10:59:04 PM",
      "totalDuration": 215
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 232,
        "numberRunning": 233,
        "numberFailing": 0,
        "numberErroring": 1,
        "failures": [
          {
            "failureName": "java.text.ParseException",
            "isError": true,
            "occurrences": 1
          }
        ],
        "numberSkipping": 4
      },
      "failingModule": "/root/workspace/traccar/traccar/220525069",
      "failingClasses": [
        {
          "numberPassing": 0,
          "numberRunning": 1,
          "testClass": "org.traccar.protocol.SuntechProtocolDecoderTest",
          "numberFailing": 0,
          "numberErroring": 1,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.text.ParseException",
          "testMethod": "testDecode",
          "testClass": "org.traccar.protocol.SuntechProtocolDecoderTest",
          "detail": "Unparseable date: \"22:37:413be0133057\"",
          "isError": true
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/220735965",
        "date": "Apr 10, 2017 11:41:43 PM",
        "id": 220735965
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/220525069",
        "date": "Apr 10, 2017 1:49:05 PM",
        "id": 220525069
      }
    },
    "repository": {
      "name": "traccar-traccar",
      "url": "https://github.com/traccar/traccar",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 4038949
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/aba44d6cb91ac0b54de743dbd469ee8ca118796f",
        "sha": "aba44d6cb91ac0b54de743dbd469ee8ca118796f",
        "branchName": "master",
        "date": "Apr 10, 2017 11:40:01 PM",
        "repoName": "traccar/traccar"
      },
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/2f46d48846633fbf56289f478a9acbe544a17c9c",
        "sha": "2f46d48846633fbf56289f478a9acbe544a17c9c",
        "branchName": "master",
        "date": "Apr 10, 2017 1:46:55 PM",
        "repoName": "traccar/traccar"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/traccar-traccar-220525069-220735965\n",
    "projectMetrics": {
      "numberSourceFiles": 507,
      "numberLibrariesFailingModule": 96,
      "numberTestFiles": 210,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 3,
        "numberDeleted": 1
      }
    },
    "diff": "diff --git a/src/org/traccar/protocol/SuntechProtocolDecoder.java b/src/org/traccar/protocol/SuntechProtocolDecoder.java\nindex e19335cb03..42e81f60ce 100644\n--- a/src/org/traccar/protocol/SuntechProtocolDecoder.java\n+++ b/src/org/traccar/protocol/SuntechProtocolDecoder.java\n@@ -67,7 +67,9 @@ public class SuntechProtocolDecoder extends BaseProtocolDecoder {\n         }\n         position.setDeviceId(deviceSession.getDeviceId());\n \n-        position.set(Position.KEY_VERSION_FW, values[index++]);\n+        if (!type.equals(\"Alert\") || protocolType == 0) {\n+            position.set(Position.KEY_VERSION_FW, values[index++]);\n+        }\n \n         DateFormat dateFormat = new SimpleDateFormat(\"yyyyMMddHH:mm:ss\");\n         dateFormat.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 131838696,
        "hostName": "local",
        "totalMemory": 353370112,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 9, 2018 11:02:02 PM",
      "projectRootPomPath": "./workspace/traccar/traccar/220525069/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            1,
            0,
            0,
            0,
            131
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 132
        },
        "testing": {
          "stepDurations": [
            20
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 20
        },
        "cloning": {
          "stepDurations": [
            17
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 17
        }
      },
      "reproductionDateBeginning": "Oct 9, 2018 10:58:19 PM",
      "totalDuration": 215
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 232,
        "numberRunning": 233,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 5
      },
      "failingModule": "/root/workspace/traccar/traccar/222468469",
      "failingClasses": [
        {
          "numberPassing": 1,
          "numberRunning": 2,
          "testClass": "org.traccar.protocol.H02ProtocolDecoderTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testDecodeStatus",
          "testClass": "org.traccar.protocol.H02ProtocolDecoderTest",
          "detail": "expected:<4294966271> but was:<1418892070>",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/222479725",
        "date": "Apr 16, 2017 4:54:46 AM",
        "id": 222479725
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/222468469",
        "date": "Apr 16, 2017 3:04:42 AM",
        "id": 222468469
      }
    },
    "repository": {
      "name": "traccar-traccar",
      "url": "https://github.com/traccar/traccar",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 4038949
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/1498b5c5a00c575ba67dce2dcfac0d77a8b4964a",
        "sha": "1498b5c5a00c575ba67dce2dcfac0d77a8b4964a",
        "branchName": "master",
        "date": "Apr 16, 2017 4:53:05 AM",
        "repoName": "traccar/traccar"
      },
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/5c127eee77815eabc5c99ee45b2767a0e61553a9",
        "sha": "5c127eee77815eabc5c99ee45b2767a0e61553a9",
        "branchName": "master",
        "date": "Apr 16, 2017 3:02:41 AM",
        "repoName": "traccar/traccar"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/traccar-traccar-222468469-222479725\n",
    "projectMetrics": {
      "numberSourceFiles": 508,
      "numberLibrariesFailingModule": 96,
      "numberTestFiles": 210,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 3,
        "numberDeleted": 1
      }
    },
    "diff": "diff --git a/src/org/traccar/protocol/H02ProtocolDecoder.java b/src/org/traccar/protocol/H02ProtocolDecoder.java\nindex b78f21d8dd..465bf83956 100644\n--- a/src/org/traccar/protocol/H02ProtocolDecoder.java\n+++ b/src/org/traccar/protocol/H02ProtocolDecoder.java\n@@ -184,7 +184,9 @@ public class H02ProtocolDecoder extends BaseProtocolDecoder {\n             .number(\"(d+),\")\n             .number(\"(d+)#\")\n             .or()\n-            .any()\n+            .expression(\",.*\")\n+            .or()\n+            .text(\"#\")\n             .groupEnd()\n             .compile();\n \n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 297335936,
        "hostName": "local",
        "totalMemory": 344981504,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 9, 2018 10:58:51 PM",
      "projectRootPomPath": "./workspace/traccar/traccar/222468469/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            117
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 117
        },
        "testing": {
          "stepDurations": [
            15
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 15
        },
        "cloning": {
          "stepDurations": [
            17
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 17
        }
      },
      "reproductionDateBeginning": "Oct 9, 2018 10:55:05 PM",
      "totalDuration": 217
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 232,
        "numberRunning": 233,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 5
      },
      "failingModule": "/root/workspace/traccar/traccar/222528691",
      "failingClasses": [
        {
          "numberPassing": 0,
          "numberRunning": 1,
          "testClass": "org.traccar.protocol.Tlt2hProtocolDecoderTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testDecode",
          "testClass": "org.traccar.protocol.Tlt2hProtocolDecoderTest",
          "detail": "list if empty",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/222667430",
        "date": "Apr 17, 2017 2:45:26 AM",
        "id": 222667430
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/222528691",
        "date": "Apr 16, 2017 12:24:40 PM",
        "id": 222528691
      }
    },
    "repository": {
      "name": "traccar-traccar",
      "url": "https://github.com/traccar/traccar",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 4038949
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/73ecddc51d9c998e08ffa85d54a8e6da90567f36",
        "sha": "73ecddc51d9c998e08ffa85d54a8e6da90567f36",
        "branchName": "master",
        "date": "Apr 17, 2017 2:43:54 AM",
        "repoName": "traccar/traccar"
      },
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/e6975cd0c6d93dc205eac0c5470d3060269df87e",
        "sha": "e6975cd0c6d93dc205eac0c5470d3060269df87e",
        "branchName": "master",
        "date": "Apr 16, 2017 12:22:43 PM",
        "repoName": "traccar/traccar"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/traccar-traccar-222528691-222667430\n",
    "projectMetrics": {
      "numberSourceFiles": 508,
      "numberLibrariesFailingModule": 96,
      "numberTestFiles": 210,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 3,
        "numberDeleted": 3
      }
    },
    "diff": "diff --git a/src/org/traccar/protocol/Tlt2hProtocolDecoder.java b/src/org/traccar/protocol/Tlt2hProtocolDecoder.java\nindex 9f0e8e8887..1d6093b94f 100644\n--- a/src/org/traccar/protocol/Tlt2hProtocolDecoder.java\n+++ b/src/org/traccar/protocol/Tlt2hProtocolDecoder.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright 2013 Anton Tananaev (anton@traccar.org)\n+ * Copyright 2013 - 2017 Anton Tananaev (anton@traccar.org)\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n@@ -45,7 +45,7 @@ public class Tlt2hProtocolDecoder extends BaseProtocolDecoder {\n     private static final Pattern PATTERN_POSITION = new PatternBuilder()\n             .number(\"#(x+)?\")                    // cell info\n             .text(\"$GPRMC,\")\n-            .number(\"(dd)(dd)(dd).(ddd),\")       // time (hhmmss.sss)\n+            .number(\"(dd)(dd)(dd).d+,\")          // time (hhmmss.sss)\n             .expression(\"([AV]),\")               // validity\n             .number(\"(d+)(dd.d+),\")              // latitude\n             .expression(\"([NS]),\")\n@@ -91,7 +91,7 @@ public class Tlt2hProtocolDecoder extends BaseProtocolDecoder {\n                 parser.next(); // base station info\n \n                 DateBuilder dateBuilder = new DateBuilder()\n-                        .setTime(parser.nextInt(), parser.nextInt(), parser.nextInt(), parser.nextInt());\n+                        .setTime(parser.nextInt(), parser.nextInt(), parser.nextInt());\n \n                 position.setValid(parser.next().equals(\"A\"));\n                 position.setLatitude(parser.nextCoordinate());\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 296134056,
        "hostName": "local",
        "totalMemory": 337641472,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 9, 2018 10:55:58 PM",
      "projectRootPomPath": "./workspace/traccar/traccar/222528691/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            1,
            0,
            0,
            0,
            125
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 126
        },
        "testing": {
          "stepDurations": [
            17
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 17
        },
        "cloning": {
          "stepDurations": [
            18
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 18
        }
      },
      "reproductionDateBeginning": "Oct 9, 2018 10:52:10 PM",
      "totalDuration": 221
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 232,
        "numberRunning": 233,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 5
      },
      "failingModule": "/root/workspace/traccar/traccar/225874246",
      "failingClasses": [
        {
          "numberPassing": 0,
          "numberRunning": 1,
          "testClass": "org.traccar.protocol.L100ProtocolDecoderTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testDecode",
          "testClass": "org.traccar.protocol.L100ProtocolDecoderTest",
          "detail": "position is null",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/226678972",
        "date": "Apr 28, 2017 6:47:12 AM",
        "id": 226678972
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/225874246",
        "date": "Apr 26, 2017 7:08:32 AM",
        "id": 225874246
      }
    },
    "repository": {
      "name": "traccar-traccar",
      "url": "https://github.com/traccar/traccar",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 4038949
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/4f235bcac5b13733684fed8e0ef05968123f6e10",
        "sha": "4f235bcac5b13733684fed8e0ef05968123f6e10",
        "branchName": "master",
        "date": "Apr 28, 2017 6:45:30 AM",
        "repoName": "traccar/traccar"
      },
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/1f3185d8a06f5d8cd3c05c15cbb7abbbfa81af37",
        "sha": "1f3185d8a06f5d8cd3c05c15cbb7abbbfa81af37",
        "branchName": "master",
        "date": "Apr 26, 2017 7:07:00 AM",
        "repoName": "traccar/traccar"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/traccar-traccar-225874246-226678972\n",
    "projectMetrics": {
      "numberSourceFiles": 509,
      "numberLibrariesFailingModule": 96,
      "numberTestFiles": 210,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 7,
        "numberDeleted": 6
      }
    },
    "diff": "diff --git a/src/org/traccar/protocol/L100ProtocolDecoder.java b/src/org/traccar/protocol/L100ProtocolDecoder.java\nindex f98e532bcf..6184480802 100644\n--- a/src/org/traccar/protocol/L100ProtocolDecoder.java\n+++ b/src/org/traccar/protocol/L100ProtocolDecoder.java\n@@ -40,8 +40,9 @@ public class L100ProtocolDecoder extends BaseProtocolDecoder {\n             .text(\"ATL\")\n             .number(\"(d{15}),\")                  // imei\n             .text(\"$GPRMC,\")\n-            .number(\"(dd)(dd)(dd).(ddd),\")       // time (hhmmss.sss)\n-            .expression(\"([AV]),\")               // validity\n+            .number(\"(dd)(dd)(dd)\")              // time (hhmmss.sss)\n+            .number(\".(ddd)\").optional()\n+            .expression(\",([AV]),\")              // validity\n             .number(\"(dd)(dd.d+),\")              // latitude\n             .expression(\"([NS]),\")\n             .number(\"(ddd)(dd.d+),\")             // longitude\n@@ -52,7 +53,7 @@ public class L100ProtocolDecoder extends BaseProtocolDecoder {\n             .any()\n             .text(\"#\")\n             .number(\"([01]+),\")                  // io status\n-            .number(\"(d+.d+|N.C),\")              // adc\n+            .number(\"(d+.?d*|N.C),\")             // adc\n             .expression(\"[^,]*,\")                // reserved\n             .expression(\"[^,]*,\")                // reserved\n             .number(\"(d+.d+),\")                  // odometer\n@@ -61,8 +62,8 @@ public class L100ProtocolDecoder extends BaseProtocolDecoder {\n             .number(\"(d+),\")                     // gsm\n             .number(\"(d+),\")                     // mcc\n             .number(\"(d+),\")                     // mnc\n-            .number(\"(d+),\")                     // lac\n-            .number(\"(d+)\")                      // cid\n+            .number(\"(x+),\")                     // lac\n+            .number(\"(x+)\")                      // cid\n             .text(\"ATL\")\n             .compile();\n \n@@ -111,7 +112,7 @@ public class L100ProtocolDecoder extends BaseProtocolDecoder {\n \n         int rssi = parser.nextInt(0);\n         position.setNetwork(new Network(CellTower.from(\n-                parser.nextInt(0), parser.nextInt(0), parser.nextInt(0), parser.nextInt(0), rssi)));\n+                parser.nextInt(0), parser.nextInt(0), parser.nextHexInt(0), parser.nextHexInt(0), rssi)));\n \n         return position;\n     }\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 169182664,
        "hostName": "local",
        "totalMemory": 256901120,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 9, 2018 10:49:10 PM",
      "projectRootPomPath": "./workspace/traccar/traccar/225874246/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            148
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 148
        },
        "testing": {
          "stepDurations": [
            16
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 16
        },
        "cloning": {
          "stepDurations": [
            15
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 15
        }
      },
      "reproductionDateBeginning": "Oct 9, 2018 10:45:06 PM",
      "totalDuration": 236
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 233,
        "numberRunning": 234,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 5
      },
      "failingModule": "/root/workspace/traccar/traccar/228965242",
      "failingClasses": [
        {
          "numberPassing": 0,
          "numberRunning": 1,
          "testClass": "org.traccar.protocol.Pt502ProtocolDecoderTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testDecode",
          "testClass": "org.traccar.protocol.Pt502ProtocolDecoderTest",
          "detail": "position is null",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/229298433",
        "date": "May 5, 2017 11:47:27 PM",
        "id": 229298433
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/228965242",
        "date": "May 5, 2017 3:34:06 AM",
        "id": 228965242
      }
    },
    "repository": {
      "name": "traccar-traccar",
      "url": "https://github.com/traccar/traccar",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 4038949
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/f35567956593f78f3f9630add815710b9df47634",
        "sha": "f35567956593f78f3f9630add815710b9df47634",
        "branchName": "master",
        "date": "May 5, 2017 11:44:27 PM",
        "repoName": "traccar/traccar"
      },
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/841965ba439654f76dcd7fc63efd70647f23f29f",
        "sha": "841965ba439654f76dcd7fc63efd70647f23f29f",
        "branchName": "master",
        "date": "May 5, 2017 3:31:48 AM",
        "repoName": "traccar/traccar"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/traccar-traccar-228965242-229298433\n",
    "projectMetrics": {
      "numberSourceFiles": 509,
      "numberLibrariesFailingModule": 96,
      "numberTestFiles": 211,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 6,
        "numberDeleted": 4
      }
    },
    "diff": "diff --git a/src/org/traccar/protocol/Pt502ProtocolDecoder.java b/src/org/traccar/protocol/Pt502ProtocolDecoder.java\nindex eb86f01ffd..b1851f8ca3 100644\n--- a/src/org/traccar/protocol/Pt502ProtocolDecoder.java\n+++ b/src/org/traccar/protocol/Pt502ProtocolDecoder.java\n@@ -1,5 +1,5 @@\n /*\r\n- * Copyright 2012 - 2016 Anton Tananaev (anton@traccar.org)\r\n+ * Copyright 2012 - 2017 Anton Tananaev (anton@traccar.org)\r\n  * Copyright 2012 Luis Parada (luis.parada@gmail.com)\r\n  *\r\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n@@ -43,9 +43,9 @@ public class Pt502ProtocolDecoder extends BaseProtocolDecoder {\n             .number(\"(d+),\")                     // id\r\n             .number(\"(dd)(dd)(dd).(ddd),\")       // time (hhmmss.sss)\r\n             .expression(\"([AV]),\")               // validity\r\n-            .number(\"(dd)(dd.dddd),\")            // latitude\r\n+            .number(\"(d+)(dd.dddd),\")            // latitude\r\n             .expression(\"([NS]),\")\r\n-            .number(\"(ddd)(dd.dddd),\")           // longitude\r\n+            .number(\"(d+)(dd.dddd),\")            // longitude\r\n             .expression(\"([EW]),\")\r\n             .number(\"(d+.d+)?,\")                 // speed\r\n             .number(\"(d+.d+)?,\")                 // course\r\n@@ -83,9 +83,7 @@ public class Pt502ProtocolDecoder extends BaseProtocolDecoder {\n     protected Object decode(\r\n             Channel channel, SocketAddress remoteAddress, Object msg) throws Exception {\r\n \r\n-        String sentence = (String) msg;\r\n-\r\n-        Parser parser = new Parser(PATTERN, sentence);\r\n+        Parser parser = new Parser(PATTERN, (String) msg);\r\n         if (!parser.matches()) {\r\n             return null;\r\n         }\r\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 223961752,
        "hostName": "local",
        "totalMemory": 270532608,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 3:08:50 PM",
      "projectRootPomPath": "./workspace/traccar/traccar/228965242/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            99
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 99
        },
        "testing": {
          "stepDurations": [
            12
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 12
        },
        "cloning": {
          "stepDurations": [
            18
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 18
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 3:05:51 PM",
      "totalDuration": 173
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 236,
        "numberRunning": 237,
        "numberFailing": 0,
        "numberErroring": 1,
        "failures": [
          {
            "failureName": "java.text.ParseException",
            "isError": true,
            "occurrences": 1
          }
        ],
        "numberSkipping": 5
      },
      "failingModule": "/root/workspace/traccar/traccar/233864732",
      "failingClasses": [
        {
          "numberPassing": 0,
          "numberRunning": 1,
          "testClass": "org.traccar.protocol.StarLinkProtocolDecoderTest",
          "numberFailing": 0,
          "numberErroring": 1,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.text.ParseException",
          "testMethod": "testDecode",
          "testClass": "org.traccar.protocol.StarLinkProtocolDecoderTest",
          "detail": "Unparseable date: \"\"",
          "isError": true
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/233868407",
        "date": "May 19, 2017 4:49:59 AM",
        "id": 233868407
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/233864732",
        "date": "May 19, 2017 4:23:48 AM",
        "id": 233864732
      }
    },
    "repository": {
      "name": "traccar-traccar",
      "url": "https://github.com/traccar/traccar",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 4038949
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/d9c3568535f8a3ef9cedb43f7c48e839e2940d1f",
        "sha": "d9c3568535f8a3ef9cedb43f7c48e839e2940d1f",
        "branchName": "master",
        "date": "May 18, 2017 7:48:03 PM",
        "repoName": "traccar/traccar"
      },
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/6b16c0ddf2ac1ce497e1d8bc17a47eceeabca113",
        "sha": "6b16c0ddf2ac1ce497e1d8bc17a47eceeabca113",
        "branchName": "master",
        "date": "May 18, 2017 7:22:03 PM",
        "repoName": "traccar/traccar"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/traccar-traccar-233864732-233868407\n",
    "projectMetrics": {
      "numberSourceFiles": 524,
      "numberLibrariesFailingModule": 96,
      "numberTestFiles": 214,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 0,
        "numberDeleted": 7
      }
    },
    "diff": "diff --git a/src/org/traccar/protocol/StarLinkProtocolDecoder.java b/src/org/traccar/protocol/StarLinkProtocolDecoder.java\nindex 0e9840766a..8fbecc35e8 100644\n--- a/src/org/traccar/protocol/StarLinkProtocolDecoder.java\n+++ b/src/org/traccar/protocol/StarLinkProtocolDecoder.java\n@@ -100,6 +100,9 @@ public class StarLinkProtocolDecoder extends BaseProtocolDecoder {\n         int event = 0;\n \n         for (int i = 0; i < Math.min(data.length, dataTags.length); i++) {\n+            if (data[i].isEmpty()) {\n+                continue;\n+            }\n             switch (dataTags[i]) {\n                 case \"#EDT#\":\n                     position.setDeviceTime(dateFormat.parse(data[i]));\n@@ -180,6 +183,10 @@ public class StarLinkProtocolDecoder extends BaseProtocolDecoder {\n             }\n         }\n \n+        if (position.getFixTime() == null) {\n+            getLastLocation(position, null);\n+        }\n+\n         if (lac != null && cid != null) {\n             position.setNetwork(new Network(CellTower.fromLacCid(lac, cid)));\n         }\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 205974136,
        "hostName": "local",
        "totalMemory": 246415360,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 2:59:41 PM",
      "projectRootPomPath": "./workspace/traccar/traccar/233864732/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            102
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 102
        },
        "testing": {
          "stepDurations": [
            11
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 11
        },
        "cloning": {
          "stepDurations": [
            17
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 17
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 2:56:46 PM",
      "totalDuration": 169
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 240,
        "numberRunning": 241,
        "numberFailing": 0,
        "numberErroring": 1,
        "failures": [
          {
            "failureName": "java.lang.NumberFormatException",
            "isError": true,
            "occurrences": 1
          }
        ],
        "numberSkipping": 5
      },
      "failingModule": "/root/workspace/traccar/traccar/237845618",
      "failingClasses": [
        {
          "numberPassing": 0,
          "numberRunning": 1,
          "testClass": "org.traccar.protocol.WatchProtocolDecoderTest",
          "numberFailing": 0,
          "numberErroring": 1,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.NumberFormatException",
          "testMethod": "testDecode",
          "testClass": "org.traccar.protocol.WatchProtocolDecoderTest",
          "detail": "For input string: \"100]\"",
          "isError": true
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/237846623",
        "date": "May 31, 2017 11:13:23 AM",
        "id": 237846623
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/237845618",
        "date": "May 31, 2017 11:10:30 AM",
        "id": 237845618
      }
    },
    "repository": {
      "name": "traccar-traccar",
      "url": "https://github.com/traccar/traccar",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 4038949
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/c3be37febe85bbaa69b7112f6d9a04b19b8b9253",
        "sha": "c3be37febe85bbaa69b7112f6d9a04b19b8b9253",
        "branchName": "master",
        "date": "May 31, 2017 11:11:00 AM",
        "repoName": "traccar/traccar"
      },
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/62028d2d507f54ed50962bdb9dfb027baccb5e1c",
        "sha": "62028d2d507f54ed50962bdb9dfb027baccb5e1c",
        "branchName": "master",
        "date": "May 31, 2017 11:07:43 AM",
        "repoName": "traccar/traccar"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/traccar-traccar-237845618-237846623\n",
    "projectMetrics": {
      "numberSourceFiles": 531,
      "numberLibrariesFailingModule": 96,
      "numberTestFiles": 218,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 3,
        "numberDeleted": 2
      }
    },
    "diff": "diff --git a/src/org/traccar/protocol/WatchProtocolDecoder.java b/src/org/traccar/protocol/WatchProtocolDecoder.java\nindex f0d06a3cc3..ad43215a27 100644\n--- a/src/org/traccar/protocol/WatchProtocolDecoder.java\n+++ b/src/org/traccar/protocol/WatchProtocolDecoder.java\n@@ -65,7 +65,7 @@ public class WatchProtocolDecoder extends BaseProtocolDecoder {\n             .number(\"d+,\")                       // tumbles\n             .number(\"(x+),\")                     // status\n             .expression(\"([^\\\\]]*)\")             // cell and wifi\n-            .text(\"]\").optional()\n+            .text(\"]\")\n             .compile();\n \n     private void sendResponse(Channel channel, String manufacturer, String id, String content) {\n@@ -160,7 +160,8 @@ public class WatchProtocolDecoder extends BaseProtocolDecoder {\n \n                     getLastLocation(position, null);\n \n-                    position.set(Position.KEY_BATTERY_LEVEL, Integer.parseInt(values[3]));\n+                    position.set(Position.KEY_BATTERY_LEVEL,\n+                            Integer.parseInt(values[3].substring(0, values[3].length() - 1)));\n \n                     return position;\n                 }\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 193874280,
        "hostName": "local",
        "totalMemory": 382205952,
        "numberCPU": 4
      },
      "reproductionDateEnd": "Oct 10, 2018 2:45:09 PM",
      "projectRootPomPath": "./workspace/traccar/traccar/237845618/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            1,
            0,
            0,
            0,
            146
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 147
        },
        "testing": {
          "stepDurations": [
            8
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 8
        },
        "cloning": {
          "stepDurations": [
            22
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 22
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 2:41:18 PM",
      "totalDuration": 223
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 80,
        "numberRunning": 83,
        "numberFailing": 0,
        "numberErroring": 3,
        "failures": [
          {
            "failureName": "java.lang.NullPointerException",
            "isError": true,
            "occurrences": 3
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/2018swecapstone/h2ms/356638992",
      "failingClasses": [
        {
          "numberPassing": 79,
          "numberRunning": 82,
          "testClass": "edu.harvard.h2ms.web.init.H2msRestUtilsTest",
          "numberFailing": 0,
          "numberErroring": 3,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.NullPointerException",
          "testMethod": "test_format_quarter_invalid_values_result_in_nulls",
          "isError": true,
          "testClass": "edu.harvard.h2ms.web.init.H2msRestUtilsTest"
        },
        {
          "failureName": "java.lang.NullPointerException",
          "testMethod": "test_format_month_invalid_values_result_in_null",
          "isError": true,
          "testClass": "edu.harvard.h2ms.web.init.H2msRestUtilsTest"
        },
        {
          "failureName": "java.lang.NullPointerException",
          "testMethod": "test_format_week_invalid_values_result_in_null",
          "isError": true,
          "testClass": "edu.harvard.h2ms.web.init.H2msRestUtilsTest"
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/2018swecapstone/h2ms/builds/356666847",
        "date": "Mar 22, 2018 2:42:47 AM",
        "id": 356666847
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/2018swecapstone/h2ms/builds/356638992",
        "date": "Mar 22, 2018 1:07:15 AM",
        "id": 356638992
      }
    },
    "repository": {
      "name": "2018swecapstone-h2ms",
      "url": "https://github.com/2018swecapstone/h2ms",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 121564633
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/2018swecapstone/h2ms/commit/05577a3f1105af6c6ed55d1e05258de01a3d7d7b",
        "sha": "05577a3f1105af6c6ed55d1e05258de01a3d7d7b",
        "branchName": "backend",
        "date": "Mar 22, 2018 2:39:46 AM",
        "repoName": "2018swecapstone/h2ms"
      },
      "buggyBuild": {
        "url": "http://github.com/2018swecapstone/h2ms/commit/fb8ebc2c2ecc8aba60da852a48e076ff1312c9eb",
        "sha": "fb8ebc2c2ecc8aba60da852a48e076ff1312c9eb",
        "branchName": "backend",
        "date": "Mar 22, 2018 1:04:15 AM",
        "repoName": "2018swecapstone/h2ms"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/2018swecapstone-h2ms-356638992-356666847\n",
    "projectMetrics": {
      "numberSourceFiles": 100,
      "numberLibrariesFailingModule": 123,
      "numberTestFiles": 4,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 13,
        "numberDeleted": 24
      }
    },
    "diff": "diff --git a/src/main/java/edu/harvard/h2ms/service/utils/H2msRestUtils.java b/src/main/java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\nindex e6056ecf2f..ab44c78ff9 100644\n--- a/src/main/java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n+++ b/src/main/java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n@@ -19,7 +19,8 @@ public class H2msRestUtils {\n      *      \"2018-03-21T17:58:05.742+0000\"  --> \"March (2018)\"\n      * @param events\n      * @param timeframe\n-     * @return\n+     * @return - when events are emptys a null string list is returned\n+     *         - when timeframe is not a valid value a null string list is returned\n      */\n     public static List<String> extractParsedTimestamps(List<Event> events, String timeframe){\n         if(events.isEmpty()) {\n@@ -49,6 +50,15 @@ public class H2msRestUtils {\n     }\n \n     public static String formatMonth(Integer month, Integer year){\n+        // Null cases\n+        if (month == null || year == null)\n+            return null;\n+\n+        // Invalid value cases\n+        if(month < 0 || month > 11 || year < 1)\n+            return null;\n+\n+        // Format Month\n         if(month.equals(0)){\n             return \"January \" + \"(\" + year + \")\";\n         } else if(month.equals(1)){\n@@ -71,20 +81,29 @@ public class H2msRestUtils {\n             return \"October \" + \"(\" + year + \")\";\n         } else if(month.equals(10)){\n             return \"November \" + \"(\" + year + \")\";\n-        } else if(month.equals(11)){\n+        } else if (month.equals(11)){\n             return \"December \" + \"(\" + year + \")\";\n         } else {\n-            return \"\";\n+            return null;\n         }\n \n     }\n \n     public static String formatWeek(Integer week, Integer year){\n \n-        // Special cases (ie. 11, 12, 13 are postfixed with 'th')\n+        // Null cases\n+        if(week == null || year == null)\n+                return null;\n+\n+        // Invalid value cases\n+        if(week < 1 || week > 52 || year < 1)\n+            return null;\n+\n+        // Format Week for special cases (ie. 11, 12, 13 are postfixed with 'th')\n         if(week == 11 || week == 12 || week == 13)\n             return String.valueOf(week) + \"th (\" + year + \")\";\n \n+        // Format Week\n         char digit;\n         if(week.toString().length() == 2){\n             digit = week.toString().charAt(1);\n@@ -103,6 +122,16 @@ public class H2msRestUtils {\n     }\n \n     public static String formatQuarter(Integer month, Integer year){\n+\n+        // Null cases\n+        if(month == null || year == null)\n+             return null;\n+\n+        // Invalid value cases\n+        if(month < 0 || month > 11 || year < 1)\n+            return null;\n+\n+        // Format month\n         if (month == 0 || month == 1 || month == 2 ) {\n             return \"Q1 (\" + year + \")\";\n         } else if (month == 3 || month == 4 || month == 5 ) {\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 239707528,
        "hostName": "spirals-bears",
        "totalMemory": 392691712,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Sep 1, 2018 7:33:47 AM",
      "projectRootPomPath": "./workspace/2018swecapstone/h2ms/356638992/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            2,
            0,
            0,
            62
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 64
        },
        "testing": {
          "stepDurations": [
            30
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 30
        },
        "cloning": {
          "stepDurations": [
            3
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 3
        }
      },
      "reproductionDateBeginning": "Sep 1, 2018 7:31:16 AM",
      "totalDuration": 145
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 102,
        "numberRunning": 104,
        "numberFailing": 1,
        "numberErroring": 1,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 1
          },
          {
            "failureName": "org.springframework.security.core.userdetails.UsernameNotFoundException",
            "isError": true,
            "occurrences": 1
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/2018swecapstone/h2ms/363210218",
      "failingClasses": [
        {
          "numberPassing": 2,
          "numberRunning": 3,
          "testClass": "edu.harvard.h2ms.service.UserDetailsServiceTest",
          "numberFailing": 0,
          "numberErroring": 1,
          "numberSkipping": 0
        },
        {
          "numberPassing": 5,
          "numberRunning": 6,
          "testClass": "edu.harvard.h2ms.domain.core.UserTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testEmailIsLowerCase",
          "testClass": "edu.harvard.h2ms.domain.core.UserTest",
          "detail": "\nExpected: is \"jqadams@h2ms.org\"\n     but: was \"JqAdAmS@h2Ms.OrG\"",
          "isError": false
        },
        {
          "failureName": "org.springframework.security.core.userdetails.UsernameNotFoundException",
          "testMethod": "testLoadUserByUsernameIsCaseInsensitive",
          "testClass": "edu.harvard.h2ms.service.UserDetailsServiceTest",
          "detail": "Unknown user: JqAdAmS@h2Ms.oRg",
          "isError": true
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/2018swecapstone/h2ms/builds/363627522",
        "date": "Apr 8, 2018 1:46:48 AM",
        "id": 363627522
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/2018swecapstone/h2ms/builds/363210218",
        "date": "Apr 6, 2018 7:14:25 PM",
        "id": 363210218
      }
    },
    "repository": {
      "name": "2018swecapstone-h2ms",
      "url": "https://github.com/2018swecapstone/h2ms",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 121564633
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/2018swecapstone/h2ms/commit/ef42b1078bd7f6699a5c47d01627360e03fc1705",
        "sha": "ef42b1078bd7f6699a5c47d01627360e03fc1705",
        "branchName": "master",
        "date": "Apr 8, 2018 1:43:06 AM",
        "repoName": "2018swecapstone/h2ms"
      },
      "buggyBuild": {
        "url": "http://github.com/2018swecapstone/h2ms/commit/f5e7c88086227b56f4eee5c7e456fd1acc1a4f95",
        "sha": "f5e7c88086227b56f4eee5c7e456fd1acc1a4f95",
        "branchName": "master",
        "date": "Apr 6, 2018 7:10:41 PM",
        "repoName": "2018swecapstone/h2ms"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/2018swecapstone-h2ms-363210218-363627522\n",
    "projectMetrics": {
      "numberSourceFiles": 100,
      "numberLibrariesFailingModule": 131,
      "numberTestFiles": 20,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 2,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 4,
        "numberDeleted": 3
      }
    },
    "diff": "diff --git a/src/main/java/edu/harvard/h2ms/domain/core/User.java b/src/main/java/edu/harvard/h2ms/domain/core/User.java\nindex db6f76aa1f..ff0d57fd67 100644\n--- a/src/main/java/edu/harvard/h2ms/domain/core/User.java\n+++ b/src/main/java/edu/harvard/h2ms/domain/core/User.java\n@@ -94,7 +94,7 @@ public class User implements UserDetails {\n         this.firstName = firstName;\r\n         this.middleName = middleName;\r\n         this.lastName = lastName;\r\n-        this.email = email;\r\n+        setEmail(email);\r\n         this.type = type;\r\n         setPassword(password);\r\n     }\r\n@@ -147,7 +147,8 @@ public class User implements UserDetails {\n     }\r\n \r\n     public void setEmail(String email) {\r\n-        this.email = email;\r\n+    \tif(email != null)\r\n+    \t\tthis.email = email.toLowerCase();\r\n     }\r\n \r\n     public String getNotificationFrequency() {\r\ndiff --git a/src/main/java/edu/harvard/h2ms/service/UserDetailsServiceImpl.java b/src/main/java/edu/harvard/h2ms/service/UserDetailsServiceImpl.java\nindex 66f61f304e..7288dfa38d 100644\n--- a/src/main/java/edu/harvard/h2ms/service/UserDetailsServiceImpl.java\n+++ b/src/main/java/edu/harvard/h2ms/service/UserDetailsServiceImpl.java\n@@ -16,7 +16,7 @@ public class UserDetailsServiceImpl implements UserDetailsService {\n \r\n     @Override\r\n     public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {\r\n-        User user = userRepository.findOneByEmail(username);\r\n+        User user = userRepository.findOneByEmail(username.toLowerCase());\r\n         \r\n         if (user == null) {\r\n             throw new UsernameNotFoundException(String.format(\"Unknown user: %s\", username));\r\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 326080760,
        "hostName": "spirals-bears",
        "totalMemory": 408944640,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Sep 3, 2018 1:52:24 PM",
      "projectRootPomPath": "./workspace/2018swecapstone/h2ms/363210218/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            1,
            0,
            0,
            64
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 65
        },
        "testing": {
          "stepDurations": [
            73
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 73
        },
        "cloning": {
          "stepDurations": [
            5
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 5
        }
      },
      "reproductionDateBeginning": "Sep 3, 2018 1:48:17 PM",
      "totalDuration": 242
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1949,
        "numberRunning": 1952,
        "numberFailing": 3,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "junit.framework.AssertionFailedError",
            "isError": false,
            "occurrences": 3
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/Activiti/Activiti/357660134/modules/activiti-engine",
      "failingClasses": [
        {
          "numberPassing": 34,
          "numberRunning": 35,
          "testClass": "org.activiti.engine.test.bpmn.event.signal.SignalEventTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        },
        {
          "numberPassing": 9,
          "numberRunning": 10,
          "testClass": "org.activiti.engine.test.bpmn.event.timer.BoundaryTimerNonInterruptingEventTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        },
        {
          "numberPassing": 9,
          "numberRunning": 10,
          "testClass": "org.activiti.engine.test.bpmn.event.message.MessageBoundaryEventTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "junit.framework.AssertionFailedError",
          "testMethod": "testTimerOnUserTask",
          "testClass": "org.activiti.engine.test.bpmn.event.timer.BoundaryTimerNonInterruptingEventTest",
          "detail": "Activity should have not ended yet",
          "isError": false
        },
        {
          "failureName": "junit.framework.AssertionFailedError",
          "testMethod": "testSignalOnUserTask",
          "testClass": "org.activiti.engine.test.bpmn.event.signal.SignalEventTest",
          "detail": "Activity should have not ended yet",
          "isError": false
        },
        {
          "failureName": "junit.framework.AssertionFailedError",
          "testMethod": "testMessageOnUserTask",
          "testClass": "org.activiti.engine.test.bpmn.event.message.MessageBoundaryEventTest",
          "detail": "Activity should have not ended yet",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/Activiti/Activiti/builds/359342518",
        "date": "Mar 28, 2018 2:35:48 PM",
        "id": 359342518
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/Activiti/Activiti/builds/357660134",
        "date": "Mar 24, 2018 2:24:22 AM",
        "id": 357660134
      }
    },
    "repository": {
      "name": "Activiti-Activiti",
      "url": "https://github.com/Activiti/Activiti",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 5793738
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/Activiti/Activiti/commit/78b6b5f380d0bee2864b71cb5d2b65ec6536943a",
        "sha": "78b6b5f380d0bee2864b71cb5d2b65ec6536943a",
        "branchName": "5.x",
        "date": "Mar 28, 2018 2:33:35 PM",
        "repoName": "Activiti/Activiti"
      },
      "buggyBuild": {
        "url": "http://github.com/Activiti/Activiti/commit/8ddd177b8f70f6e25af810096aa43aaf87d28af2",
        "sha": "8ddd177b8f70f6e25af810096aa43aaf87d28af2",
        "branchName": "5.x",
        "date": "Mar 24, 2018 2:22:12 AM",
        "repoName": "Activiti/Activiti"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/Activiti-Activiti-357660134-359342518\n",
    "projectMetrics": {
      "numberSourceFiles": 1286,
      "numberLibrariesFailingModule": 61,
      "numberTestFiles": 482,
      "numberModules": 8
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 5,
        "numberDeleted": 24
      }
    },
    "diff": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/history/handler/ActivityInstanceEndHandler.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/history/handler/ActivityInstanceEndHandler.java\nindex 3828d89940..8ca8dcadff 100644\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/history/handler/ActivityInstanceEndHandler.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/history/handler/ActivityInstanceEndHandler.java\n@@ -15,17 +15,36 @@ package org.activiti.engine.impl.history.handler;\n \n import org.activiti.engine.delegate.DelegateExecution;\n import org.activiti.engine.delegate.ExecutionListener;\n+import org.activiti.engine.impl.bpmn.behavior.BoundaryEventActivityBehavior;\n import org.activiti.engine.impl.context.Context;\n import org.activiti.engine.impl.persistence.entity.ExecutionEntity;\n+import org.activiti.engine.impl.pvm.delegate.ActivityBehavior;\n+import org.activiti.engine.impl.pvm.process.TransitionImpl;\n+import org.activiti.engine.impl.pvm.runtime.InterpretableExecution;\n \n \n /**\n  * @author Tom Baeyens\n  */\n public class ActivityInstanceEndHandler implements ExecutionListener {\n-\n-  public void notify(DelegateExecution execution) {\n-    Context.getCommandContext().getHistoryManager()\n-      .recordActivityEnd((ExecutionEntity) execution);\n-  }\n+    \n+    public void notify(DelegateExecution execution) {\n+        if (!isSourceTransitionNotExecutionActivityAndNonInterrupting((ExecutionEntity) execution)) {\n+            Context.getCommandContext().getHistoryManager()\n+                    .recordActivityEnd((ExecutionEntity) execution);\n+        }\n+    }\n+    \n+    private boolean isSourceTransitionNotExecutionActivityAndNonInterrupting(InterpretableExecution execution) {\n+        TransitionImpl transition = execution.getTransition();\n+        if (transition != null) {\n+            ActivityBehavior activityBehavior = transition.getSource().getActivityBehavior();\n+        \n+            return (!(execution.getActivity().getId().equals(execution.getTransition().getSource().getId())) &&\n+                    activityBehavior instanceof BoundaryEventActivityBehavior &&\n+                    !(((BoundaryEventActivityBehavior) activityBehavior).isInterrupting()));\n+        }\n+        return false;\n+    }\n }\n+\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 150557096,
        "hostName": "spirals-bears",
        "totalMemory": 588775424,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Sep 1, 2018 8:02:39 AM",
      "projectRootPomPath": "./workspace/Activiti/Activiti/357660134/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            4,
            3,
            0,
            1,
            59
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 67
        },
        "testing": {
          "stepDurations": [
            345
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 345
        },
        "cloning": {
          "stepDurations": [
            31
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 31
        }
      },
      "reproductionDateBeginning": "Sep 1, 2018 7:48:25 AM",
      "totalDuration": 847
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 432,
        "numberRunning": 433,
        "numberFailing": 0,
        "numberErroring": 1,
        "failures": [
          {
            "failureName": "java.lang.IllegalArgumentException",
            "isError": true,
            "occurrences": 1
          }
        ],
        "numberSkipping": 2
      },
      "failingModule": "/root/workspace/aicis/fresco/326352434/demos/common",
      "failingClasses": [
        {
          "numberPassing": 21,
          "numberRunning": 22,
          "testClass": "dk.alexandra.fresco.demo.TestCmdLineUtil",
          "numberFailing": 0,
          "numberErroring": 1,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.IllegalArgumentException",
          "testMethod": "testSpdzAritmeticStaticFromCmdLine",
          "testClass": "dk.alexandra.fresco.demo.TestCmdLineUtil",
          "detail": "Error while parsing arguments: IOException accessing store name: src/test/resources/spdz/SPDZ_1_1_0_SSK",
          "isError": true
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/aicis/fresco/builds/326420099",
        "date": "Jan 8, 2018 4:58:26 PM",
        "id": 326420099
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/aicis/fresco/builds/326352434",
        "date": "Jan 8, 2018 2:20:20 PM",
        "id": 326352434
      }
    },
    "repository": {
      "name": "aicis-fresco",
      "url": "https://github.com/aicis/fresco",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 46789213
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/aicis/fresco/commit/2303015379b6694bfa3237548bd8a8f7cd3ca15c",
        "sha": "2303015379b6694bfa3237548bd8a8f7cd3ca15c",
        "branchName": "demos-test-coverage",
        "date": "Jan 8, 2018 4:43:27 PM",
        "repoName": "aicis/fresco"
      },
      "buggyBuild": {
        "url": "http://github.com/aicis/fresco/commit/1a046a89f079cecc610434780bb8956ba0b09552",
        "sha": "1a046a89f079cecc610434780bb8956ba0b09552",
        "branchName": "demos-test-coverage",
        "date": "Jan 8, 2018 2:03:53 PM",
        "repoName": "aicis/fresco"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/aicis-fresco-326352434-326420099\n",
    "projectMetrics": {
      "numberSourceFiles": 311,
      "numberLibrariesFailingModule": 20,
      "numberTestFiles": 137,
      "numberModules": 12
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 12,
        "numberDeleted": 3
      }
    },
    "diff": "diff --git a/demos/common/src/main/java/dk/alexandra/fresco/demo/cli/CmdLineProtocolSuite.java b/demos/common/src/main/java/dk/alexandra/fresco/demo/cli/CmdLineProtocolSuite.java\nindex ea3571f48d..3f77a16c9a 100644\n--- a/demos/common/src/main/java/dk/alexandra/fresco/demo/cli/CmdLineProtocolSuite.java\n+++ b/demos/common/src/main/java/dk/alexandra/fresco/demo/cli/CmdLineProtocolSuite.java\n@@ -112,27 +112,18 @@ public class CmdLineProtocolSuite {\n     final PreprocessingStrategy strategy = PreprocessingStrategy.valueOf(strat);\n     DataSupplier supplier = null;\n     if (strategy == PreprocessingStrategy.DUMMY) {\n-      supplier = new DummyDataSupplierImpl(myId, noOfPlayers);        \n+      supplier = new DummyDataSupplierImpl(myId, noOfPlayers);\n     }\n     if (strategy == PreprocessingStrategy.STATIC) {\n       String storageName = properties.getProperty(\"spdz.storage\");\n       int noOfThreadsUsed = 1;\n-      // if(storageName == null) {\n-\n       storageName =\n           SpdzStorageConstants.STORAGE_NAME_PREFIX + noOfThreadsUsed + \"_\" + myId + \"_\" + 0\n           + \"_\";\n-      //  } else {\n-      storageName =\n-          \"src/test/resources/\" + SpdzStorageConstants.STORAGE_NAME_PREFIX + noOfThreadsUsed \n-          + \"_\" + myId + \"_\" + 0 + \"_\";\n-      //      }\n-      // DataSupplierImpl d = new DataSupplierImpl(new FilebasedStreamedStorageImpl(new InMemoryStorage()), \"test\", 1);\n-      //   System.out.println(d.getClass().getClassLoader().getResourceAsStream(storageName));\n \n       supplier = new DataSupplierImpl(new FilebasedStreamedStorageImpl(\n-          new InMemoryStorage()), storageName, noOfPlayers);        \n-    }      \n+          new InMemoryStorage()), storageName, noOfPlayers);\n+    }\n \n     SpdzStorage store = new SpdzStorageImpl(supplier);\n     try {\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 338517720,
        "hostName": "spirals-bears",
        "totalMemory": 420478976,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Aug 19, 2018 2:25:00 AM",
      "projectRootPomPath": "./workspace/aicis/fresco/326352434/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            84
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 84
        },
        "testing": {
          "stepDurations": [
            945
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 945
        },
        "cloning": {
          "stepDurations": [
            9
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 9
        }
      },
      "reproductionDateBeginning": "Aug 19, 2018 1:47:52 AM",
      "totalDuration": 2221
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 383,
        "numberRunning": 384,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/aicis/fresco/330883035/tools/ot",
      "failingClasses": [
        {
          "numberPassing": 2,
          "numberRunning": 3,
          "testClass": "dk.alexandra.fresco.tools.cointossing.TestCoinTossing",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testDoubleInit",
          "testClass": "dk.alexandra.fresco.tools.cointossing.TestCoinTossing",
          "detail": "expected:<Already initialized> but was:<null>",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/aicis/fresco/builds/330923179",
        "date": "Jan 19, 2018 7:08:10 PM",
        "id": 330923179
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/aicis/fresco/builds/330883035",
        "date": "Jan 19, 2018 5:12:33 PM",
        "id": 330883035
      }
    },
    "repository": {
      "name": "aicis-fresco",
      "url": "https://github.com/aicis/fresco",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 46789213
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/aicis/fresco/commit/5f1d1d639b0f90445b6e2d34efc175e5f698a77f",
        "sha": "5f1d1d639b0f90445b6e2d34efc175e5f698a77f",
        "branchName": "mascot-preprocessing",
        "date": "Jan 19, 2018 6:48:10 PM",
        "repoName": "aicis/fresco"
      },
      "buggyBuild": {
        "url": "http://github.com/aicis/fresco/commit/cb5ed623b9d9af706ffaf30f2f17163832f0836e",
        "sha": "cb5ed623b9d9af706ffaf30f2f17163832f0836e",
        "branchName": "mascot-preprocessing",
        "date": "Jan 19, 2018 5:06:20 PM",
        "repoName": "aicis/fresco"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/aicis-fresco-330883035-330923179\n",
    "projectMetrics": {
      "numberSourceFiles": 378,
      "numberLibrariesFailingModule": 15,
      "numberTestFiles": 205,
      "numberModules": 15
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 3,
        "numberDeleted": 2
      }
    },
    "diff": "diff --git a/core/src/main/java/dk/alexandra/fresco/framework/util/StrictBitVector.java b/core/src/main/java/dk/alexandra/fresco/framework/util/StrictBitVector.java\nindex 5bb446fc89..fd63832edd 100644\n--- a/core/src/main/java/dk/alexandra/fresco/framework/util/StrictBitVector.java\n+++ b/core/src/main/java/dk/alexandra/fresco/framework/util/StrictBitVector.java\n@@ -114,7 +114,8 @@ public class StrictBitVector implements BitVector {\n    */\n   @Override\n   public byte[] toByteArray() {\n-    return bits;\n+    // TODO when we return bits directly we run into correlation errors in TestParallelMascots.\n+    return bits.clone();\n   }\n \n   /**\n@@ -215,4 +216,4 @@ public class StrictBitVector implements BitVector {\n       throw new IndexOutOfBoundsException(\"Index out of bounds\");\n     }\n   }\n-}\n\\ No newline at end of file\n+}\n",
    "type": "failing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 380455280,
        "hostName": "spirals-bears",
        "totalMemory": 424673280,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Aug 19, 2018 10:30:35 AM",
      "projectRootPomPath": "./workspace/aicis/fresco/330883035/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            97
          ],
          "stepNames": [
            "CheckoutBuggyBuildCandidate",
            "BuildProjectBuggyBuildCandidate"
          ],
          "nbSteps": 2,
          "totalDuration": 97
        },
        "testing": {
          "stepDurations": [
            347
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidate"
          ],
          "nbSteps": 1,
          "totalDuration": 347
        },
        "cloning": {
          "stepDurations": [
            9
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 9
        }
      },
      "reproductionDateBeginning": "Aug 19, 2018 9:59:32 AM",
      "totalDuration": 1857
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 645,
        "numberRunning": 646,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 2
      },
      "failingModule": "/root/workspace/aicis/fresco/335666803/suite/spdz",
      "failingClasses": [
        {
          "numberPassing": 0,
          "numberRunning": 1,
          "testClass": "dk.alexandra.fresco.suite.spdz.storage.TestSpdzConfigurableDataSupplier",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testGetNextTriple",
          "testClass": "dk.alexandra.fresco.suite.spdz.storage.TestSpdzConfigurableDataSupplier",
          "detail": "expected:<247> but was:<48>",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/aicis/fresco/builds/335692003",
        "date": "Jan 31, 2018 5:22:45 PM",
        "id": 335692003
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/aicis/fresco/builds/335666803",
        "date": "Jan 31, 2018 4:33:31 PM",
        "id": 335666803
      }
    },
    "repository": {
      "name": "aicis-fresco",
      "url": "https://github.com/aicis/fresco",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 46789213
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/aicis/fresco/commit/84f3c14ca7daf9105c4ca89c90a2ebb276b0be40",
        "sha": "84f3c14ca7daf9105c4ca89c90a2ebb276b0be40",
        "branchName": "226-dummy-supplier",
        "date": "Jan 31, 2018 5:04:21 PM",
        "repoName": "aicis/fresco"
      },
      "buggyBuild": {
        "url": "http://github.com/aicis/fresco/commit/b523ab08e6af2e7423111f61e2cb938b0cc64cdd",
        "sha": "b523ab08e6af2e7423111f61e2cb938b0cc64cdd",
        "branchName": "226-dummy-supplier",
        "date": "Jan 31, 2018 4:14:00 PM",
        "repoName": "aicis/fresco"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/aicis-fresco-335666803-335692003\n",
    "projectMetrics": {
      "numberSourceFiles": 380,
      "numberLibrariesFailingModule": 18,
      "numberTestFiles": 209,
      "numberModules": 15
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 2,
        "numberDeleted": 2
      }
    },
    "diff": "diff --git a/suite/spdz/src/main/java/dk/alexandra/fresco/suite/spdz/storage/SpdzConfigurableDataSupplier.java b/suite/spdz/src/main/java/dk/alexandra/fresco/suite/spdz/storage/SpdzConfigurableDataSupplier.java\nindex 2065314de2..cf22740f36 100644\n--- a/suite/spdz/src/main/java/dk/alexandra/fresco/suite/spdz/storage/SpdzConfigurableDataSupplier.java\n+++ b/suite/spdz/src/main/java/dk/alexandra/fresco/suite/spdz/storage/SpdzConfigurableDataSupplier.java\n@@ -27,8 +27,8 @@ public class SpdzConfigurableDataSupplier implements SpdzDataSupplier {\n     MultiplicationTripleShares rawTriple = supplier.getMultiplicationTripleShares();\n     return new SpdzTriple(\n         toSpdzElement(rawTriple.getLeft()),\n-        toSpdzElement(rawTriple.getLeft()),\n-        toSpdzElement(rawTriple.getRight()));\n+        toSpdzElement(rawTriple.getRight()),\n+        toSpdzElement(rawTriple.getProduct()));\n   }\n \n   @Override\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 432103040,
        "hostName": "spirals-bears",
        "totalMemory": 495452160,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Aug 21, 2018 8:28:22 PM",
      "projectRootPomPath": "./workspace/aicis/fresco/335666803/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            87
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 87
        },
        "testing": {
          "stepDurations": [
            1252
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 1252
        },
        "cloning": {
          "stepDurations": [
            9
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 9
        }
      },
      "reproductionDateBeginning": "Aug 21, 2018 7:42:49 PM",
      "totalDuration": 2726
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 753,
        "numberRunning": 755,
        "numberFailing": 0,
        "numberErroring": 2,
        "failures": [
          {
            "failureName": "dk.alexandra.fresco.framework.TestFrameworkException",
            "isError": true,
            "occurrences": 2
          }
        ],
        "numberSkipping": 2
      },
      "failingModule": "/root/workspace/aicis/fresco/363993941/suite/spdz",
      "failingClasses": [
        {
          "numberPassing": 8,
          "numberRunning": 9,
          "testClass": "dk.alexandra.fresco.suite.spdz.TestSpdzBasicArithmetic3Parties",
          "numberFailing": 0,
          "numberErroring": 1,
          "numberSkipping": 0
        },
        {
          "numberPassing": 14,
          "numberRunning": 15,
          "testClass": "dk.alexandra.fresco.suite.spdz.TestSpdzBasicArithmetic2Parties",
          "numberFailing": 0,
          "numberErroring": 1,
          "numberSkipping": 1
        }
      ],
      "failureDetails": [
        {
          "failureName": "dk.alexandra.fresco.framework.TestFrameworkException",
          "testMethod": "testInputFromAllMascot",
          "testClass": "dk.alexandra.fresco.suite.spdz.TestSpdzBasicArithmetic3Parties",
          "detail": "TestThread(dk.alexandra.fresco.suite.spdz.SpdzResourcePoolImpl@34fb81bf) threw exception in test (see stderr)",
          "isError": true
        },
        {
          "failureName": "dk.alexandra.fresco.framework.TestFrameworkException",
          "testMethod": "testInputFromAllMascot",
          "testClass": "dk.alexandra.fresco.suite.spdz.TestSpdzBasicArithmetic2Parties",
          "detail": "TestThread(dk.alexandra.fresco.suite.spdz.SpdzResourcePoolImpl@4430ab63) threw exception in test (see stderr)",
          "isError": true
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/aicis/fresco/builds/363994940",
        "date": "Apr 9, 2018 9:54:40 AM",
        "id": 363994940
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/aicis/fresco/builds/363993941",
        "date": "Apr 9, 2018 9:48:28 AM",
        "id": 363993941
      }
    },
    "repository": {
      "name": "aicis-fresco",
      "url": "https://github.com/aicis/fresco",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 46789213
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/aicis/fresco/commit/fbce6a5211e49ee99af4da440bcf79653eba8f29",
        "sha": "fbce6a5211e49ee99af4da440bcf79653eba8f29",
        "branchName": "266-mascot-input-mask-fix",
        "date": "Apr 9, 2018 9:37:34 AM",
        "repoName": "aicis/fresco"
      },
      "buggyBuild": {
        "url": "http://github.com/aicis/fresco/commit/88b105ae0b512a28c957b5478b57021efaa6f4d0",
        "sha": "88b105ae0b512a28c957b5478b57021efaa6f4d0",
        "branchName": "266-mascot-input-mask-fix",
        "date": "Apr 9, 2018 9:32:55 AM",
        "repoName": "aicis/fresco"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/aicis-fresco-363993941-363994940\n",
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 10,
        "numberDeleted": 7
      }
    },
    "type": "failing_passing",
    "diff": "diff --git a/suite/spdz/src/main/java/dk/alexandra/fresco/suite/spdz/storage/SpdzMascotDataSupplier.java b/suite/spdz/src/main/java/dk/alexandra/fresco/suite/spdz/storage/SpdzMascotDataSupplier.java\nindex 13fe3ba22c..66c7dbf3ee 100644\n--- a/suite/spdz/src/main/java/dk/alexandra/fresco/suite/spdz/storage/SpdzMascotDataSupplier.java\n+++ b/suite/spdz/src/main/java/dk/alexandra/fresco/suite/spdz/storage/SpdzMascotDataSupplier.java\n@@ -4,8 +4,8 @@ import dk.alexandra.fresco.framework.network.Network;\n import dk.alexandra.fresco.framework.util.Drbg;\n import dk.alexandra.fresco.framework.util.PaddingAesCtrDrbg;\n import dk.alexandra.fresco.framework.util.StrictBitVector;\n-import dk.alexandra.fresco.suite.spdz.datatypes.SpdzInputMask;\n import dk.alexandra.fresco.suite.spdz.datatypes.SpdzSInt;\n+import dk.alexandra.fresco.suite.spdz.datatypes.SpdzInputMask;\n import dk.alexandra.fresco.suite.spdz.datatypes.SpdzTriple;\n import dk.alexandra.fresco.suite.spdz.preprocessing.MascotFormatConverter;\n import dk.alexandra.fresco.tools.mascot.Mascot;\n@@ -21,6 +21,7 @@ import dk.alexandra.fresco.tools.ot.otextension.RotList;\n import java.math.BigInteger;\n import java.security.SecureRandom;\n import java.util.ArrayDeque;\n+import java.util.HashMap;\n import java.util.Map;\n import java.util.function.Function;\n import java.util.function.Supplier;\n@@ -42,7 +43,7 @@ public class SpdzMascotDataSupplier implements SpdzDataSupplier {\n   private final FieldElement ssk;\n \n   private final ArrayDeque<MultiplicationTriple> triples;\n-  private final ArrayDeque<InputMask> masks;\n+  private final Map<Integer, ArrayDeque<InputMask>> masks;\n   private final ArrayDeque<AuthenticatedElement> randomElements;\n   private final ArrayDeque<AuthenticatedElement> randomBits;\n   private final int prgSeedLength;\n@@ -79,7 +80,10 @@ public class SpdzMascotDataSupplier implements SpdzDataSupplier {\n     this.modulus = modulus;\n     this.preprocessedValues = preprocessedValues;\n     this.triples = new ArrayDeque<>();\n-    this.masks = new ArrayDeque<>();\n+    this.masks = new HashMap<>();\n+    for (int partyId = 1; partyId <= numberOfPlayers; partyId++) {\n+      masks.put(partyId, new ArrayDeque<>());\n+    }\n     this.randomElements = new ArrayDeque<>();\n     this.randomBits = new ArrayDeque<>();\n     this.prgSeedLength = prgSeedLength;\n@@ -147,12 +151,13 @@ public class SpdzMascotDataSupplier implements SpdzDataSupplier {\n   @Override\n   public SpdzInputMask getNextInputMask(int towardPlayerID) {\n     ensureInitialized();\n-    if (masks.isEmpty()) {\n+    ArrayDeque<InputMask> inputMasks = masks.get(towardPlayerID);\n+    if (inputMasks.isEmpty()) {\n       logger.trace(\"Getting another mask batch\");\n-      masks.addAll(mascot.getInputMasks(towardPlayerID, batchSize));\n+      inputMasks.addAll(mascot.getInputMasks(towardPlayerID, batchSize));\n       logger.trace(\"Got another mask batch\");\n     }\n-    return MascotFormatConverter.toSpdzInputMask(masks.pop());\n+    return MascotFormatConverter.toSpdzInputMask(inputMasks.pop());\n   }\n \n   @Override\n",
    "projectMetrics": {
      "numberSourceFiles": 439,
      "numberLibrariesFailingModule": 16,
      "numberTestFiles": 240,
      "numberModules": 15
    },
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 307066856,
        "hostName": "spirals-bears",
        "totalMemory": 432013312,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Sep 2, 2018 10:42:30 PM",
      "projectRootPomPath": "./workspace/aicis/fresco/363993941/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            113
          ],
          "stepNames": [
            "CheckoutBuggyBuildCandidate",
            "BuildProjectBuggyBuildCandidate"
          ],
          "nbSteps": 2,
          "totalDuration": 113
        },
        "testing": {
          "stepDurations": [
            1085
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidate"
          ],
          "nbSteps": 1,
          "totalDuration": 1085
        },
        "cloning": {
          "stepDurations": [
            9
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 9
        }
      },
      "reproductionDateBeginning": "Sep 2, 2018 10:00:11 PM",
      "totalDuration": 2533
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 452,
        "numberRunning": 454,
        "numberFailing": 0,
        "numberErroring": 2,
        "failures": [
          {
            "failureName": "org.junit.runners.model.TestTimedOutException",
            "isError": true,
            "occurrences": 1
          },
          {
            "failureName": "dk.alexandra.fresco.framework.TestFrameworkException",
            "isError": true,
            "occurrences": 1
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/aicis/fresco/370467437/core",
      "failingClasses": [
        {
          "numberPassing": 25,
          "numberRunning": 26,
          "testClass": "dk.alexandra.fresco.framework.network.async.TestAsyncNetwork",
          "numberFailing": 0,
          "numberErroring": 1,
          "numberSkipping": 0
        },
        {
          "numberPassing": 138,
          "numberRunning": 139,
          "testClass": "dk.alexandra.fresco.suite.dummy.arithmetic.TestDummyArithmeticProtocolSuite",
          "numberFailing": 0,
          "numberErroring": 1,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "dk.alexandra.fresco.framework.TestFrameworkException",
          "testMethod": "testGenerateRandomBitMask",
          "testClass": "dk.alexandra.fresco.suite.dummy.arithmetic.TestDummyArithmeticProtocolSuite",
          "detail": "TestThread(dk.alexandra.fresco.suite.dummy.arithmetic.DummyArithmeticResourcePoolImpl@226b70b3) threw exception in test (see stderr)",
          "isError": true
        },
        {
          "failureName": "org.junit.runners.model.TestTimedOutException",
          "testMethod": "testReceiveAfterClose",
          "testClass": "dk.alexandra.fresco.framework.network.async.TestAsyncNetwork",
          "detail": "test timed out after 120000 milliseconds",
          "isError": true
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/aicis/fresco/builds/370477490",
        "date": "Apr 24, 2018 11:24:16 AM",
        "id": 370477490
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/aicis/fresco/builds/370467437",
        "date": "Apr 24, 2018 10:54:54 AM",
        "id": 370467437
      }
    },
    "repository": {
      "name": "aicis-fresco",
      "url": "https://github.com/aicis/fresco",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 46789213
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/aicis/fresco/commit/7a0fc3391f36c444a2a1215f43144f39c923a3f1",
        "sha": "7a0fc3391f36c444a2a1215f43144f39c923a3f1",
        "branchName": "spdz2k-less-than",
        "date": "Apr 24, 2018 11:05:38 AM",
        "repoName": "aicis/fresco"
      },
      "buggyBuild": {
        "url": "http://github.com/aicis/fresco/commit/35049205806bf206f79ed969cd2456bcd9ff6e4c",
        "sha": "35049205806bf206f79ed969cd2456bcd9ff6e4c",
        "branchName": "spdz2k-less-than",
        "date": "Apr 24, 2018 10:37:53 AM",
        "repoName": "aicis/fresco"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/aicis-fresco-370467437-370477490\n",
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 3,
        "numberDeleted": 2
      }
    },
    "type": "passing_passing",
    "diff": "diff --git a/core/src/main/java/dk/alexandra/fresco/framework/value/BigIntegerOIntArithmetic.java b/core/src/main/java/dk/alexandra/fresco/framework/value/BigIntegerOIntArithmetic.java\nindex f0f0e4ecde..6878f56fe0 100644\n--- a/core/src/main/java/dk/alexandra/fresco/framework/value/BigIntegerOIntArithmetic.java\n+++ b/core/src/main/java/dk/alexandra/fresco/framework/value/BigIntegerOIntArithmetic.java\n@@ -18,7 +18,8 @@ public class BigIntegerOIntArithmetic implements OIntArithmetic {\n \n   public BigIntegerOIntArithmetic(OIntFactory factory) {\n     this.factory = factory;\n-    this.twoPowersList = new ArrayList<>();\n+    twoPowersList = new ArrayList<>(1);\n+    twoPowersList.add(() -> new BigIntegerOInt(BigInteger.ONE));\n   }\n \n   @Override\n@@ -41,7 +42,7 @@ public class BigIntegerOIntArithmetic implements OIntArithmetic {\n     if (maxPower > currentLength) {\n       ArrayList<DRes<OInt>> newTwoPowersList = new ArrayList<>(maxPower);\n       newTwoPowersList.addAll(twoPowersList);\n-      BigInteger currentValue = ((BigIntegerOInt) newTwoPowersList.get(currentLength - 1))\n+      BigInteger currentValue = ((BigIntegerOInt) newTwoPowersList.get(currentLength - 1).out())\n           .getValue();\n       while (maxPower > newTwoPowersList.size()) {\n         currentValue = currentValue.shiftLeft(1);\n",
    "projectMetrics": {
      "numberSourceFiles": 454,
      "numberLibrariesFailingModule": 12,
      "numberTestFiles": 248,
      "numberModules": 15
    },
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 290623912,
        "hostName": "spirals-bears",
        "totalMemory": 472907776,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Sep 6, 2018 4:08:08 AM",
      "projectRootPomPath": "./workspace/aicis/fresco/370467437/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            93
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 93
        },
        "testing": {
          "stepDurations": [
            377
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 377
        },
        "cloning": {
          "stepDurations": [
            8
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 8
        }
      },
      "reproductionDateBeginning": "Sep 6, 2018 3:37:32 AM",
      "totalDuration": 1827
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 898,
        "numberRunning": 899,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 2
      },
      "failingModule": "/root/workspace/aicis/fresco/370628089/suite/spdz2k",
      "failingClasses": [
        {
          "numberPassing": 12,
          "numberRunning": 13,
          "testClass": "dk.alexandra.fresco.suite.spdz2k.datatypes.TestCompUInt96",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testConstruct",
          "testClass": "dk.alexandra.fresco.suite.spdz2k.datatypes.TestCompUInt96",
          "detail": "expected:<79228162514264337593543950335> but was:<255>",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/aicis/fresco/builds/370634151",
        "date": "Apr 24, 2018 5:58:03 PM",
        "id": 370634151
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/aicis/fresco/builds/370628089",
        "date": "Apr 24, 2018 5:40:51 PM",
        "id": 370628089
      }
    },
    "repository": {
      "name": "aicis-fresco",
      "url": "https://github.com/aicis/fresco",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 46789213
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/aicis/fresco/commit/fffbc2b8962ba94740c6850a1698e6e86fb8a9c1",
        "sha": "fffbc2b8962ba94740c6850a1698e6e86fb8a9c1",
        "branchName": "spdz2k-less-than",
        "date": "Apr 24, 2018 5:39:03 PM",
        "repoName": "aicis/fresco"
      },
      "buggyBuild": {
        "url": "http://github.com/aicis/fresco/commit/09e537392bd7bf76f6a22e007da6c48d59bac1c7",
        "sha": "09e537392bd7bf76f6a22e007da6c48d59bac1c7",
        "branchName": "spdz2k-less-than",
        "date": "Apr 24, 2018 5:24:47 PM",
        "repoName": "aicis/fresco"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/aicis-fresco-370628089-370634151\n",
    "projectMetrics": {
      "numberSourceFiles": 457,
      "numberLibrariesFailingModule": 13,
      "numberTestFiles": 248,
      "numberModules": 15
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 4,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 3,
        "numberDeleted": 8
      }
    },
    "diff": "diff --git a/suite/spdz2k/src/main/java/dk/alexandra/fresco/suite/spdz2k/datatypes/CompUInt128.java b/suite/spdz2k/src/main/java/dk/alexandra/fresco/suite/spdz2k/datatypes/CompUInt128.java\nindex 8f16046e90..4a69b35896 100644\n--- a/suite/spdz2k/src/main/java/dk/alexandra/fresco/suite/spdz2k/datatypes/CompUInt128.java\n+++ b/suite/spdz2k/src/main/java/dk/alexandra/fresco/suite/spdz2k/datatypes/CompUInt128.java\n@@ -49,7 +49,6 @@ public class CompUInt128 implements CompUInt<UInt64, UInt64, CompUInt128> {\n    */\n   public CompUInt128(BigInteger value) {\n     this(value.shiftRight(64).longValue(), value.shiftRight(32).intValue(), value.intValue());\n-//    this(value.toByteArray(), true);\n   }\n \n   CompUInt128(long high, int mid, int low) {\ndiff --git a/suite/spdz2k/src/main/java/dk/alexandra/fresco/suite/spdz2k/datatypes/CompUInt96.java b/suite/spdz2k/src/main/java/dk/alexandra/fresco/suite/spdz2k/datatypes/CompUInt96.java\nindex d9c15a87da..338f6dc180 100644\n--- a/suite/spdz2k/src/main/java/dk/alexandra/fresco/suite/spdz2k/datatypes/CompUInt96.java\n+++ b/suite/spdz2k/src/main/java/dk/alexandra/fresco/suite/spdz2k/datatypes/CompUInt96.java\n@@ -33,7 +33,7 @@ public class CompUInt96 implements CompUInt<UInt64, UInt32, CompUInt96> {\n   }\n \n   CompUInt96(BigInteger value) {\n-    this(value.toByteArray());\n+    this(value.shiftRight(64).intValue(), value.shiftRight(32).intValue(), value.intValue());\n   }\n \n   CompUInt96(UInt64 value) {\ndiff --git a/suite/spdz2k/src/main/java/dk/alexandra/fresco/suite/spdz2k/datatypes/CompUInt96Factory.java b/suite/spdz2k/src/main/java/dk/alexandra/fresco/suite/spdz2k/datatypes/CompUInt96Factory.java\nindex 1ae2a2c40e..db3eea4c21 100644\n--- a/suite/spdz2k/src/main/java/dk/alexandra/fresco/suite/spdz2k/datatypes/CompUInt96Factory.java\n+++ b/suite/spdz2k/src/main/java/dk/alexandra/fresco/suite/spdz2k/datatypes/CompUInt96Factory.java\n@@ -2,6 +2,7 @@ package dk.alexandra.fresco.suite.spdz2k.datatypes;\n \n import dk.alexandra.fresco.framework.network.serializers.ByteSerializer;\n import dk.alexandra.fresco.suite.spdz2k.util.UIntSerializer;\n+import java.math.BigInteger;\n import java.security.SecureRandom;\n \n public class CompUInt96Factory implements CompUIntFactory<CompUInt96> {\n@@ -13,6 +14,11 @@ public class CompUInt96Factory implements CompUIntFactory<CompUInt96> {\n     return new CompUInt96(bytes);\n   }\n \n+  @Override\n+  public CompUInt96 createFromBigInteger(BigInteger value) {\n+    return value == null ? null : new CompUInt96(value);\n+  }\n+\n   @Override\n   public CompUInt96 createRandom() {\n     byte[] bytes = new byte[12];\ndiff --git a/suite/spdz2k/src/main/java/dk/alexandra/fresco/suite/spdz2k/datatypes/CompUIntFactory.java b/suite/spdz2k/src/main/java/dk/alexandra/fresco/suite/spdz2k/datatypes/CompUIntFactory.java\nindex dae78427e1..0bb6c0c102 100644\n--- a/suite/spdz2k/src/main/java/dk/alexandra/fresco/suite/spdz2k/datatypes/CompUIntFactory.java\n+++ b/suite/spdz2k/src/main/java/dk/alexandra/fresco/suite/spdz2k/datatypes/CompUIntFactory.java\n@@ -92,7 +92,7 @@ public interface CompUIntFactory<CompT extends CompUInt<?, ?, CompT>> extends OI\n    * Creates element whose value is zero.\n    */\n   default CompT zero() {\n-    return createFromBytes(new byte[getCompositeBitLength() / Byte.SIZE]);\n+    return createFromBigInteger(BigInteger.ZERO);\n   }\n \n   default CompT one() {\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 237633784,
        "hostName": "spirals-bears",
        "totalMemory": 424148992,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Sep 6, 2018 3:56:19 AM",
      "projectRootPomPath": "./workspace/aicis/fresco/370628089/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            97
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 97
        },
        "testing": {
          "stepDurations": [
            1134
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 1134
        },
        "cloning": {
          "stepDurations": [
            8
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 8
        }
      },
      "reproductionDateBeginning": "Sep 6, 2018 3:13:37 AM",
      "totalDuration": 2554
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1158,
        "numberRunning": 1159,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "junit.framework.AssertionFailedError",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 103
      },
      "failingModule": "/root/workspace/apache/incubator-dubbo/329355311/dubbo-cluster",
      "failingClasses": [
        {
          "numberPassing": 11,
          "numberRunning": 12,
          "testClass": "com.alibaba.dubbo.rpc.cluster.router.condition.ConditionRouterTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "junit.framework.AssertionFailedError",
          "testMethod": "testRoute_matchFilter",
          "testClass": "com.alibaba.dubbo.rpc.cluster.router.condition.ConditionRouterTest",
          "detail": "expected:<1> but was:<0>",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/apache/incubator-dubbo/builds/329773929",
        "date": "Jan 17, 2018 11:28:17 AM",
        "id": 329773929
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/apache/incubator-dubbo/builds/329355311",
        "date": "Jan 16, 2018 9:14:48 AM",
        "id": 329355311
      }
    },
    "repository": {
      "name": "apache-incubator-dubbo",
      "url": "https://github.com/apache/incubator-dubbo",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 4710920
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/apache/incubator-dubbo/commit/5af18786003e832b0abb280b6f57322b4e7e9784",
        "sha": "5af18786003e832b0abb280b6f57322b4e7e9784",
        "branchName": "2.5.x",
        "date": "Jan 17, 2018 9:16:40 AM",
        "repoName": "apache/incubator-dubbo"
      },
      "buggyBuild": {
        "url": "http://github.com/apache/incubator-dubbo/commit/b309f792f8b5ebfea16b4cc13720e35306d94b38",
        "sha": "b309f792f8b5ebfea16b4cc13720e35306d94b38",
        "branchName": "2.5.x",
        "date": "Jan 16, 2018 8:43:22 AM",
        "repoName": "apache/incubator-dubbo"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/apache-incubator-dubbo-329355311-329773929\n",
    "projectMetrics": {
      "numberSourceFiles": 927,
      "numberLibrariesFailingModule": 12,
      "numberTestFiles": 399,
      "numberModules": 61
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 0,
        "numberDeleted": 3
      }
    },
    "diff": "diff --git a/dubbo-cluster/src/main/java/com/alibaba/dubbo/rpc/cluster/router/condition/ConditionRouter.java b/dubbo-cluster/src/main/java/com/alibaba/dubbo/rpc/cluster/router/condition/ConditionRouter.java\nindex 0e88557c99..c3b58452ea 100644\n--- a/dubbo-cluster/src/main/java/com/alibaba/dubbo/rpc/cluster/router/condition/ConditionRouter.java\n+++ b/dubbo-cluster/src/main/java/com/alibaba/dubbo/rpc/cluster/router/condition/ConditionRouter.java\n@@ -204,6 +204,9 @@ public class ConditionRouter implements Router, Comparable<Router> {\n                 sampleValue = invocation.getMethodName();\r\n             } else {\r\n                 sampleValue = sample.get(key);\r\n+                if (sampleValue == null) {\r\n+                    sampleValue = sample.get(Constants.DEFAULT_KEY_PREFIX + key);\r\n+                }\r\n             }\r\n             if (sampleValue != null) {\r\n                 if (!matchPair.getValue().isMatch(sampleValue, param)) {\r\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 238348728,
        "hostName": "spirals-bears",
        "totalMemory": 473432064,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Aug 19, 2018 10:26:29 PM",
      "projectRootPomPath": "./workspace/apache/incubator-dubbo/329355311/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            1,
            1,
            0,
            0,
            255
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 257
        },
        "testing": {
          "stepDurations": [
            110
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 110
        },
        "cloning": {
          "stepDurations": [
            9
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 9
        }
      },
      "reproductionDateBeginning": "Aug 19, 2018 10:16:38 PM",
      "totalDuration": 583
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 31,
        "numberRunning": 33,
        "numberFailing": 2,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "junit.framework.AssertionFailedError",
            "isError": false,
            "occurrences": 2
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/apache/incubator-dubbo/347256120/hessian-lite",
      "failingClasses": [
        {
          "numberPassing": 0,
          "numberRunning": 2,
          "testClass": "com.alibaba.com.caucho.hessian.io.LocaleSerializerTest",
          "numberFailing": 2,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "junit.framework.AssertionFailedError",
          "testMethod": "hessian2",
          "testClass": "com.alibaba.com.caucho.hessian.io.LocaleSerializerTest",
          "detail": "expected:<zh-hant_CN> but was:<zh_HANT_CN>",
          "isError": false
        },
        {
          "failureName": "junit.framework.AssertionFailedError",
          "testMethod": "hessian1",
          "testClass": "com.alibaba.com.caucho.hessian.io.LocaleSerializerTest",
          "detail": "expected:<zh-hant_CN> but was:<zh_HANT_CN>",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/apache/incubator-dubbo/builds/347634018",
        "date": "Mar 1, 2018 8:20:29 AM",
        "id": 347634018
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/apache/incubator-dubbo/builds/347256120",
        "date": "Feb 28, 2018 2:09:27 PM",
        "id": 347256120
      }
    },
    "repository": {
      "name": "apache-incubator-dubbo",
      "url": "https://github.com/apache/incubator-dubbo",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 4710920
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/apache/incubator-dubbo/commit/0423219d839404186b8a5ec7dec37f6addeb58d9",
        "sha": "0423219d839404186b8a5ec7dec37f6addeb58d9",
        "branchName": "master",
        "date": "Mar 1, 2018 7:58:01 AM",
        "repoName": "apache/incubator-dubbo"
      },
      "buggyBuild": {
        "url": "http://github.com/apache/incubator-dubbo/commit/3be23d9ac55407e2e2bda49570f7f76943a3b382",
        "sha": "3be23d9ac55407e2e2bda49570f7f76943a3b382",
        "branchName": "master",
        "date": "Feb 27, 2018 1:22:47 PM",
        "repoName": "apache/incubator-dubbo"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/apache-incubator-dubbo-347256120-347634018\n",
    "projectMetrics": {
      "numberSourceFiles": 733,
      "numberLibrariesFailingModule": 6,
      "numberTestFiles": 404,
      "numberModules": 53
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 2,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 60,
        "numberDeleted": 5
      }
    },
    "diff": "diff --git a/hessian-lite/src/main/java/com/alibaba/com/caucho/hessian/io/LocaleHandle.java b/hessian-lite/src/main/java/com/alibaba/com/caucho/hessian/io/LocaleHandle.java\nindex 3b1a547d95..6018184644 100644\n--- a/hessian-lite/src/main/java/com/alibaba/com/caucho/hessian/io/LocaleHandle.java\n+++ b/hessian-lite/src/main/java/com/alibaba/com/caucho/hessian/io/LocaleHandle.java\n@@ -54,64 +54,17 @@ import java.util.Locale;\n  * Handle for a locale object.\n  */\n public class LocaleHandle implements java.io.Serializable, HessianHandle {\n-    private String value;\n-\n-    public LocaleHandle(String locale) {\n-        this.value = locale;\n+    private String language;\n+    private String country;\n+    private String variant;\n+\n+    public LocaleHandle(String language, String country, String variant) {\n+        this.language = language;\n+        this.country = country;\n+        this.variant = variant;\n     }\n \n     private Object readResolve() {\n-        String s = this.value;\n-\n-        if (s == null)\n-            return null;\n-\n-        int len = s.length();\n-        char ch = ' ';\n-\n-        int i = 0;\n-        for (;\n-             i < len && ('a' <= (ch = s.charAt(i)) && ch <= 'z'\n-                     || 'A' <= ch && ch <= 'Z'\n-                     || '0' <= ch && ch <= '9');\n-             i++) {\n-        }\n-\n-        String language = s.substring(0, i);\n-        String country = null;\n-        String var = null;\n-\n-        if (ch == '-' || ch == '_') {\n-            int head = ++i;\n-\n-            for (;\n-                 i < len && ('a' <= (ch = s.charAt(i)) && ch <= 'z'\n-                         || 'A' <= ch && ch <= 'Z'\n-                         || '0' <= ch && ch <= '9');\n-                 i++) {\n-            }\n-\n-            country = s.substring(head, i);\n-        }\n-\n-        if (ch == '-' || ch == '_') {\n-            int head = ++i;\n-\n-            for (;\n-                 i < len && ('a' <= (ch = s.charAt(i)) && ch <= 'z'\n-                         || 'A' <= ch && ch <= 'Z'\n-                         || '0' <= ch && ch <= '9');\n-                 i++) {\n-            }\n-\n-            var = s.substring(head, i);\n-        }\n-\n-        if (var != null)\n-            return new Locale(language, country, var);\n-        else if (country != null)\n-            return new Locale(language, country);\n-        else\n-            return new Locale(language);\n+        return new Locale(language, country, variant);\n     }\n }\ndiff --git a/hessian-lite/src/main/java/com/alibaba/com/caucho/hessian/io/LocaleSerializer.java b/hessian-lite/src/main/java/com/alibaba/com/caucho/hessian/io/LocaleSerializer.java\nindex 86f6cb0f3c..6555e4a6b5 100644\n--- a/hessian-lite/src/main/java/com/alibaba/com/caucho/hessian/io/LocaleSerializer.java\n+++ b/hessian-lite/src/main/java/com/alibaba/com/caucho/hessian/io/LocaleSerializer.java\n@@ -68,7 +68,7 @@ public class LocaleSerializer extends AbstractSerializer {\n         else {\n             Locale locale = (Locale) obj;\n \n-            out.writeObject(new LocaleHandle(locale.toString()));\n+            out.writeObject(new LocaleHandle(locale.getLanguage(), locale.getCountry(), locale.getVariant()));\n         }\n     }\n }\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 272759880,
        "hostName": "spirals-bears",
        "totalMemory": 498597888,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Aug 28, 2018 3:55:04 AM",
      "projectRootPomPath": "./workspace/apache/incubator-dubbo/347256120/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            1,
            2,
            0,
            0,
            338
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 341
        },
        "testing": {
          "stepDurations": [
            8
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 8
        },
        "cloning": {
          "stepDurations": [
            9
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 9
        }
      },
      "reproductionDateBeginning": "Aug 28, 2018 3:43:06 AM",
      "totalDuration": 710
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1265,
        "numberRunning": 1266,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 105
      },
      "failingModule": "/root/workspace/apache/incubator-dubbo/352635276/dubbo-config/dubbo-config-spring",
      "failingClasses": [
        {
          "numberPassing": 0,
          "numberRunning": 1,
          "testClass": "com.alibaba.dubbo.config.spring.util.PropertySourcesUtilsTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testGetSubProperties",
          "testClass": "com.alibaba.dubbo.config.spring.util.PropertySourcesUtilsTest",
          "detail": "expected:<{name=Mercy, age=31}> but was:<{name=Mercy}>",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/apache/incubator-dubbo/builds/352657297",
        "date": "Mar 13, 2018 4:54:34 AM",
        "id": 352657297
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/apache/incubator-dubbo/builds/352635276",
        "date": "Mar 13, 2018 2:59:15 AM",
        "id": 352635276
      }
    },
    "repository": {
      "name": "apache-incubator-dubbo",
      "url": "https://github.com/apache/incubator-dubbo",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 4710920
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/apache/incubator-dubbo/commit/109d064d14260d9b71be1f1fbd3a385053d5fffb",
        "sha": "109d064d14260d9b71be1f1fbd3a385053d5fffb",
        "branchName": "2.5.x",
        "date": "Mar 13, 2018 4:30:22 AM",
        "repoName": "apache/incubator-dubbo"
      },
      "buggyBuild": {
        "url": "http://github.com/apache/incubator-dubbo/commit/04576ff4ffdd5872e738b4e10e3905fe513109d2",
        "sha": "04576ff4ffdd5872e738b4e10e3905fe513109d2",
        "branchName": "2.5.x",
        "date": "Mar 13, 2018 2:42:10 AM",
        "repoName": "apache/incubator-dubbo"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/apache-incubator-dubbo-352635276-352657297\n",
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 3,
        "numberDeleted": 1
      }
    },
    "type": "passing_passing",
    "diff": "diff --git a/dubbo-config/dubbo-config-spring/src/main/java/com/alibaba/dubbo/config/spring/util/PropertySourcesUtils.java b/dubbo-config/dubbo-config-spring/src/main/java/com/alibaba/dubbo/config/spring/util/PropertySourcesUtils.java\nindex c4bc848e2c..fe1c61bbbd 100644\n--- a/dubbo-config/dubbo-config-spring/src/main/java/com/alibaba/dubbo/config/spring/util/PropertySourcesUtils.java\n+++ b/dubbo-config/dubbo-config-spring/src/main/java/com/alibaba/dubbo/config/spring/util/PropertySourcesUtils.java\n@@ -52,9 +52,7 @@ public abstract class PropertySourcesUtils {\n                     if (name.startsWith(normalizedPrefix)) {\n                         String subName = name.substring(normalizedPrefix.length());\n                         Object value = source.getProperty(name);\n-                        if (value instanceof String) {\n-                            subProperties.put(subName, String.valueOf(value));\n-                        }\n+                        subProperties.put(subName, String.valueOf(value));\n                     }\n                 }\n             }\n",
    "projectMetrics": {
      "numberSourceFiles": 929,
      "numberLibrariesFailingModule": 39,
      "numberTestFiles": 410,
      "numberModules": 61
    },
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 255741432,
        "hostName": "spirals-bears",
        "totalMemory": 496500736,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Aug 29, 2018 10:20:25 AM",
      "projectRootPomPath": "./workspace/apache/incubator-dubbo/352635276/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            1,
            1,
            0,
            0,
            244
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 246
        },
        "testing": {
          "stepDurations": [
            169
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 169
        },
        "cloning": {
          "stepDurations": [
            9
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 9
        }
      },
      "reproductionDateBeginning": "Aug 29, 2018 10:09:20 AM",
      "totalDuration": 658
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 753,
        "numberRunning": 754,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "junit.framework.AssertionFailedError",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 7
      },
      "failingModule": "/root/workspace/apache/incubator-dubbo/370383941/dubbo-rpc/dubbo-rpc-dubbo",
      "failingClasses": [
        {
          "numberPassing": 4,
          "numberRunning": 5,
          "testClass": "com.alibaba.dubbo.rpc.protocol.dubbo.DubboInvokerAvilableTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "junit.framework.AssertionFailedError",
          "testMethod": "test_normal_channel_close_wait_gracefully",
          "isError": false,
          "testClass": "com.alibaba.dubbo.rpc.protocol.dubbo.DubboInvokerAvilableTest"
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/apache/incubator-dubbo/builds/370422750",
        "date": "Apr 24, 2018 8:26:37 AM",
        "id": 370422750
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/apache/incubator-dubbo/builds/370383941",
        "date": "Apr 24, 2018 4:41:13 AM",
        "id": 370383941
      }
    },
    "repository": {
      "name": "apache-incubator-dubbo",
      "url": "https://github.com/apache/incubator-dubbo",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 4710920
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/apache/incubator-dubbo/commit/d29052904765d59e549286fc8545bf5b0e760048",
        "sha": "d29052904765d59e549286fc8545bf5b0e760048",
        "branchName": "master",
        "date": "Apr 24, 2018 8:00:32 AM",
        "repoName": "apache/incubator-dubbo"
      },
      "buggyBuild": {
        "url": "http://github.com/apache/incubator-dubbo/commit/d07c64f809361ec629b738ca223c7e89d08c03f4",
        "sha": "d07c64f809361ec629b738ca223c7e89d08c03f4",
        "branchName": "master",
        "date": "Apr 24, 2018 4:21:04 AM",
        "repoName": "apache/incubator-dubbo"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/apache-incubator-dubbo-370383941-370422750\n",
    "projectMetrics": {
      "numberSourceFiles": 733,
      "numberLibrariesFailingModule": 31,
      "numberTestFiles": 480,
      "numberModules": 60
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 3,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 29,
        "numberDeleted": 9
      }
    },
    "diff": "diff --git a/dubbo-config/dubbo-config-api/src/main/java/com/alibaba/dubbo/config/ProtocolConfig.java b/dubbo-config/dubbo-config-api/src/main/java/com/alibaba/dubbo/config/ProtocolConfig.java\nindex 13000a778a..0e7a52431c 100644\n--- a/dubbo-config/dubbo-config-api/src/main/java/com/alibaba/dubbo/config/ProtocolConfig.java\n+++ b/dubbo-config/dubbo-config-api/src/main/java/com/alibaba/dubbo/config/ProtocolConfig.java\n@@ -20,7 +20,6 @@ import com.alibaba.dubbo.common.extension.ExtensionLoader;\n import com.alibaba.dubbo.common.serialize.Serialization;\r\n import com.alibaba.dubbo.common.status.StatusChecker;\r\n import com.alibaba.dubbo.common.threadpool.ThreadPool;\r\n-import com.alibaba.dubbo.common.utils.ConfigUtils;\r\n import com.alibaba.dubbo.config.support.Parameter;\r\n import com.alibaba.dubbo.registry.support.AbstractRegistryFactory;\r\n import com.alibaba.dubbo.remoting.Codec;\r\n@@ -155,14 +154,8 @@ public class ProtocolConfig extends AbstractConfig {\n         if (!destroyed.compareAndSet(false, true)) {\r\n             return;\r\n         }\r\n-        AbstractRegistryFactory.destroyAll();\r\n \r\n-        // Wait for registry notification\r\n-        try {\r\n-            Thread.sleep(ConfigUtils.getServerShutdownTimeout());\r\n-        } catch (InterruptedException e) {\r\n-            logger.warn(\"Interrupted unexpectedly when waiting for registry notification during shutdown process!\");\r\n-        }\r\n+        AbstractRegistryFactory.destroyAll();\r\n \r\n         ExtensionLoader<Protocol> loader = ExtensionLoader.getExtensionLoader(Protocol.class);\r\n         for (String protocolName : loader.getLoadedExtensions()) {\r\ndiff --git a/dubbo-config/dubbo-config-spring/src/main/java/com/alibaba/dubbo/config/spring/AnnotationBean.java b/dubbo-config/dubbo-config-spring/src/main/java/com/alibaba/dubbo/config/spring/AnnotationBean.java\nindex e14fc4b971..bbb75d9efd 100644\n--- a/dubbo-config/dubbo-config-spring/src/main/java/com/alibaba/dubbo/config/spring/AnnotationBean.java\n+++ b/dubbo-config/dubbo-config-spring/src/main/java/com/alibaba/dubbo/config/spring/AnnotationBean.java\n@@ -111,13 +111,18 @@ public class AnnotationBean extends AbstractConfig implements DisposableBean, Be\n \r\n     @Override\r\n     public void destroy() throws Exception {\r\n-        for (ServiceConfig<?> serviceConfig : serviceConfigs) {\r\n-            try {\r\n-                serviceConfig.unexport();\r\n-            } catch (Throwable e) {\r\n-                logger.error(e.getMessage(), e);\r\n-            }\r\n-        }\r\n+\r\n+        //  This will only be called for singleton scope bean, and expected to be called by spring shutdown hook when BeanFactory/ApplicationContext destroys.\r\n+        //  We will guarantee dubbo related resources being released with dubbo shutdown hook.\r\n+\r\n+        //  for (ServiceConfig<?> serviceConfig : serviceConfigs) {\r\n+        //      try {\r\n+        //          serviceConfig.unexport();\r\n+        //      } catch (Throwable e) {\r\n+        //          logger.error(e.getMessage(), e);\r\n+        //      }\r\n+        //  }\r\n+\r\n         for (ReferenceConfig<?> referenceConfig : referenceConfigs.values()) {\r\n             try {\r\n                 referenceConfig.destroy();\r\ndiff --git a/dubbo-remoting/dubbo-remoting-api/src/main/java/com/alibaba/dubbo/remoting/exchange/support/header/HeaderExchangeServer.java b/dubbo-remoting/dubbo-remoting-api/src/main/java/com/alibaba/dubbo/remoting/exchange/support/header/HeaderExchangeServer.java\nindex 2a09c5de1f..2ab32f008d 100644\n--- a/dubbo-remoting/dubbo-remoting-api/src/main/java/com/alibaba/dubbo/remoting/exchange/support/header/HeaderExchangeServer.java\n+++ b/dubbo-remoting/dubbo-remoting-api/src/main/java/com/alibaba/dubbo/remoting/exchange/support/header/HeaderExchangeServer.java\n@@ -29,8 +29,6 @@ import com.alibaba.dubbo.remoting.Server;\n import com.alibaba.dubbo.remoting.exchange.ExchangeChannel;\r\n import com.alibaba.dubbo.remoting.exchange.ExchangeServer;\r\n import com.alibaba.dubbo.remoting.exchange.Request;\r\n-import com.alibaba.dubbo.remoting.exchange.support.DefaultFuture;\r\n-\r\n import java.net.InetSocketAddress;\r\n import java.util.ArrayList;\r\n import java.util.Collection;\r\n@@ -85,7 +83,13 @@ public class HeaderExchangeServer implements ExchangeServer {\n     private boolean isRunning() {\r\n         Collection<Channel> channels = getChannels();\r\n         for (Channel channel : channels) {\r\n-            if (DefaultFuture.hasFuture(channel)) {\r\n+\r\n+            /**\r\n+             *  If there are any client connections,\r\n+             *  our server should be running.\r\n+             */\r\n+\r\n+            if (channel.isConnected()) {\r\n                 return true;\r\n             }\r\n         }\r\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 348655224,
        "hostName": "spirals-bears",
        "totalMemory": 462946304,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Sep 5, 2018 11:46:36 PM",
      "projectRootPomPath": "./workspace/apache/incubator-dubbo/370383941/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            2,
            2,
            0,
            1,
            741
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 746
        },
        "testing": {
          "stepDurations": [
            137
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 137
        },
        "cloning": {
          "stepDurations": [
            9
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 9
        }
      },
      "reproductionDateBeginning": "Sep 5, 2018 11:23:26 PM",
      "totalDuration": 1382
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 631,
        "numberRunning": 635,
        "numberFailing": 0,
        "numberErroring": 4,
        "failures": [
          {
            "failureName": "java.lang.IllegalArgumentException",
            "isError": true,
            "occurrences": 4
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/apache/incubator-servicecomb-java-chassis/330826674/service-registry",
      "failingClasses": [
        {
          "numberPassing": 2,
          "numberRunning": 6,
          "testClass": "org.apache.servicecomb.serviceregistry.api.registry.TestMicroserviceFactory",
          "numberFailing": 0,
          "numberErroring": 4,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.IllegalArgumentException",
          "testMethod": "testSetDescription",
          "testClass": "org.apache.servicecomb.serviceregistry.api.registry.TestMicroserviceFactory",
          "detail": "No compatible method found: setDescription(org.apache.commons.configuration.Configuration$$EnhancerByMockitoWithCGLIB$$b8e33db, org.apache.servicecomb.serviceregistry.api.registry.Microservice)",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "testMethod": "testSetDescriptionOnEmptyDescription",
          "testClass": "org.apache.servicecomb.serviceregistry.api.registry.TestMicroserviceFactory",
          "detail": "No compatible method found: setDescription(org.apache.commons.configuration.Configuration$$EnhancerByMockitoWithCGLIB$$b8e33db, org.apache.servicecomb.serviceregistry.api.registry.Microservice)",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "testMethod": "testSetDescriptionOnBlankDescription",
          "testClass": "org.apache.servicecomb.serviceregistry.api.registry.TestMicroserviceFactory",
          "detail": "No compatible method found: setDescription(org.apache.commons.configuration.Configuration$$EnhancerByMockitoWithCGLIB$$b8e33db, org.apache.servicecomb.serviceregistry.api.registry.Microservice)",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "testMethod": "testSetDescriptionOnNullDescription",
          "testClass": "org.apache.servicecomb.serviceregistry.api.registry.TestMicroserviceFactory",
          "detail": "No compatible method found: setDescription(org.apache.commons.configuration.Configuration$$EnhancerByMockitoWithCGLIB$$b8e33db, org.apache.servicecomb.serviceregistry.api.registry.Microservice)",
          "isError": true
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/apache/incubator-servicecomb-java-chassis/builds/331080091",
        "date": "Jan 20, 2018 6:41:22 AM",
        "id": 331080091
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/apache/incubator-servicecomb-java-chassis/builds/330826674",
        "date": "Jan 20, 2018 12:54:12 AM",
        "id": 330826674
      }
    },
    "repository": {
      "name": "apache-incubator-servicecomb-java-chassis",
      "url": "https://github.com/apache/incubator-servicecomb-java-chassis",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 91674936
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/apache/incubator-servicecomb-java-chassis/commit/cf527379812576622834d1651423b8ec1beec6a7",
        "sha": "cf527379812576622834d1651423b8ec1beec6a7",
        "branchName": "master",
        "date": "Jan 20, 2018 3:32:02 AM",
        "repoName": "apache/incubator-servicecomb-java-chassis"
      },
      "buggyBuild": {
        "url": "http://github.com/apache/incubator-servicecomb-java-chassis/commit/462f2790bd24ce6cfd84e0c8862caff5db0a784a",
        "sha": "462f2790bd24ce6cfd84e0c8862caff5db0a784a",
        "branchName": "master",
        "date": "Jan 19, 2018 3:10:54 PM",
        "repoName": "apache/incubator-servicecomb-java-chassis"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/apache-incubator-servicecomb-java-chassis-330826674-331080091\n",
    "projectMetrics": {
      "numberSourceFiles": 870,
      "numberLibrariesFailingModule": 73,
      "numberTestFiles": 510,
      "numberModules": 64
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 1,
        "numberDeleted": 19
      }
    },
    "diff": "diff --git a/service-registry/src/main/java/org/apache/servicecomb/serviceregistry/api/registry/MicroserviceFactory.java b/service-registry/src/main/java/org/apache/servicecomb/serviceregistry/api/registry/MicroserviceFactory.java\nindex 295592d39b..fad8bf998c 100644\n--- a/service-registry/src/main/java/org/apache/servicecomb/serviceregistry/api/registry/MicroserviceFactory.java\n+++ b/service-registry/src/main/java/org/apache/servicecomb/serviceregistry/api/registry/MicroserviceFactory.java\n@@ -56,7 +56,7 @@ public class MicroserviceFactory {\n     microservice.setAppId(configuration.getString(CONFIG_APPLICATION_ID_KEY, DEFAULT_APPLICATION_ID));\n     microservice.setVersion(configuration.getString(CONFIG_QUALIFIED_MICROSERVICE_VERSION_KEY,\n         DEFAULT_MICROSERVICE_VERSION));\n-    microservice.setDescription(configuration.getString(CONFIG_QUALIFIED_MICROSERVICE_DESCRIPTION_KEY, \"\"));\n+    setDescription(configuration, microservice);\n     microservice.setLevel(configuration.getString(CONFIG_QUALIFIED_MICROSERVICE_ROLE_KEY, \"FRONT\"));\n     microservice.setPaths(ConfigurePropertyUtils.getMicroservicePaths(configuration));\n     Map<String, String> propertiesMap = MicroservicePropertiesLoader.INSTANCE.loadProperties(configuration);\n@@ -78,6 +78,24 @@ public class MicroserviceFactory {\n     return microservice;\n   }\n \n+  /**\n+   * {@code service_description.description} is split by {@code ,},\n+   * need to combine the description array to raw description.\n+   */\n+  private void setDescription(Configuration configuration, Microservice microservice) {\n+    String[] descriptionArray = configuration.getStringArray(CONFIG_QUALIFIED_MICROSERVICE_DESCRIPTION_KEY);\n+    if (null == descriptionArray || descriptionArray.length < 1) {\n+      return;\n+    }\n+\n+    StringBuilder rawDescriptionBuilder = new StringBuilder();\n+    for (String desc : descriptionArray) {\n+      rawDescriptionBuilder.append(desc).append(\",\");\n+    }\n+\n+    microservice.setDescription(rawDescriptionBuilder.substring(0, rawDescriptionBuilder.length() - 1));\n+  }\n+\n   private boolean allowCrossApp(Map<String, String> propertiesMap) {\n     return Boolean.valueOf(propertiesMap.get(CONFIG_ALLOW_CROSS_APP_KEY));\n   }\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 630563936,
        "hostName": "spirals-bears",
        "totalMemory": 813170688,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Aug 19, 2018 5:57:44 PM",
      "projectRootPomPath": "./workspace/apache/incubator-servicecomb-java-chassis/330826674/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            1,
            5,
            1,
            0,
            126
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 133
        },
        "testing": {
          "stepDurations": [
            59
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 59
        },
        "cloning": {
          "stepDurations": [
            9
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 9
        }
      },
      "reproductionDateBeginning": "Aug 19, 2018 5:47:39 PM",
      "totalDuration": 596
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 143,
        "numberRunning": 144,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "org.junit.ComparisonFailure",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/apache/incubator-servicecomb-java-chassis/371353019/foundations/foundation-config",
      "failingClasses": [
        {
          "numberPassing": 13,
          "numberRunning": 14,
          "testClass": "org.apache.servicecomb.config.TestConfigUtil",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "testMethod": "testCreateLocalConfigWithExtraConfig",
          "testClass": "org.apache.servicecomb.config.TestConfigUtil",
          "detail": "expected:<[higher_priority]> but was:<[value]>",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/apache/incubator-servicecomb-java-chassis/builds/371886679",
        "date": "Apr 27, 2018 8:49:26 AM",
        "id": 371886679
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/apache/incubator-servicecomb-java-chassis/builds/371353019",
        "date": "Apr 26, 2018 4:32:23 AM",
        "id": 371353019
      }
    },
    "repository": {
      "name": "apache-incubator-servicecomb-java-chassis",
      "url": "https://github.com/apache/incubator-servicecomb-java-chassis",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 91674936
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/apache/incubator-servicecomb-java-chassis/commit/122a4865de381986700705eb8d7dcf286b294007",
        "sha": "122a4865de381986700705eb8d7dcf286b294007",
        "branchName": "master",
        "date": "Apr 27, 2018 8:10:59 AM",
        "repoName": "apache/incubator-servicecomb-java-chassis"
      },
      "buggyBuild": {
        "url": "http://github.com/apache/incubator-servicecomb-java-chassis/commit/5348393b977f5e6a8eac87016dd1f969a7a1e6df",
        "sha": "5348393b977f5e6a8eac87016dd1f969a7a1e6df",
        "branchName": "master",
        "date": "Apr 26, 2018 3:53:33 AM",
        "repoName": "apache/incubator-servicecomb-java-chassis"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/apache-incubator-servicecomb-java-chassis-371353019-371886679\n",
    "projectMetrics": {
      "numberSourceFiles": 867,
      "numberLibrariesFailingModule": 74,
      "numberTestFiles": 530,
      "numberModules": 64
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 5,
        "numberDeleted": 5
      }
    },
    "diff": "diff --git a/foundations/foundation-config/src/main/java/org/apache/servicecomb/config/ConfigUtil.java b/foundations/foundation-config/src/main/java/org/apache/servicecomb/config/ConfigUtil.java\nindex a5ff2e61ce..bb3b413227 100644\n--- a/foundations/foundation-config/src/main/java/org/apache/servicecomb/config/ConfigUtil.java\n+++ b/foundations/foundation-config/src/main/java/org/apache/servicecomb/config/ConfigUtil.java\n@@ -130,17 +130,17 @@ public final class ConfigUtil {\n     duplicateServiceCombConfigToCse(config,\n         convertEnvVariable(new ConcurrentMapConfiguration(new EnvironmentConfiguration())),\n         \"configFromEnvironment\");\n-    duplicateServiceCombConfigToCse(config,\n-        new DynamicConfiguration(\n-            new MicroserviceConfigurationSource(configModelList), new NeverStartPollingScheduler()),\n-        \"configFromYamlFile\");\n-    // If there is extra configurations, add it into config. Extra config has lowest priority.\n+    // If there is extra configurations, add it into config.\n     EXTRA_CONFIG_MAP.entrySet().stream()\n         .filter(mapEntry -> !mapEntry.getValue().isEmpty())\n         .forEachOrdered(configMapEntry ->\n             duplicateServiceCombConfigToCse(config,\n                 new ConcurrentMapConfiguration(configMapEntry.getValue()),\n                 configMapEntry.getKey()));\n+    duplicateServiceCombConfigToCse(config,\n+        new DynamicConfiguration(\n+            new MicroserviceConfigurationSource(configModelList), new NeverStartPollingScheduler()),\n+        \"configFromYamlFile\");\n \n     return config;\n   }\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 235782768,
        "hostName": "spirals-bears",
        "totalMemory": 924319744,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Sep 5, 2018 6:39:09 PM",
      "projectRootPomPath": "./workspace/apache/incubator-servicecomb-java-chassis/371353019/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            1,
            5,
            1,
            0,
            208
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 215
        },
        "testing": {
          "stepDurations": [
            28
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 28
        },
        "cloning": {
          "stepDurations": [
            10
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 10
        }
      },
      "reproductionDateBeginning": "Sep 5, 2018 6:25:08 PM",
      "totalDuration": 832
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 2398,
        "numberRunning": 2399,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 126
      },
      "failingModule": "/root/workspace/apache/jackrabbit-oak/344414751/oak-core",
      "failingClasses": [
        {
          "numberPassing": 0,
          "numberRunning": 1,
          "testClass": "org.apache.jackrabbit.oak.plugins.document.DisableBranchesTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "backgroundWrite",
          "testClass": "org.apache.jackrabbit.oak.plugins.document.DisableBranchesTest",
          "detail": " Expected: every item is is <301>      but: an item was <94>",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/apache/jackrabbit-oak/builds/344705279",
        "date": "Feb 22, 2018 10:58:07 AM",
        "id": 344705279
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/apache/jackrabbit-oak/builds/344414751",
        "date": "Feb 21, 2018 6:39:41 PM",
        "id": 344414751
      }
    },
    "repository": {
      "name": "apache-jackrabbit-oak",
      "url": "https://github.com/apache/jackrabbit-oak",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 3657930
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/apache/jackrabbit-oak/commit/17ca8c41ad6873f51f34db9a4cd2e9299dbd4b94",
        "sha": "17ca8c41ad6873f51f34db9a4cd2e9299dbd4b94",
        "branchName": "1.0",
        "date": "Feb 22, 2018 10:02:21 AM",
        "repoName": "apache/jackrabbit-oak"
      },
      "buggyBuild": {
        "url": "http://github.com/apache/jackrabbit-oak/commit/22c2719798a3b0c2cc47161c2f1f105829477fe0",
        "sha": "22c2719798a3b0c2cc47161c2f1f105829477fe0",
        "branchName": "1.0",
        "date": "Feb 21, 2018 5:56:02 PM",
        "repoName": "apache/jackrabbit-oak"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/apache-jackrabbit-oak-344414751-344705279\n",
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 17,
        "numberDeleted": 13
      }
    },
    "type": "passing_passing",
    "diff": "diff --git a/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore.java b/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore.java\nindex 9812fa80d6..55247b7255 100644\n--- a/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore.java\n+++ b/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore.java\n@@ -669,7 +669,13 @@ public final class DocumentNodeStore\n             }\n         } else {\n             // branch commit\n-            c.applyToCache(c.getBaseRevision(), isBranch);\n+            try {\n+                c.applyToCache(c.getBaseRevision(), isBranch);\n+            } finally {\n+                if (isDisableBranches()) {\n+                    backgroundOperationLock.readLock().unlock();\n+                }\n+            }\n         }\n     }\n \n@@ -680,6 +686,17 @@ public final class DocumentNodeStore\n             } finally {\n                 backgroundOperationLock.readLock().unlock();\n             }\n+        } else {\n+            try {\n+                Branch b = branches.getBranch(c.getBaseRevision());\n+                if (b != null) {\n+                    b.removeCommit(c.getRevision().asBranchRevision());\n+                }\n+            } finally {\n+                if (isDisableBranches()) {\n+                    backgroundOperationLock.readLock().unlock();\n+                }\n+            }\n         }\n     }\n \n@@ -1982,7 +1999,16 @@ public final class DocumentNodeStore\n                 \"base must be a branch revision: \" + base);\n \n         checkOpen();\n-        return new Commit(this, newRevision(), base, branch);\n+        Commit c = new Commit(this, newRevision(), base, branch);\n+        if (isDisableBranches()) {\n+            // Regular branch commits do not need to acquire the background\n+            // operation lock because the head is not updated and no pending\n+            // lastRev updates are done on trunk. When branches are disabled,\n+            // a branch commit becomes a pseudo trunk commit and the lock\n+            // must be acquired.\n+            backgroundOperationLock.readLock().lock();\n+        }\n+        return c;\n     }\n \n     /**\n",
    "projectMetrics": {
      "numberSourceFiles": 1396,
      "numberLibrariesFailingModule": 67,
      "numberTestFiles": 723,
      "numberModules": 21
    },
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 439960960,
        "hostName": "spirals-bears",
        "totalMemory": 824180736,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Aug 26, 2018 11:04:50 AM",
      "projectRootPomPath": "./workspace/apache/jackrabbit-oak/344414751/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            2,
            1,
            0,
            0,
            163
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 166
        },
        "testing": {
          "stepDurations": [
            636
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 636
        },
        "cloning": {
          "stepDurations": [
            36
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 36
        }
      },
      "reproductionDateBeginning": "Aug 26, 2018 10:16:03 AM",
      "totalDuration": 2919
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 490,
        "numberRunning": 491,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "org.junit.ComparisonFailure",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 1
      },
      "failingModule": "/root/workspace/CorfuDB/CorfuDB/330246430/test",
      "failingClasses": [
        {
          "numberPassing": 6,
          "numberRunning": 7,
          "testClass": "org.corfudb.runtime.utils.NodeLocatorTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "testMethod": "testStringWithIdIsEqual",
          "testClass": "org.corfudb.runtime.utils.NodeLocatorTest",
          "detail": "expected:<[tru]e> but was:<[fals]e>",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/CorfuDB/CorfuDB/builds/330267605",
        "date": "Jan 18, 2018 10:46:00 AM",
        "id": 330267605
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/CorfuDB/CorfuDB/builds/330246430",
        "date": "Jan 18, 2018 9:29:20 AM",
        "id": 330246430
      }
    },
    "repository": {
      "name": "CorfuDB-CorfuDB",
      "url": "https://github.com/CorfuDB/CorfuDB",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 12960439
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/CorfuDB/CorfuDB/commit/2ddc9ce680e726f8f8485c1b3c317fe665cda42d",
        "sha": "2ddc9ce680e726f8f8485c1b3c317fe665cda42d",
        "branchName": "nodeLocatorEquality",
        "date": "Jan 18, 2018 10:19:19 AM",
        "repoName": "CorfuDB/CorfuDB"
      },
      "buggyBuild": {
        "url": "http://github.com/CorfuDB/CorfuDB/commit/49b3ef96623130164fa1f88c00431ed5a473add0",
        "sha": "49b3ef96623130164fa1f88c00431ed5a473add0",
        "branchName": "nodeLocatorEquality",
        "date": "Jan 18, 2018 9:09:26 AM",
        "repoName": "CorfuDB/CorfuDB"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/CorfuDB-CorfuDB-330246430-330267605\n",
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 2,
        "numberDeleted": 2
      }
    },
    "type": "failing_passing",
    "diff": "diff --git a/runtime/src/main/java/org/corfudb/util/NodeLocator.java b/runtime/src/main/java/org/corfudb/util/NodeLocator.java\nindex ea9b805834..d9efcd5361 100644\n--- a/runtime/src/main/java/org/corfudb/util/NodeLocator.java\n+++ b/runtime/src/main/java/org/corfudb/util/NodeLocator.java\n@@ -142,9 +142,9 @@ public class NodeLocator implements Serializable {\n         if (otherNode.getNodeId() != null && otherNode.getNodeId().equals(getNodeId())) {\n             return true;\n         } else {\n-            // Otherwise, the other node must not have a node ID set\n+            // Otherwise, the both node IDs must not be set\n             // and must match by host and port.\n-            return otherNode.getNodeId() == null\n+            return !(otherNode.getNodeId() == null && getNodeId() != null)\n                 && otherNode.getHost().equals(getHost())\n                 && otherNode.getPort() == getPort();\n         }\n",
    "projectMetrics": {
      "numberSourceFiles": 301,
      "numberLibrariesFailingModule": 97,
      "numberTestFiles": 112,
      "numberModules": 11
    },
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 1157019376,
        "hostName": "spirals-bears",
        "totalMemory": 1872232448,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Aug 19, 2018 9:18:42 AM",
      "projectRootPomPath": "./workspace/CorfuDB/CorfuDB/330246430/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            180
          ],
          "stepNames": [
            "CheckoutBuggyBuildCandidate",
            "BuildProjectBuggyBuildCandidate"
          ],
          "nbSteps": 2,
          "totalDuration": 180
        },
        "testing": {
          "stepDurations": [
            606
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidate"
          ],
          "nbSteps": 1,
          "totalDuration": 606
        },
        "cloning": {
          "stepDurations": [
            311
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 311
        }
      },
      "reproductionDateBeginning": "Aug 19, 2018 8:48:25 AM",
      "totalDuration": 1812
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 429,
        "numberRunning": 430,
        "numberFailing": 0,
        "numberErroring": 1,
        "failures": [
          {
            "failureName": "java.lang.UnsupportedOperationException",
            "isError": true,
            "occurrences": 1
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/cpesch/RouteConverter/331125693/navigation-formats",
      "failingClasses": [
        {
          "numberPassing": 0,
          "numberRunning": 1,
          "testClass": "slash.navigation.csv.ExcelFormatTest",
          "numberFailing": 0,
          "numberErroring": 1,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.UnsupportedOperationException",
          "testMethod": "testSetAndGetTime",
          "isError": true,
          "testClass": "slash.navigation.csv.ExcelFormatTest"
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/cpesch/RouteConverter/builds/331749933",
        "date": "Jan 22, 2018 11:53:38 AM",
        "id": 331749933
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/cpesch/RouteConverter/builds/331125693",
        "date": "Jan 20, 2018 8:53:18 AM",
        "id": 331125693
      }
    },
    "repository": {
      "name": "cpesch-RouteConverter",
      "url": "https://github.com/cpesch/RouteConverter",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 1271699
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/cpesch/RouteConverter/commit/81710d9c624fb24dfa08e5bbfe853972b00ba71b",
        "sha": "81710d9c624fb24dfa08e5bbfe853972b00ba71b",
        "branchName": "master",
        "date": "Jan 22, 2018 11:47:15 AM",
        "repoName": "cpesch/RouteConverter"
      },
      "buggyBuild": {
        "url": "http://github.com/cpesch/RouteConverter/commit/6776ddcd18f883f1f37810b50e824fcc70e534e6",
        "sha": "6776ddcd18f883f1f37810b50e824fcc70e534e6",
        "branchName": "master",
        "date": "Jan 20, 2018 8:26:26 AM",
        "repoName": "cpesch/RouteConverter"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/cpesch-RouteConverter-331125693-331749933\n",
    "projectMetrics": {
      "numberSourceFiles": 1411,
      "numberLibrariesFailingModule": 43,
      "numberTestFiles": 165,
      "numberModules": 46
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 10,
        "numberDeleted": 3
      }
    },
    "diff": "diff --git a/navigation-formats/src/main/java/slash/navigation/csv/ExcelPosition.java b/navigation-formats/src/main/java/slash/navigation/csv/ExcelPosition.java\nindex eca92fcc25..762d4a2936 100644\n--- a/navigation-formats/src/main/java/slash/navigation/csv/ExcelPosition.java\n+++ b/navigation-formats/src/main/java/slash/navigation/csv/ExcelPosition.java\n@@ -20,6 +20,7 @@\n \n package slash.navigation.csv;\n \n+import org.apache.poi.hssf.usermodel.HSSFWorkbook;\n import org.apache.poi.ss.usermodel.*;\n import slash.common.type.CompactCalendar;\n import slash.navigation.base.BaseNavigationPosition;\n@@ -43,7 +44,15 @@ public class ExcelPosition extends BaseNavigationPosition {\n     }\n \n     public ExcelPosition(Double longitude, Double latitude, Double elevation, Double speed, CompactCalendar time, String description) {\n-        throw new UnsupportedOperationException();\n+        Workbook workbook = new HSSFWorkbook();\n+        Sheet sheet = workbook.createSheet(\"new sheet\");\n+        this.row = sheet.createRow(0);\n+        setLongitude(longitude);\n+        setLatitude(latitude);\n+        setElevation(elevation);\n+        setSpeed(speed);\n+        setTime(time);\n+        setDescription(description);\n     }\n \n     Row getRow() {\n@@ -105,7 +114,7 @@ public class ExcelPosition extends BaseNavigationPosition {\n         Cell cell = getOrCreateCell(type);\n         if (cell != null) {\n             if (value != null)\n-                cell.setCellValue(value.getCalendar());\n+                cell.setCellValue(value.getTime());\n             else\n                 cell.setCellValue(0);\n         }\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 294795312,
        "hostName": "spirals-bears",
        "totalMemory": 548405248,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Aug 21, 2018 11:23:27 PM",
      "projectRootPomPath": "./workspace/cpesch/RouteConverter/331125693/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            1,
            0,
            0,
            0,
            158
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 159
        },
        "testing": {
          "stepDurations": [
            34
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 34
        },
        "cloning": {
          "stepDurations": [
            19
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 19
        }
      },
      "reproductionDateBeginning": "Aug 21, 2018 11:17:00 PM",
      "totalDuration": 380
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 478,
        "numberRunning": 479,
        "numberFailing": 0,
        "numberErroring": 1,
        "failures": [
          {
            "failureName": "io.debezium.text.ParsingException",
            "isError": true,
            "occurrences": 1
          }
        ],
        "numberSkipping": 1
      },
      "failingModule": "/root/workspace/debezium/debezium/325431120/debezium-connector-mysql",
      "failingClasses": [
        {
          "numberPassing": 82,
          "numberRunning": 83,
          "testClass": "io.debezium.connector.mysql.MySqlDdlParserTest",
          "numberFailing": 0,
          "numberErroring": 1,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "io.debezium.text.ParsingException",
          "testMethod": "parsePartitionReorganize",
          "testClass": "io.debezium.connector.mysql.MySqlDdlParserTest",
          "detail": "Expecting ')' at line 1, column 221 but found ',':  THAN ('2018-01-17') ===>> , PARTITION p_2018_0",
          "isError": true
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/debezium/debezium/builds/326310450",
        "date": "Jan 8, 2018 12:06:15 PM",
        "id": 326310450
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/debezium/debezium/builds/325431120",
        "date": "Jan 5, 2018 2:00:25 PM",
        "id": 325431120
      }
    },
    "repository": {
      "name": "debezium-debezium",
      "url": "https://github.com/debezium/debezium",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 50205233
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/debezium/debezium/commit/3d7cc6a7e3491c2e3a44c636d15276f55b09133d",
        "sha": "3d7cc6a7e3491c2e3a44c636d15276f55b09133d",
        "branchName": "master",
        "date": "Jan 8, 2018 11:58:09 AM",
        "repoName": "debezium/debezium"
      },
      "buggyBuild": {
        "url": "http://github.com/debezium/debezium/commit/a629591f1ff60ec0a70fa00b26c6acbac0a6387a",
        "sha": "a629591f1ff60ec0a70fa00b26c6acbac0a6387a",
        "branchName": "master",
        "date": "Jan 5, 2018 1:52:19 PM",
        "repoName": "debezium/debezium"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/debezium-debezium-325431120-326310450\n",
    "projectMetrics": {
      "numberSourceFiles": 224,
      "numberLibrariesFailingModule": 77,
      "numberTestFiles": 123,
      "numberModules": 7
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 3,
        "numberDeleted": 1
      }
    },
    "diff": "diff --git a/debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/MySqlDdlParser.java b/debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/MySqlDdlParser.java\nindex c5dd9599d4..b2a8e13616 100644\n--- a/debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/MySqlDdlParser.java\n+++ b/debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/MySqlDdlParser.java\n@@ -1297,7 +1297,9 @@ protected void parseAlterSpecification(Marker start, TableEditor table, Consumer\n         } else if (tokens.canConsume(\"REORGANIZE\", \"PARTITION\")) {\n             parsePartitionNames(start);\n             tokens.consume(\"INTO\", \"(\");\n-            parsePartitionDefinition(start, table);\n+            do {\n+                parsePartitionDefinition(start, table);\n+            } while (tokens.canConsume(','));\n             tokens.consume(')');\n         } else if (tokens.canConsume(\"EXCHANGE\", \"PARTITION\")) {\n             tokens.consume(); // partition name\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 246919464,
        "hostName": "spirals-bears",
        "totalMemory": 424673280,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Aug 19, 2018 2:52:43 AM",
      "projectRootPomPath": "./workspace/debezium/debezium/325431120/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            94
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 94
        },
        "testing": {
          "stepDurations": [
            38
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 38
        },
        "cloning": {
          "stepDurations": [
            6
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 6
        }
      },
      "reproductionDateBeginning": "Aug 19, 2018 2:49:11 AM",
      "totalDuration": 208
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 488,
        "numberRunning": 490,
        "numberFailing": 2,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "org.junit.ComparisonFailure",
            "isError": false,
            "occurrences": 2
          }
        ],
        "numberSkipping": 1
      },
      "failingModule": "/root/workspace/debezium/debezium/343712961/debezium-connector-mysql",
      "failingClasses": [
        {
          "numberPassing": 82,
          "numberRunning": 84,
          "testClass": "io.debezium.connector.mysql.MySqlDdlParserTest",
          "numberFailing": 2,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "testMethod": "parseDdlForUnscaledDecAndFixed",
          "testClass": "io.debezium.connector.mysql.MySqlDdlParserTest",
          "detail": "expected:<[10]> but was:<[-1]>",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "testMethod": "parseDdlForDecAndFixed",
          "testClass": "io.debezium.connector.mysql.MySqlDdlParserTest",
          "detail": "expected:<[0]> but was:<[-1]>",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/debezium/debezium/builds/343714390",
        "date": "Feb 20, 2018 9:05:48 AM",
        "id": 343714390
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/debezium/debezium/builds/343712961",
        "date": "Feb 20, 2018 8:59:08 AM",
        "id": 343712961
      }
    },
    "repository": {
      "name": "debezium-debezium",
      "url": "https://github.com/debezium/debezium",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 50205233
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/debezium/debezium/commit/a08a00d46e8cadf8eac802699afe9b3396a6fa0c",
        "sha": "a08a00d46e8cadf8eac802699afe9b3396a6fa0c",
        "branchName": "master",
        "date": "Feb 20, 2018 8:54:28 AM",
        "repoName": "debezium/debezium"
      },
      "buggyBuild": {
        "url": "http://github.com/debezium/debezium/commit/6e00924ee95f0624fac66d1a2b666dbda2fa8ea7",
        "sha": "6e00924ee95f0624fac66d1a2b666dbda2fa8ea7",
        "branchName": "master",
        "date": "Feb 20, 2018 8:47:43 AM",
        "repoName": "debezium/debezium"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/debezium-debezium-343712961-343714390\n",
    "projectMetrics": {
      "numberSourceFiles": 241,
      "numberLibrariesFailingModule": 77,
      "numberTestFiles": 128,
      "numberModules": 7
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 0,
        "numberDeleted": 9
      }
    },
    "diff": "diff --git a/debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/MySqlDdlParser.java b/debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/MySqlDdlParser.java\nindex add493ebe4..7ee9d21e7c 100644\n--- a/debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/MySqlDdlParser.java\n+++ b/debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/MySqlDdlParser.java\n@@ -834,6 +834,15 @@ protected void parseColumnDefinition(Marker start, String columnName, TokenStrea\n             column.charsetName(\"utf8\");\n         }\n \n+        if (Types.DECIMAL == dataType.jdbcType()) {\n+            if (dataType.length() == -1) {\n+                column.length(10);\n+            }\n+            if (dataType.scale() == -1) {\n+                column.scale(0);\n+            }\n+        }\n+\n         if (tokens.canConsume(\"CHARSET\") || tokens.canConsume(\"CHARACTER\", \"SET\")) {\n             String charsetName = tokens.consume();\n             if (!\"DEFAULT\".equalsIgnoreCase(charsetName)) {\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 371192192,
        "hostName": "spirals-bears",
        "totalMemory": 407896064,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Aug 25, 2018 1:30:05 PM",
      "projectRootPomPath": "./workspace/debezium/debezium/343712961/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            93
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 93
        },
        "testing": {
          "stepDurations": [
            42
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 42
        },
        "cloning": {
          "stepDurations": [
            6
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 6
        }
      },
      "reproductionDateBeginning": "Aug 25, 2018 1:26:18 PM",
      "totalDuration": 220
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 486,
        "numberRunning": 487,
        "numberFailing": 0,
        "numberErroring": 1,
        "failures": [
          {
            "failureName": "io.debezium.text.ParsingException",
            "isError": true,
            "occurrences": 1
          }
        ],
        "numberSkipping": 1
      },
      "failingModule": "/root/workspace/debezium/debezium/351465554/debezium-connector-mysql",
      "failingClasses": [
        {
          "numberPassing": 85,
          "numberRunning": 86,
          "testClass": "io.debezium.connector.mysql.MySqlDdlParserTest",
          "numberFailing": 0,
          "numberErroring": 1,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "io.debezium.text.ParsingException",
          "testMethod": "shouldParseAlterTableStatementAddConstraintUniqueKey",
          "testClass": "io.debezium.connector.mysql.MySqlDdlParserTest",
          "detail": "Failed to parse statement 'ALTER TABLE t ADD CONSTRAINT UNIQUE KEY col_key ('col1');'",
          "isError": true
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/debezium/debezium/builds/354212780",
        "date": "Mar 16, 2018 9:57:38 AM",
        "id": 354212780
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/debezium/debezium/builds/351465554",
        "date": "Mar 9, 2018 8:56:23 PM",
        "id": 351465554
      }
    },
    "repository": {
      "name": "debezium-debezium",
      "url": "https://github.com/debezium/debezium",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 50205233
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/debezium/debezium/commit/469199350f4efac568ab0b384ad31b5bb24f4b19",
        "sha": "469199350f4efac568ab0b384ad31b5bb24f4b19",
        "branchName": "master",
        "date": "Mar 16, 2018 9:44:47 AM",
        "repoName": "debezium/debezium"
      },
      "buggyBuild": {
        "url": "http://github.com/debezium/debezium/commit/2a35eae1789ccbcfa58ba97843974e8003f6513d",
        "sha": "2a35eae1789ccbcfa58ba97843974e8003f6513d",
        "branchName": "master",
        "date": "Mar 9, 2018 8:43:57 PM",
        "repoName": "debezium/debezium"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/debezium-debezium-351465554-354212780\n",
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 3,
        "numberDeleted": 1
      }
    },
    "type": "passing_passing",
    "diff": "diff --git a/debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/MySqlDdlParser.java b/debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/MySqlDdlParser.java\nindex 4109995220..56e9de095b 100644\n--- a/debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/MySqlDdlParser.java\n+++ b/debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/MySqlDdlParser.java\n@@ -622,7 +622,9 @@ protected void parseCreateDefinition(Marker start, TableEditor table, boolean is\n                     tokens.rewind(defnStart);\n                 }\n             }\n-            if (tokens.canConsume(\"CONSTRAINT\", TokenStream.ANY_VALUE, \"UNIQUE\") || tokens.canConsume(\"UNIQUE\")) {\n+            if (tokens.canConsume(\"CONSTRAINT\", TokenStream.ANY_VALUE, \"UNIQUE\")\n+                    || tokens.canConsume(\"CONSTRAINT\", \"UNIQUE\")\n+                    || tokens.canConsume(\"UNIQUE\")) {\n                 tokens.canConsumeAnyOf(\"KEY\", \"INDEX\");\n                 try {\n                     if (!tokens.matches('(')) {\n",
    "projectMetrics": {
      "numberSourceFiles": 244,
      "numberLibrariesFailingModule": 77,
      "numberTestFiles": 128,
      "numberModules": 7
    },
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 276331152,
        "hostName": "spirals-bears",
        "totalMemory": 495452160,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Aug 30, 2018 5:09:03 PM",
      "projectRootPomPath": "./workspace/debezium/debezium/351465554/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            120
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 120
        },
        "testing": {
          "stepDurations": [
            45
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 45
        },
        "cloning": {
          "stepDurations": [
            6
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 6
        }
      },
      "reproductionDateBeginning": "Aug 30, 2018 5:04:45 PM",
      "totalDuration": 251
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 324,
        "numberRunning": 326,
        "numberFailing": 2,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 2
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/dhis2/dhis2-core/365246679/dhis-2/dhis-api",
      "failingClasses": [
        {
          "numberPassing": 0,
          "numberRunning": 2,
          "testClass": "org.hisp.dhis.dataelement.OperandTest",
          "numberFailing": 2,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testHashCode",
          "testClass": "org.hisp.dhis.dataelement.OperandTest",
          "detail": "expected:<10> but was:<5>",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testEquals",
          "testClass": "org.hisp.dhis.dataelement.OperandTest",
          "detail": "Values should be different. Actual: {\"class\":\"class org.hisp.dhis.dataelement.DataElementOperand\", \"id\":\"0\", \"uid\":\"null\", \"dataElement\":{\"class\":\"class org.hisp.dhis.dataelement.DataElement\", \"hashCode\":\"-58940749\", \"id\":\"0\", \"uid\":\"null\", \"code\":\"null\", \"name\":\"DataElement A\", \"shortName\":\"null\", \"description\":\"null\", \"created\":\"null\", \"lastUpdated\":\"null\" }, \"categoryOptionCombo\":{\"class\":\"class org.hisp.dhis.dataelement.DataElementCategoryOptionCombo\", \"id\":\"0\", \"uid\":\"null\", \"code\":\"null\", \"categoryCombo\":{\"class\":\"class org.hisp.dhis.dataelement.DataElementCategoryCombo\", \"id\":\"0\", \"uid\":\"null\", \"code\":\"null\", \"name\":\"CategoryCombo B\", \"created\":\"null\", \"lastUpdated\":\"null\" }, \"categoryOptions\":[]}\"attributeOptionCombo\":{\"class\":\"class org.hisp.dhis.dataelement.DataElementCategoryOptionCombo\", \"id\":\"0\", \"uid\":\"null\", \"code\":\"null\", \"categoryCombo\":{\"class\":\"class org.hisp.dhis.dataelement.DataElementCategoryCombo\", \"id\":\"0\", \"uid\":\"null\", \"code\":\"null\", \"name\":\"CategoryCombo B\", \"created\":\"null\", \"lastUpdated\":\"null\" }, \"categoryOptions\":[]}}",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/dhis2/dhis2-core/builds/365386294",
        "date": "Apr 12, 2018 2:35:25 AM",
        "id": 365386294
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/dhis2/dhis2-core/builds/365246679",
        "date": "Apr 11, 2018 8:19:44 PM",
        "id": 365246679
      }
    },
    "repository": {
      "name": "dhis2-dhis2-core",
      "url": "https://github.com/dhis2/dhis2-core",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 66940520
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/dhis2/dhis2-core/commit/24b5733682bc55f7f0d8fdd5678da07c40c90650",
        "sha": "24b5733682bc55f7f0d8fdd5678da07c40c90650",
        "branchName": "2.29",
        "date": "Apr 11, 2018 11:17:18 PM",
        "repoName": "dhis2/dhis2-core"
      },
      "buggyBuild": {
        "url": "http://github.com/dhis2/dhis2-core/commit/7b28e043518901956c411e69565d1ca4662d4858",
        "sha": "7b28e043518901956c411e69565d1ca4662d4858",
        "branchName": "2.29",
        "date": "Apr 11, 2018 8:05:26 PM",
        "repoName": "dhis2/dhis2-core"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/dhis2-dhis2-core-365246679-365386294\n",
    "projectMetrics": {
      "numberSourceFiles": 1986,
      "numberLibrariesFailingModule": 72,
      "numberTestFiles": 318,
      "numberModules": 15
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 1,
        "numberDeleted": 62
      }
    },
    "diff": "diff --git a/dhis-2/dhis-api/src/main/java/org/hisp/dhis/dataelement/DataElementOperand.java b/dhis-2/dhis-api/src/main/java/org/hisp/dhis/dataelement/DataElementOperand.java\nindex 918a7946eb..46919878cf 100644\n--- a/dhis-2/dhis-api/src/main/java/org/hisp/dhis/dataelement/DataElementOperand.java\n+++ b/dhis-2/dhis-api/src/main/java/org/hisp/dhis/dataelement/DataElementOperand.java\n@@ -317,9 +317,70 @@ public class DataElementOperand\n     }\r\n \r\n     // -------------------------------------------------------------------------\r\n-    // toString, mergeWith\r\n+    // hashCode, equals and toString\r\n     // -------------------------------------------------------------------------\r\n \r\n+    @Override\r\n+    public int hashCode()\r\n+    {\r\n+        int result = dataElement.hashCode();\r\n+        result = 31 * result + (categoryOptionCombo != null ? categoryOptionCombo.hashCode() : 0);\r\n+        result = 31 * result + (attributeOptionCombo != null ? attributeOptionCombo.hashCode() : 0);\r\n+        return result;\r\n+    }\r\n+\r\n+    @Override\r\n+    public boolean equals( Object object )\r\n+    {\r\n+        if ( this == object )\r\n+        {\r\n+            return true;\r\n+        }\r\n+\r\n+        if ( object == null )\r\n+        {\r\n+            return false;\r\n+        }\r\n+\r\n+        if ( getClass() != object.getClass() )\r\n+        {\r\n+            return false;\r\n+        }\r\n+\r\n+        DataElementOperand other = (DataElementOperand) object;\r\n+\r\n+        if ( !dataElement.equals( other.dataElement ) )\r\n+        {\r\n+            return false;\r\n+        }\r\n+\r\n+        if ( categoryOptionCombo == null )\r\n+        {\r\n+            if ( other.categoryOptionCombo != null )\r\n+            {\r\n+                return false;\r\n+            }\r\n+        }\r\n+        else if ( !categoryOptionCombo.equals( other.categoryOptionCombo ) )\r\n+        {\r\n+            return false;\r\n+        }\r\n+\r\n+        if ( attributeOptionCombo == null )\r\n+        {\r\n+            if ( other.attributeOptionCombo != null )\r\n+            {\r\n+                return false;\r\n+            }\r\n+        }\r\n+        else if ( !attributeOptionCombo.equals( other.attributeOptionCombo ) )\r\n+        {\r\n+            return false;\r\n+        }\r\n+\r\n+        return true;\r\n+    }\r\n+\r\n     @Override\r\n     public String toString()\r\n     {\r\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 324154968,
        "hostName": "spirals-bears",
        "totalMemory": 709885952,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Sep 3, 2018 1:26:33 PM",
      "projectRootPomPath": "./workspace/dhis2/dhis2-core/365246679/dhis-2/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            1,
            0,
            0,
            1,
            180
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 182
        },
        "testing": {
          "stepDurations": [
            15
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 15
        },
        "cloning": {
          "stepDurations": [
            22
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 22
        }
      },
      "reproductionDateBeginning": "Sep 3, 2018 1:15:30 PM",
      "totalDuration": 654
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 17,
        "numberRunning": 18,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/EnMasseProject/enmasse/344863667/address-model-lib",
      "failingClasses": [
        {
          "numberPassing": 2,
          "numberRunning": 3,
          "testClass": "io.enmasse.address.model.v1.address.AddressTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testCopy",
          "testClass": "io.enmasse.address.model.v1.address.AddressTest",
          "detail": "\nExpected: is <Active>\n     but: was <Pending>",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/EnMasseProject/enmasse/builds/344945686",
        "date": "Feb 22, 2018 9:15:58 PM",
        "id": 344945686
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/EnMasseProject/enmasse/builds/344863667",
        "date": "Feb 22, 2018 6:02:11 PM",
        "id": 344863667
      }
    },
    "repository": {
      "name": "EnMasseProject-enmasse",
      "url": "https://github.com/EnMasseProject/enmasse",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 62793144
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/EnMasseProject/enmasse/commit/4c2be71c8acee0dc24f6c1ab91fb9215d843ec15",
        "sha": "4c2be71c8acee0dc24f6c1ab91fb9215d843ec15",
        "branchName": "master",
        "date": "Feb 22, 2018 8:33:37 PM",
        "repoName": "EnMasseProject/enmasse"
      },
      "buggyBuild": {
        "url": "http://github.com/EnMasseProject/enmasse/commit/054f3e1a2fab574bc70ccee8e7e67cfe21658c5f",
        "sha": "054f3e1a2fab574bc70ccee8e7e67cfe21658c5f",
        "branchName": "master",
        "date": "Feb 22, 2018 5:19:09 PM",
        "repoName": "EnMasseProject/enmasse"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/EnMasseProject-enmasse-344863667-344945686\n",
    "projectMetrics": {
      "numberSourceFiles": 307,
      "numberLibrariesFailingModule": 9,
      "numberTestFiles": 123,
      "numberModules": 19
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 0,
        "numberDeleted": 1
      }
    },
    "diff": "diff --git a/address-model-lib/src/main/java/io/enmasse/address/model/Status.java b/address-model-lib/src/main/java/io/enmasse/address/model/Status.java\nindex 7745f9e6c6..66e89f0a81 100644\n--- a/address-model-lib/src/main/java/io/enmasse/address/model/Status.java\n+++ b/address-model-lib/src/main/java/io/enmasse/address/model/Status.java\n@@ -21,6 +21,7 @@ public class Status {\n \n     public Status(io.enmasse.address.model.Status other) {\n         this.isReady = other.isReady();\n+        this.phase = other.getPhase();\n         this.messages.addAll(other.getMessages());\n     }\n \n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 540545608,
        "hostName": "spirals-bears",
        "totalMemory": 619184128,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Aug 26, 2018 4:14:11 AM",
      "projectRootPomPath": "./workspace/EnMasseProject/enmasse/344863667/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            2,
            0,
            1,
            87
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 90
        },
        "testing": {
          "stepDurations": [
            10
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 10
        },
        "cloning": {
          "stepDurations": [
            31
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 31
        }
      },
      "reproductionDateBeginning": "Aug 26, 2018 4:08:53 AM",
      "totalDuration": 311
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 124,
        "numberRunning": 126,
        "numberFailing": 2,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 2
          }
        ],
        "numberSkipping": 4
      },
      "failingModule": "/root/workspace/EnMasseProject/enmasse/344945686/address-controller",
      "failingClasses": [
        {
          "numberPassing": 1,
          "numberRunning": 3,
          "testClass": "io.enmasse.controller.api.v1.AddressApiHelperTest",
          "numberFailing": 2,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testDuplicateAddresses",
          "testClass": "io.enmasse.controller.api.v1.AddressApiHelperTest",
          "detail": "Expected exception for duplicate address",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testDuplicateAddressesInRequest",
          "testClass": "io.enmasse.controller.api.v1.AddressApiHelperTest",
          "detail": "Expected exception for duplicate address",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/EnMasseProject/enmasse/builds/344976598",
        "date": "Feb 22, 2018 10:26:37 PM",
        "id": 344976598
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/EnMasseProject/enmasse/builds/344945686",
        "date": "Feb 22, 2018 9:15:58 PM",
        "id": 344945686
      }
    },
    "repository": {
      "name": "EnMasseProject-enmasse",
      "url": "https://github.com/EnMasseProject/enmasse",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 62793144
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/EnMasseProject/enmasse/commit/d4e7465f33c9335d7e6d26c15972e6c8912cfad7",
        "sha": "d4e7465f33c9335d7e6d26c15972e6c8912cfad7",
        "branchName": "master",
        "date": "Feb 22, 2018 9:47:10 PM",
        "repoName": "EnMasseProject/enmasse"
      },
      "buggyBuild": {
        "url": "http://github.com/EnMasseProject/enmasse/commit/4c2be71c8acee0dc24f6c1ab91fb9215d843ec15",
        "sha": "4c2be71c8acee0dc24f6c1ab91fb9215d843ec15",
        "branchName": "master",
        "date": "Feb 22, 2018 8:33:37 PM",
        "repoName": "EnMasseProject/enmasse"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/EnMasseProject-enmasse-344945686-344976598\n",
    "projectMetrics": {
      "numberSourceFiles": 307,
      "numberLibrariesFailingModule": 65,
      "numberTestFiles": 123,
      "numberModules": 19
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 0,
        "numberDeleted": 14
      }
    },
    "diff": "diff --git a/address-controller/src/main/java/io/enmasse/controller/api/v1/AddressApiHelper.java b/address-controller/src/main/java/io/enmasse/controller/api/v1/AddressApiHelper.java\nindex 7bd7d58740..28274271d4 100644\n--- a/address-controller/src/main/java/io/enmasse/controller/api/v1/AddressApiHelper.java\n+++ b/address-controller/src/main/java/io/enmasse/controller/api/v1/AddressApiHelper.java\n@@ -9,6 +9,7 @@ import java.util.HashSet;\n import java.util.Optional;\n import java.util.Set;\n \n+import javax.ws.rs.BadRequestException;\n import javax.ws.rs.NotFoundException;\n import javax.ws.rs.core.SecurityContext;\n \n@@ -19,6 +20,7 @@ import io.enmasse.controller.api.ResourceVerb;\n import io.enmasse.controller.api.osb.v2.OSBExceptions;\n import io.enmasse.k8s.api.AddressApi;\n import io.enmasse.k8s.api.AddressSpaceApi;\n+\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -68,8 +70,20 @@ public class AddressApiHelper {\n         AddressSpaceType type = schema.findAddressSpaceType(addressSpace.getType()).orElseThrow(() -> new UnresolvedAddressSpaceException(\"Unable to resolve address space type \" + addressSpace.getType()));\n \n         AddressResolver addressResolver = new AddressResolver(schema, type);\n+        Set<Address> existingAddresses = addressSpaceApi.withAddressSpace(addressSpace).listAddresses();\n         for (Address address : addressList) {\n             addressResolver.validate(address);\n+            for (Address existing : existingAddresses) {\n+                if (address.getAddress().equals(existing.getAddress()) && !address.getName().equals(existing.getName())) {\n+                    throw new BadRequestException(\"Address '\" + address.getAddress() + \"' already exists with resource name '\" + existing.getName() + \"'\");\n+                }\n+            }\n+\n+            for (Address b : addressList) {\n+                if (address.getAddress().equals(b.getAddress()) && !address.getName().equals(b.getName())) {\n+                    throw new BadRequestException(\"Address '\" + address.getAddress() + \"' defined in resource names '\" + address.getName() + \"' and '\" + b.getName() + \"'\");\n+                }\n+            }\n         }\n     }\n \n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 392729544,
        "hostName": "spirals-bears",
        "totalMemory": 505937920,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Aug 26, 2018 4:14:57 AM",
      "projectRootPomPath": "./workspace/EnMasseProject/enmasse/344945686/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            1,
            2,
            0,
            2,
            85
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 90
        },
        "testing": {
          "stepDurations": [
            82
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 82
        },
        "cloning": {
          "stepDurations": [
            30
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 30
        }
      },
      "reproductionDateBeginning": "Aug 26, 2018 4:08:34 AM",
      "totalDuration": 379
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 18,
        "numberRunning": 20,
        "numberFailing": 0,
        "numberErroring": 2,
        "failures": [
          {
            "failureName": "java.lang.Exception",
            "isError": true,
            "occurrences": 2
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/EnMasseProject/enmasse/357424637/address-model-lib",
      "failingClasses": [
        {
          "numberPassing": 14,
          "numberRunning": 16,
          "testClass": "io.enmasse.address.model.v1.address.SerializationTest",
          "numberFailing": 0,
          "numberErroring": 2,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.Exception",
          "testMethod": "testDeserializeAddressSpaceMissingDefaults",
          "testClass": "io.enmasse.address.model.v1.address.SerializationTest",
          "detail": "Unexpected exception, expected<io.enmasse.address.model.v1.DeserializeException> but was<java.lang.NullPointerException>",
          "isError": true
        },
        {
          "failureName": "java.lang.Exception",
          "testMethod": "testDeserializeAddressMissingDefaults",
          "testClass": "io.enmasse.address.model.v1.address.SerializationTest",
          "detail": "Unexpected exception, expected<io.enmasse.address.model.v1.DeserializeException> but was<java.lang.NullPointerException>",
          "isError": true
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/EnMasseProject/enmasse/builds/357457887",
        "date": "Mar 23, 2018 5:27:59 PM",
        "id": 357457887
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/EnMasseProject/enmasse/builds/357424637",
        "date": "Mar 23, 2018 4:19:02 PM",
        "id": 357424637
      }
    },
    "repository": {
      "name": "EnMasseProject-enmasse",
      "url": "https://github.com/EnMasseProject/enmasse",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 62793144
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/EnMasseProject/enmasse/commit/161942d39310aa78cc89350d5155a7a41fc341af",
        "sha": "161942d39310aa78cc89350d5155a7a41fc341af",
        "branchName": "master",
        "date": "Mar 23, 2018 4:49:59 PM",
        "repoName": "EnMasseProject/enmasse"
      },
      "buggyBuild": {
        "url": "http://github.com/EnMasseProject/enmasse/commit/3f99a77cf84ce80b55fe67c3461e0ccf1f198aab",
        "sha": "3f99a77cf84ce80b55fe67c3461e0ccf1f198aab",
        "branchName": "master",
        "date": "Mar 23, 2018 3:42:39 PM",
        "repoName": "EnMasseProject/enmasse"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/EnMasseProject-enmasse-357424637-357457887\n",
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 3,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 1,
        "numberDeleted": 64
      }
    },
    "type": "passing_passing",
    "diff": "diff --git a/address-controller/src/main/java/io/enmasse/controller/api/DefaultExceptionMapper.java b/address-controller/src/main/java/io/enmasse/controller/api/DefaultExceptionMapper.java\nindex ef45c560f3..1d8d40d32c 100644\n--- a/address-controller/src/main/java/io/enmasse/controller/api/DefaultExceptionMapper.java\n+++ b/address-controller/src/main/java/io/enmasse/controller/api/DefaultExceptionMapper.java\n@@ -11,6 +11,7 @@ import javax.ws.rs.ext.Provider;\n \n import io.enmasse.address.model.UnresolvedAddressException;\n import io.enmasse.address.model.UnresolvedAddressSpaceException;\n+import io.enmasse.address.model.v1.DeserializeException;\n import io.enmasse.controller.common.exceptionmapping.ErrorResponse;\n import okhttp3.ResponseBody;\n import org.slf4j.Logger;\n@@ -28,7 +29,7 @@ public class DefaultExceptionMapper implements ExceptionMapper<Exception> {\n             WebApplicationException webApplicationException = (WebApplicationException) exception;\n             status = Response.Status.fromStatusCode(webApplicationException.getResponse().getStatus());\n             response = webApplicationException.getResponse();\n-        } else if (exception instanceof UnresolvedAddressException || exception instanceof UnresolvedAddressSpaceException) {\n+        } else if (exception instanceof UnresolvedAddressException || exception instanceof UnresolvedAddressSpaceException || exception instanceof DeserializeException) {\n             status = Response.Status.BAD_REQUEST;\n             response = Response.status(status)\n                     .entity(new ErrorResponse(null, exception.getMessage()))\ndiff --git a/address-model-lib/src/main/java/io/enmasse/address/model/v1/AddressSpaceV1Deserializer.java b/address-model-lib/src/main/java/io/enmasse/address/model/v1/AddressSpaceV1Deserializer.java\nindex c0fafac235..b5e0700548 100644\n--- a/address-model-lib/src/main/java/io/enmasse/address/model/v1/AddressSpaceV1Deserializer.java\n+++ b/address-model-lib/src/main/java/io/enmasse/address/model/v1/AddressSpaceV1Deserializer.java\n@@ -35,6 +35,7 @@ class AddressSpaceV1Deserializer extends JsonDeserializer<AddressSpace> {\n     }\n \n     AddressSpace deserialize(ObjectNode root) {\n+        validate(root);\n \n         ObjectNode metadata = (ObjectNode) root.get(Fields.METADATA);\n         ObjectNode spec = (ObjectNode) root.get(Fields.SPEC);\n@@ -147,6 +148,42 @@ class AddressSpaceV1Deserializer extends JsonDeserializer<AddressSpace> {\n         return builder.build();\n     }\n \n+    private void validate(ObjectNode root) {\n+        validateMetadata(root);\n+        validateSpec(root);\n+    }\n+\n+    private void validateMetadata(ObjectNode root) {\n+        JsonNode node = root.get(Fields.METADATA);\n+        if (node == null || !node.isObject()) {\n+            throw new DeserializeException(\"Missing 'metadata' object field\");\n+        }\n+\n+        ObjectNode metadata = (ObjectNode) node;\n+        JsonNode name = metadata.get(Fields.NAME);\n+        if (name == null || !name.isTextual()) {\n+            throw new DeserializeException(\"Missing 'name' string field in 'metadata'\");\n+        }\n+    }\n+\n+    private void validateSpec(ObjectNode root) {\n+        JsonNode node = root.get(Fields.SPEC);\n+        if (node == null || !node.isObject()) {\n+            throw new DeserializeException(\"Missing 'spec' object field\");\n+        }\n+\n+        ObjectNode spec = (ObjectNode) node;\n+        JsonNode type = spec.get(Fields.TYPE);\n+        if (type == null || !type.isTextual()) {\n+            throw new DeserializeException(\"Missing 'type' string field in 'spec'\");\n+        }\n+\n+        JsonNode plan = spec.get(Fields.PLAN);\n+        if (plan == null || !plan.isTextual()) {\n+            throw new DeserializeException(\"Missing 'plan' string field in 'spec'\");\n+        }\n+    }\n+\n     static class TypeConverter {\n         private static final Map<Class, Function<JsonNode, Object>> converterMap = new HashMap<>();\n \ndiff --git a/address-model-lib/src/main/java/io/enmasse/address/model/v1/AddressV1Deserializer.java b/address-model-lib/src/main/java/io/enmasse/address/model/v1/AddressV1Deserializer.java\nindex 93877799c7..a59850e817 100644\n--- a/address-model-lib/src/main/java/io/enmasse/address/model/v1/AddressV1Deserializer.java\n+++ b/address-model-lib/src/main/java/io/enmasse/address/model/v1/AddressV1Deserializer.java\n@@ -7,6 +7,7 @@ package io.enmasse.address.model.v1;\n import com.fasterxml.jackson.core.JsonParser;\n import com.fasterxml.jackson.databind.DeserializationContext;\n import com.fasterxml.jackson.databind.JsonDeserializer;\n+import com.fasterxml.jackson.databind.JsonNode;\n import com.fasterxml.jackson.databind.ObjectMapper;\n import com.fasterxml.jackson.databind.node.ArrayNode;\n import com.fasterxml.jackson.databind.node.ObjectNode;\n@@ -29,6 +30,7 @@ class AddressV1Deserializer extends JsonDeserializer<Address> {\n     }\n \n     Address deserialize(ObjectNode root) {\n+        validate(root);\n         ObjectNode metadata = (ObjectNode) root.get(Fields.METADATA);\n         ObjectNode spec = (ObjectNode) root.get(Fields.SPEC);\n         ObjectNode status = (ObjectNode) root.get(Fields.STATUS);\n@@ -83,4 +85,27 @@ class AddressV1Deserializer extends JsonDeserializer<Address> {\n \n         return builder.build();\n     }\n+\n+    private void validate(ObjectNode root) {\n+        JsonNode node = root.get(Fields.SPEC);\n+        if (node == null || !node.isObject()) {\n+            throw new DeserializeException(\"Missing 'spec' object field\");\n+        }\n+\n+        ObjectNode spec = (ObjectNode) node;\n+        JsonNode address = spec.get(Fields.ADDRESS);\n+        if (address == null || !address.isTextual()) {\n+            throw new DeserializeException(\"Missing 'address' string field in 'spec'\");\n+        }\n+\n+        JsonNode type = spec.get(Fields.TYPE);\n+        if (type == null || !type.isTextual()) {\n+            throw new DeserializeException(\"Missing 'type' string field in 'spec'\");\n+        }\n+\n+        JsonNode plan = spec.get(Fields.PLAN);\n+        if (plan == null || !plan.isTextual()) {\n+            throw new DeserializeException(\"Missing 'plan' string field in 'spec'\");\n+        }\n+    }\n }\n",
    "projectMetrics": {
      "numberSourceFiles": 339,
      "numberLibrariesFailingModule": 9,
      "numberTestFiles": 132,
      "numberModules": 19
    },
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 356415400,
        "hostName": "spirals-bears",
        "totalMemory": 517472256,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Aug 31, 2018 5:46:54 PM",
      "projectRootPomPath": "./workspace/EnMasseProject/enmasse/357424637/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            2,
            0,
            1,
            94
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 97
        },
        "testing": {
          "stepDurations": [
            10
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 10
        },
        "cloning": {
          "stepDurations": [
            28
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 28
        }
      },
      "reproductionDateBeginning": "Aug 31, 2018 5:41:18 PM",
      "totalDuration": 329
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 620,
        "numberRunning": 621,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.NullPointerException",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/linkedin/pinot/342188288/pinot-core",
      "failingClasses": [
        {
          "numberPassing": 12,
          "numberRunning": 13,
          "testClass": "com.linkedin.pinot.core.data.manager.realtime.LLRealtimeSegmentDataManagerTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.NullPointerException",
          "testMethod": "testSegmentBuildException",
          "isError": false,
          "testClass": "com.linkedin.pinot.core.data.manager.realtime.LLRealtimeSegmentDataManagerTest"
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/linkedin/pinot/builds/342446553",
        "date": "Feb 16, 2018 6:54:39 PM",
        "id": 342446553
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/linkedin/pinot/builds/342188288",
        "date": "Feb 16, 2018 5:09:49 AM",
        "id": 342188288
      }
    },
    "repository": {
      "name": "linkedin-pinot",
      "url": "https://github.com/linkedin/pinot",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 19961085
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/linkedin/pinot/commit/5cb7839f5f8978eaae2a9c31aba72234bad6660e",
        "sha": "5cb7839f5f8978eaae2a9c31aba72234bad6660e",
        "branchName": "master",
        "date": "Feb 16, 2018 6:30:08 PM",
        "repoName": "linkedin/pinot"
      },
      "buggyBuild": {
        "url": "http://github.com/linkedin/pinot/commit/ccaa9f5ed02bcd26af78ffc1d4c1126b180566ad",
        "sha": "ccaa9f5ed02bcd26af78ffc1d4c1126b180566ad",
        "branchName": "master",
        "date": "Feb 16, 2018 4:53:41 AM",
        "repoName": "linkedin/pinot"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/linkedin-pinot-342188288-342446553\n",
    "projectMetrics": {
      "numberSourceFiles": 1112,
      "numberLibrariesFailingModule": 69,
      "numberTestFiles": 274,
      "numberModules": 13
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 5,
        "numberDeleted": 1
      }
    },
    "diff": "diff --git a/pinot-core/src/main/java/com/linkedin/pinot/core/data/manager/realtime/LLRealtimeSegmentDataManager.java b/pinot-core/src/main/java/com/linkedin/pinot/core/data/manager/realtime/LLRealtimeSegmentDataManager.java\nindex b2c25a8f9e..ebb23717ff 100644\n--- a/pinot-core/src/main/java/com/linkedin/pinot/core/data/manager/realtime/LLRealtimeSegmentDataManager.java\n+++ b/pinot-core/src/main/java/com/linkedin/pinot/core/data/manager/realtime/LLRealtimeSegmentDataManager.java\n@@ -139,7 +139,11 @@ public class LLRealtimeSegmentDataManager extends RealtimeSegmentDataManager {\n     }\n \n     public void deleteSegmentFile() {\n-      FileUtils.deleteQuietly(new File(_segmentFile));\n+      // If segment build fails with an exception then we will not be able to create a segment file and\n+      // the file name will be null.\n+      if (_segmentFile != null) {\n+        FileUtils.deleteQuietly(new File(_segmentFile));\n+      }\n     }\n   }\n \n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 176378872,
        "hostName": "spirals-bears",
        "totalMemory": 580386816,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Aug 25, 2018 7:43:03 AM",
      "projectRootPomPath": "./workspace/linkedin/pinot/342188288/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            2,
            0,
            0,
            1,
            422
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 425
        },
        "testing": {
          "stepDurations": [
            845
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 845
        },
        "cloning": {
          "stepDurations": [
            57
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 57
        }
      },
      "reproductionDateBeginning": "Aug 25, 2018 6:19:24 AM",
      "totalDuration": 5011
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 3435,
        "numberRunning": 3437,
        "numberFailing": 2,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 1
          },
          {
            "failureName": "org.testng.TestException",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/molgenis/molgenis/336061452/molgenis-semantic-mapper",
      "failingClasses": [
        {
          "numberPassing": 8,
          "numberRunning": 10,
          "testClass": "org.molgenis.semanticmapper.service.impl.AlgorithmServiceImplTest",
          "numberFailing": 2,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "org.testng.TestException",
          "testMethod": "testApplyWithInvalidScript",
          "testClass": "org.molgenis.semanticmapper.service.impl.AlgorithmServiceImplTest",
          "detail": "\nExpected exception org.molgenis.script.core.ScriptException but got java.lang.NullPointerException",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testApplyAlgorithmWitInvalidScript",
          "testClass": "org.molgenis.semanticmapper.service.impl.AlgorithmServiceImplTest",
          "detail": "expected [algorithm is not defined] but found [Applying an algorithm on a null source value caused an exception. Is the target attribute required?]",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/molgenis/molgenis/builds/336065127",
        "date": "Feb 1, 2018 1:44:00 PM",
        "id": 336065127
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/molgenis/molgenis/builds/336061452",
        "date": "Feb 1, 2018 1:19:09 PM",
        "id": 336061452
      }
    },
    "repository": {
      "name": "molgenis-molgenis",
      "url": "https://github.com/molgenis/molgenis",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 8010626
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/molgenis/molgenis/commit/ad7d5e36da0a5e88be6acaf281c2f74e6f50d796",
        "sha": "ad7d5e36da0a5e88be6acaf281c2f74e6f50d796",
        "branchName": "6.0",
        "date": "Feb 1, 2018 12:55:08 PM",
        "repoName": "molgenis/molgenis"
      },
      "buggyBuild": {
        "url": "http://github.com/molgenis/molgenis/commit/bcdf56e5d7f1f49fad793871dbd0cb6ac1f3ad1b",
        "sha": "bcdf56e5d7f1f49fad793871dbd0cb6ac1f3ad1b",
        "branchName": "6.0",
        "date": "Feb 1, 2018 12:45:11 PM",
        "repoName": "molgenis/molgenis"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/molgenis-molgenis-336061452-336065127\n",
    "projectMetrics": {
      "numberSourceFiles": 1205,
      "numberLibrariesFailingModule": 203,
      "numberTestFiles": 515,
      "numberModules": 56
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 12,
        "numberDeleted": 12
      }
    },
    "diff": "diff --git a/molgenis-semantic-mapper/src/main/java/org/molgenis/semanticmapper/service/impl/AlgorithmServiceImpl.java b/molgenis-semantic-mapper/src/main/java/org/molgenis/semanticmapper/service/impl/AlgorithmServiceImpl.java\nindex 14fa4535ea..9246b3049f 100644\n--- a/molgenis-semantic-mapper/src/main/java/org/molgenis/semanticmapper/service/impl/AlgorithmServiceImpl.java\n+++ b/molgenis-semantic-mapper/src/main/java/org/molgenis/semanticmapper/service/impl/AlgorithmServiceImpl.java\n@@ -10,6 +10,7 @@ import org.molgenis.data.meta.model.EntityType;\n import org.molgenis.data.semantic.Relation;\n import org.molgenis.js.magma.JsMagmaScriptEvaluator;\n import org.molgenis.ontology.core.model.OntologyTerm;\n+import org.molgenis.script.core.ScriptException;\n import org.molgenis.security.core.runas.RunAsSystem;\n import org.molgenis.semanticmapper.algorithmgenerator.bean.GeneratedAlgorithm;\n import org.molgenis.semanticmapper.algorithmgenerator.service.AlgorithmGeneratorService;\n@@ -104,14 +105,21 @@ public class AlgorithmServiceImpl implements AlgorithmService\n \tpublic Iterable<AlgorithmEvaluation> applyAlgorithm(Attribute targetAttribute, String algorithm,\n \t\t\tIterable<Entity> sourceEntities)\n \t{\n-\t\treturn stream(sourceEntities.spliterator(), false).map(entity ->\n-\t\t{\n+\t\treturn stream(sourceEntities.spliterator(), false).map(entity -> {\n \t\t\tAlgorithmEvaluation algorithmResult = new AlgorithmEvaluation(entity);\n \t\t\tObject derivedValue;\n \n \t\t\ttry\n \t\t\t{\n \t\t\t\tObject result = jsMagmaScriptEvaluator.eval(algorithm, entity);\n+\n+\t\t\t\t// jsMagmaScriptEvaluator.eval() catches and returns the error instead of throwing it\n+\t\t\t\t// so check instance of result object here\n+\t\t\t\tif (result instanceof ScriptException)\n+\t\t\t\t{\n+\t\t\t\t\treturn algorithmResult.errorMessage(((ScriptException) result).getMessage());\n+\t\t\t\t}\n+\n \t\t\t\tderivedValue = convert(result, targetAttribute);\n \t\t\t}\n \t\t\tcatch (RuntimeException e)\n@@ -135,8 +143,16 @@ public class AlgorithmServiceImpl implements AlgorithmService\n \t\t{\n \t\t\treturn null;\n \t\t}\n-\t\tObject value = jsMagmaScriptEvaluator.eval(algorithm, sourceEntity);\n-\t\treturn convert(value, attributeMapping.getTargetAttribute());\n+\t\tObject result = jsMagmaScriptEvaluator.eval(algorithm, sourceEntity);\n+\n+\t\t// jsMagmaScriptEvaluator.eval() catches and returns the error instead of throwing it\n+\t\t// so check instance of result object here\n+\t\tif (result instanceof ScriptException)\n+\t\t{\n+\t\t\tthrow new ScriptException(((ScriptException) result).getMessage(), ((ScriptException) result).getCause());\n+\t\t}\n+\n+\t\treturn convert(result, attributeMapping.getTargetAttribute());\n \t}\n \n \t@Override\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 756121952,
        "hostName": "spirals-bears",
        "totalMemory": 1293942784,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Aug 22, 2018 11:26:33 PM",
      "projectRootPomPath": "./workspace/molgenis/molgenis/336061452/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            1,
            1,
            0,
            0,
            497
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 499
        },
        "testing": {
          "stepDurations": [
            541
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 541
        },
        "cloning": {
          "stepDurations": [
            48
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 48
        }
      },
      "reproductionDateBeginning": "Aug 22, 2018 10:46:36 PM",
      "totalDuration": 2388
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1697,
        "numberRunning": 1699,
        "numberFailing": 2,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "org.testng.TestException",
            "isError": false,
            "occurrences": 2
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/molgenis/molgenis/361210220/molgenis-data-csv",
      "failingClasses": [
        {
          "numberPassing": 6,
          "numberRunning": 8,
          "testClass": "org.molgenis.data.csv.CsvIteratorTest",
          "numberFailing": 2,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "org.testng.TestException",
          "testMethod": "testIteratorValueHeaderMismatchOneNonEmptyValue",
          "testClass": "org.molgenis.data.csv.CsvIteratorTest",
          "detail": "\nMethod CsvIteratorTest.testIteratorValueHeaderMismatchOneNonEmptyValue()[pri:0, instance:org.molgenis.data.csv.CsvIteratorTest@6c4ce583] should have thrown an exception of class org.molgenis.data.MolgenisDataException",
          "isError": false
        },
        {
          "failureName": "org.testng.TestException",
          "testMethod": "testIteratorValueHeaderMismatch",
          "testClass": "org.molgenis.data.csv.CsvIteratorTest",
          "detail": "\nMethod CsvIteratorTest.testIteratorValueHeaderMismatch()[pri:0, instance:org.molgenis.data.csv.CsvIteratorTest@6c4ce583] should have thrown an exception of class org.molgenis.data.MolgenisDataException",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/molgenis/molgenis/builds/361993202",
        "date": "Apr 4, 2018 9:17:34 AM",
        "id": 361993202
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/molgenis/molgenis/builds/361210220",
        "date": "Apr 2, 2018 5:20:08 PM",
        "id": 361210220
      }
    },
    "repository": {
      "name": "molgenis-molgenis",
      "url": "https://github.com/molgenis/molgenis",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 8010626
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/molgenis/molgenis/commit/9d8d11a5aaa94a08d07ea865d4566d3f7e2b816f",
        "sha": "9d8d11a5aaa94a08d07ea865d4566d3f7e2b816f",
        "branchName": "master",
        "date": "Apr 4, 2018 8:55:06 AM",
        "repoName": "molgenis/molgenis"
      },
      "buggyBuild": {
        "url": "http://github.com/molgenis/molgenis/commit/1e3ddabf51bfa351fda75ec10f06ffda85c0e1f9",
        "sha": "1e3ddabf51bfa351fda75ec10f06ffda85c0e1f9",
        "branchName": "master",
        "date": "Mar 30, 2018 2:10:11 PM",
        "repoName": "molgenis/molgenis"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/molgenis-molgenis-361210220-361993202\n",
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 1,
        "numberDeleted": 10
      }
    },
    "type": "passing_passing",
    "diff": "diff --git a/molgenis-data-csv/src/main/java/org/molgenis/data/csv/CsvIterator.java b/molgenis-data-csv/src/main/java/org/molgenis/data/csv/CsvIterator.java\nindex e4a5fccc50..a87ffa655c 100644\n--- a/molgenis-data-csv/src/main/java/org/molgenis/data/csv/CsvIterator.java\n+++ b/molgenis-data-csv/src/main/java/org/molgenis/data/csv/CsvIterator.java\n@@ -21,6 +21,8 @@ import java.util.zip.ZipFile;\n \n import static java.lang.String.format;\n import static java.nio.charset.StandardCharsets.UTF_8;\n+import static java.util.Arrays.stream;\n+import static java.util.stream.Collectors.joining;\n import static org.molgenis.data.csv.CsvRepositoryCollection.MAC_ZIP;\n \n public class CsvIterator implements CloseableIterator<Entity>\n@@ -130,7 +132,7 @@ public class CsvIterator implements CloseableIterator<Entity>\n \t\t\t{\n \t\t\t\tString[] values = csvReader.readNext();\n \n-\t\t\t\tif ((values != null) && (values.length >= colNamesMap.size()))\n+\t\t\t\tif (values != null && values.length == colNamesMap.size())\n \t\t\t\t{\n \t\t\t\t\tList<String> valueList = Arrays.asList(values);\n \t\t\t\t\tfor (int i = 0; i < values.length; ++i)\n@@ -149,6 +151,13 @@ public class CsvIterator implements CloseableIterator<Entity>\n \t\t\t\t\t\tnext.set(name, valueList.get(colNamesMap.get(name)));\n \t\t\t\t\t}\n \t\t\t\t}\n+\t\t\t\telse if (values != null && (values.length > 1 || (values.length == 1 && values[0].length() > 0))\n+\t\t\t\t\t\t&& values.length < colNamesMap.size())\n+\t\t\t\t{\n+\t\t\t\t\tthrow new MolgenisDataException(\n+\t\t\t\t\t\t\tformat(\"Number of values (%d) doesn't match the number of headers (%d): [%s]\",\n+\t\t\t\t\t\t\t\t\tvalues.length, colNamesMap.size(), stream(values).collect(joining(\",\"))));\n+\t\t\t\t}\n \t\t\t\telse\n \t\t\t\t{\n \t\t\t\t\tnext = null;\n",
    "projectMetrics": {
      "numberSourceFiles": 1243,
      "numberLibrariesFailingModule": 56,
      "numberTestFiles": 518,
      "numberModules": 57
    },
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 138580368,
        "hostName": "spirals-bears",
        "totalMemory": 722993152,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Sep 2, 2018 7:53:09 AM",
      "projectRootPomPath": "./workspace/molgenis/molgenis/361210220/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            1,
            2,
            0,
            1,
            735
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 739
        },
        "testing": {
          "stepDurations": [
            210
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 210
        },
        "cloning": {
          "stepDurations": [
            45
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 45
        }
      },
      "reproductionDateBeginning": "Sep 2, 2018 6:59:37 AM",
      "totalDuration": 3204
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 953,
        "numberRunning": 955,
        "numberFailing": 2,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 1
          },
          {
            "failureName": "org.mockito.exceptions.misusing.UnnecessaryStubbingException",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 454
      },
      "failingModule": "/root/workspace/molgenis/molgenis/361993202/molgenis-data-security",
      "failingClasses": [
        {
          "numberPassing": 24,
          "numberRunning": 26,
          "testClass": "org.molgenis.data.security.owned.RowLevelSecurityRepositoryDecoratorTest",
          "numberFailing": 2,
          "numberErroring": 0,
          "numberSkipping": 70
        }
      ],
      "failureDetails": [
        {
          "failureName": "org.mockito.exceptions.misusing.UnnecessaryStubbingException",
          "testMethod": "tearDownAfterMethod",
          "testClass": "org.molgenis.data.security.owned.RowLevelSecurityRepositoryDecoratorTest",
          "detail": "\nUnnecessary stubbings detected.\nClean & maintainable test code requires zero unnecessary code.\nFollowing stubbings are unnecessary (click to navigate to relevant line of code):\n  1. -> at org.molgenis.data.security.owned.RowLevelSecurityRepositoryDecoratorTest.testFindOne(RowLevelSecurityRepositoryDecoratorTest.java:334)\n  2. -> at org.molgenis.data.security.owned.RowLevelSecurityRepositoryDecoratorTest.testFindOne(RowLevelSecurityRepositoryDecoratorTest.java:336)\nPlease remove unnecessary stubbings or use 'silent' option. More info: javadoc for UnnecessaryStubbingException class.",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testFindOne",
          "testClass": "org.molgenis.data.security.owned.RowLevelSecurityRepositoryDecoratorTest",
          "detail": "expected [null] but found [Mock for Entity, hashCode: 1448517199]",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/molgenis/molgenis/builds/362486982",
        "date": "Apr 5, 2018 9:30:49 AM",
        "id": 362486982
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/molgenis/molgenis/builds/361993202",
        "date": "Apr 4, 2018 9:17:34 AM",
        "id": 361993202
      }
    },
    "repository": {
      "name": "molgenis-molgenis",
      "url": "https://github.com/molgenis/molgenis",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 8010626
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/molgenis/molgenis/commit/9553cdd759451ff1977d50a9384efd41ff941146",
        "sha": "9553cdd759451ff1977d50a9384efd41ff941146",
        "branchName": "master",
        "date": "Apr 5, 2018 9:07:25 AM",
        "repoName": "molgenis/molgenis"
      },
      "buggyBuild": {
        "url": "http://github.com/molgenis/molgenis/commit/9d8d11a5aaa94a08d07ea865d4566d3f7e2b816f",
        "sha": "9d8d11a5aaa94a08d07ea865d4566d3f7e2b816f",
        "branchName": "master",
        "date": "Apr 4, 2018 8:55:06 AM",
        "repoName": "molgenis/molgenis"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/molgenis-molgenis-361993202-362486982\n",
    "projectMetrics": {
      "numberSourceFiles": 1243,
      "numberLibrariesFailingModule": 52,
      "numberTestFiles": 518,
      "numberModules": 57
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 8,
        "numberDeleted": 1
      }
    },
    "diff": "diff --git a/molgenis-data-security/src/main/java/org/molgenis/data/security/owned/AbstractRowLevelSecurityRepositoryDecorator.java b/molgenis-data-security/src/main/java/org/molgenis/data/security/owned/AbstractRowLevelSecurityRepositoryDecorator.java\nindex d85df4bcc3..908e2b52d9 100644\n--- a/molgenis-data-security/src/main/java/org/molgenis/data/security/owned/AbstractRowLevelSecurityRepositoryDecorator.java\n+++ b/molgenis-data-security/src/main/java/org/molgenis/data/security/owned/AbstractRowLevelSecurityRepositoryDecorator.java\n@@ -75,14 +75,7 @@ public abstract class AbstractRowLevelSecurityRepositoryDecorator<E extends Enti\n \t@Override\n \tpublic E findOne(Query<E> q)\n \t{\n-\t\tE entity = delegate().findOne(q);\n-\n-\t\tif (entity != null && !isOperationPermitted(entity, Action.READ))\n-\t\t{\n-\t\t\treturn null;\n-\t\t}\n-\n-\t\treturn entity;\n+\t\treturn findAllPermitted(q, Action.READ).findFirst().orElse(null);\n \t}\n \n \t@Override\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 616997576,
        "hostName": "spirals-bears",
        "totalMemory": 862978048,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Sep 2, 2018 7:41:27 AM",
      "projectRootPomPath": "./workspace/molgenis/molgenis/361993202/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            1,
            1,
            0,
            1,
            801
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 804
        },
        "testing": {
          "stepDurations": [
            75
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 75
        },
        "cloning": {
          "stepDurations": [
            38
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 38
        }
      },
      "reproductionDateBeginning": "Sep 2, 2018 6:49:50 AM",
      "totalDuration": 3089
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1672,
        "numberRunning": 1673,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "org.testng.TestException",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/molgenis/molgenis/362517584/molgenis-data-excel",
      "failingClasses": [
        {
          "numberPassing": 14,
          "numberRunning": 15,
          "testClass": "org.molgenis.data.excel.ExcelRepositoryTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "org.testng.TestException",
          "testMethod": "iteratorDuplicateSheetHeader",
          "testClass": "org.molgenis.data.excel.ExcelRepositoryTest",
          "detail": "\nMethod ExcelRepositoryTest.iteratorDuplicateSheetHeader()[pri:0, instance:org.molgenis.data.excel.ExcelRepositoryTest@18ffca6c] should have thrown an exception of class org.molgenis.data.MolgenisDataException",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/molgenis/molgenis/builds/362989296",
        "date": "Apr 6, 2018 10:01:24 AM",
        "id": 362989296
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/molgenis/molgenis/builds/362517584",
        "date": "Apr 5, 2018 11:04:25 AM",
        "id": 362517584
      }
    },
    "repository": {
      "name": "molgenis-molgenis",
      "url": "https://github.com/molgenis/molgenis",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 8010626
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/molgenis/molgenis/commit/ece41bf216542f8af898b2e52eebcff601a709dd",
        "sha": "ece41bf216542f8af898b2e52eebcff601a709dd",
        "branchName": "master",
        "date": "Apr 6, 2018 9:40:30 AM",
        "repoName": "molgenis/molgenis"
      },
      "buggyBuild": {
        "url": "http://github.com/molgenis/molgenis/commit/b08235d75bc9c5177451e423d23136ac9a216e5c",
        "sha": "b08235d75bc9c5177451e423d23136ac9a216e5c",
        "branchName": "master",
        "date": "Apr 5, 2018 10:41:10 AM",
        "repoName": "molgenis/molgenis"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/molgenis-molgenis-362517584-362989296\n",
    "projectMetrics": {
      "numberSourceFiles": 1243,
      "numberLibrariesFailingModule": 61,
      "numberTestFiles": 518,
      "numberModules": 57
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 2,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 10,
        "numberDeleted": 5
      }
    },
    "diff": "diff --git a/molgenis-data-csv/src/main/java/org/molgenis/data/csv/CsvIterator.java b/molgenis-data-csv/src/main/java/org/molgenis/data/csv/CsvIterator.java\nindex a87ffa655c..54b2eaf334 100644\n--- a/molgenis-data-csv/src/main/java/org/molgenis/data/csv/CsvIterator.java\n+++ b/molgenis-data-csv/src/main/java/org/molgenis/data/csv/CsvIterator.java\n@@ -228,6 +228,10 @@ public class CsvIterator implements CloseableIterator<Entity>\n \t\tfor (int i = 0; i < headers.length; ++i)\n \t\t{\n \t\t\tString header = processCell(headers[i], true);\n+\t\t\tif (columnIdx.containsKey(header))\n+\t\t\t{\n+\t\t\t\tthrow new MolgenisDataException(format(\"Duplicate column header '%s' not allowed\", header));\n+\t\t\t}\n \t\t\tcolumnIdx.put(header, i);\n \t\t}\n \ndiff --git a/molgenis-data-excel/src/main/java/org/molgenis/data/excel/ExcelRepository.java b/molgenis-data-excel/src/main/java/org/molgenis/data/excel/ExcelRepository.java\nindex 53c585c890..85bf301b09 100644\n--- a/molgenis-data-excel/src/main/java/org/molgenis/data/excel/ExcelRepository.java\n+++ b/molgenis-data-excel/src/main/java/org/molgenis/data/excel/ExcelRepository.java\n@@ -191,7 +191,16 @@ public class ExcelRepository extends AbstractRepository\n \t\t\ttry\n \t\t\t{\n \t\t\t\tString header = AbstractCellProcessor.processCell(ExcelUtils.toValue(it.next()), true, cellProcessors);\n-\t\t\t\tif (null != header) columnIdx.put(header, i++);\n+\t\t\t\tif (header != null)\n+\t\t\t\t{\n+\t\t\t\t\tif (columnIdx.containsKey(header))\n+\t\t\t\t\t{\n+\t\t\t\t\t\tthrow new MolgenisDataException(\n+\t\t\t\t\t\t\t\tformat(\"Duplicate column header '%s' in sheet '%s' not allowed\", header,\n+\t\t\t\t\t\t\t\t\t\theaderRow.getSheet().getSheetName()));\n+\t\t\t\t\t}\n+\t\t\t\t\tcolumnIdx.put(header, i++);\n+\t\t\t\t}\n \t\t\t}\n \t\t\tcatch (final IllegalStateException ex)\n \t\t\t{\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 127006680,
        "hostName": "spirals-bears",
        "totalMemory": 556793856,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Sep 2, 2018 6:56:42 AM",
      "projectRootPomPath": "./workspace/molgenis/molgenis/362517584/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            1,
            1,
            0,
            0,
            772
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 774
        },
        "testing": {
          "stepDurations": [
            160
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 160
        },
        "cloning": {
          "stepDurations": [
            39
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 39
        }
      },
      "reproductionDateBeginning": "Sep 2, 2018 6:07:53 AM",
      "totalDuration": 2919
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 3021,
        "numberRunning": 3022,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.ClassCastException",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/molgenis/molgenis/367638811/molgenis-data-postgresql",
      "failingClasses": [
        {
          "numberPassing": 2,
          "numberRunning": 3,
          "testClass": "org.molgenis.data.postgresql.PostgreSqlEntityFactoryTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.ClassCastException",
          "testMethod": "createRowMapperOneToManyIntegerIds",
          "testClass": "org.molgenis.data.postgresql.PostgreSqlEntityFactoryTest",
          "detail": "[Ljava.lang.Integer; cannot be cast to [Ljava.lang.String;",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/molgenis/molgenis/builds/367645808",
        "date": "Apr 17, 2018 3:32:58 PM",
        "id": 367645808
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/molgenis/molgenis/builds/367638811",
        "date": "Apr 17, 2018 3:11:20 PM",
        "id": 367638811
      }
    },
    "repository": {
      "name": "molgenis-molgenis",
      "url": "https://github.com/molgenis/molgenis",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 8010626
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/molgenis/molgenis/commit/72111329e8e18c37c78a4e8f9de703f2a834a53c",
        "sha": "72111329e8e18c37c78a4e8f9de703f2a834a53c",
        "branchName": "master",
        "date": "Apr 17, 2018 3:08:26 PM",
        "repoName": "molgenis/molgenis"
      },
      "buggyBuild": {
        "url": "http://github.com/molgenis/molgenis/commit/b130683e9248d20cc98d4a4189e54ee43ba87f2c",
        "sha": "b130683e9248d20cc98d4a4189e54ee43ba87f2c",
        "branchName": "master",
        "date": "Apr 17, 2018 2:51:18 PM",
        "repoName": "molgenis/molgenis"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/molgenis-molgenis-367638811-367645808\n",
    "projectMetrics": {
      "numberSourceFiles": 1237,
      "numberLibrariesFailingModule": 72,
      "numberTestFiles": 518,
      "numberModules": 57
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 3,
        "numberDeleted": 3
      }
    },
    "diff": "diff --git a/molgenis-data-postgresql/src/main/java/org/molgenis/data/postgresql/PostgreSqlEntityFactory.java b/molgenis-data-postgresql/src/main/java/org/molgenis/data/postgresql/PostgreSqlEntityFactory.java\nindex c9df104408..3a98fb9118 100644\n--- a/molgenis-data-postgresql/src/main/java/org/molgenis/data/postgresql/PostgreSqlEntityFactory.java\n+++ b/molgenis-data-postgresql/src/main/java/org/molgenis/data/postgresql/PostgreSqlEntityFactory.java\n@@ -192,15 +192,15 @@ class PostgreSqlEntityFactory\n \t\t{\n \t\t\tEntityType entityType = attr.getRefEntity();\n \t\t\tObject value;\n-\t\t\tString[] postgreSqlMrefIds = (String[]) arrayValue.getArray();\n+\t\t\tObject[] postgreSqlMrefIds = (Object[]) arrayValue.getArray();\n \t\t\tif (postgreSqlMrefIds.length > 0 && postgreSqlMrefIds[0] != null)\n \t\t\t{\n \t\t\t\tAttribute idAttr = entityType.getIdAttribute();\n \t\t\t\tObject[] mrefIds = new Object[postgreSqlMrefIds.length];\n \t\t\t\tfor (int i = 0; i < postgreSqlMrefIds.length; ++i)\n \t\t\t\t{\n-\t\t\t\t\tString mrefIdStr = postgreSqlMrefIds[i];\n-\t\t\t\t\tObject mrefId = mrefIdStr != null ? convertMrefIdValue(mrefIdStr, idAttr) : null;\n+\t\t\t\t\tObject mrefIdRaw = postgreSqlMrefIds[i];\n+\t\t\t\t\tObject mrefId = mrefIdRaw != null ? convertMrefIdValue(mrefIdRaw.toString(), idAttr) : null;\n \t\t\t\t\tmrefIds[i] = mrefId;\n \t\t\t\t}\n \n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 350951640,
        "hostName": "spirals-bears",
        "totalMemory": 1488977920,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Sep 4, 2018 9:10:09 AM",
      "projectRootPomPath": "./workspace/molgenis/molgenis/367638811/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            4,
            4,
            1,
            0,
            726
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 735
        },
        "testing": {
          "stepDurations": [
            431
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 431
        },
        "cloning": {
          "stepDurations": [
            51
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 51
        }
      },
      "reproductionDateBeginning": "Sep 4, 2018 8:21:50 AM",
      "totalDuration": 2889
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1607,
        "numberRunning": 1608,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "org.testng.TestException",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/molgenis/molgenis/369514407/molgenis-data-import",
      "failingClasses": [
        {
          "numberPassing": 8,
          "numberRunning": 9,
          "testClass": "org.molgenis.data.importer.DataPersisterImplTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "org.testng.TestException",
          "testMethod": "testPersistMetaNoneDataAddAbstractEntityType",
          "testClass": "org.molgenis.data.importer.DataPersisterImplTest",
          "detail": "\nMethod DataPersisterImplTest.testPersistMetaNoneDataAddAbstractEntityType()[pri:0, instance:org.molgenis.data.importer.DataPersisterImplTest@5c70d7f0] should have thrown an exception of class org.molgenis.data.MolgenisDataException",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/molgenis/molgenis/builds/370006117",
        "date": "Apr 23, 2018 11:37:16 AM",
        "id": 370006117
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/molgenis/molgenis/builds/369514407",
        "date": "Apr 21, 2018 5:22:42 PM",
        "id": 369514407
      }
    },
    "repository": {
      "name": "molgenis-molgenis",
      "url": "https://github.com/molgenis/molgenis",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 8010626
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/molgenis/molgenis/commit/6c2f1aef91dd2bbf99814f8ab7d2c08e0cf7ffdc",
        "sha": "6c2f1aef91dd2bbf99814f8ab7d2c08e0cf7ffdc",
        "branchName": "master",
        "date": "Apr 23, 2018 11:14:21 AM",
        "repoName": "molgenis/molgenis"
      },
      "buggyBuild": {
        "url": "http://github.com/molgenis/molgenis/commit/8232a5510b92991b5ac185b3c8a2d7fa3e37bbbf",
        "sha": "8232a5510b92991b5ac185b3c8a2d7fa3e37bbbf",
        "branchName": "master",
        "date": "Apr 20, 2018 11:28:38 AM",
        "repoName": "molgenis/molgenis"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/molgenis-molgenis-369514407-370006117\n",
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 4,
        "numberDeleted": 7
      }
    },
    "type": "passing_passing",
    "diff": "diff --git a/molgenis-data-import/src/main/java/org/molgenis/data/importer/DataPersisterImpl.java b/molgenis-data-import/src/main/java/org/molgenis/data/importer/DataPersisterImpl.java\nindex f1374dbe60..e20630a422 100644\n--- a/molgenis-data-import/src/main/java/org/molgenis/data/importer/DataPersisterImpl.java\n+++ b/molgenis-data-import/src/main/java/org/molgenis/data/importer/DataPersisterImpl.java\n@@ -2,10 +2,7 @@ package org.molgenis.data.importer;\n \n import com.google.common.collect.ImmutableMap;\n import com.google.common.collect.Iterators;\n-import org.molgenis.data.DataService;\n-import org.molgenis.data.Entity;\n-import org.molgenis.data.Repository;\n-import org.molgenis.data.UnknownEntityException;\n+import org.molgenis.data.*;\n import org.molgenis.data.meta.EntityTypeDependencyResolver;\n import org.molgenis.data.meta.MetaDataService;\n import org.molgenis.data.meta.MetaDataServiceImpl.EntityTypeWithoutMappedByAttributes;\n@@ -83,6 +80,12 @@ public class DataPersisterImpl implements DataPersister\n \t\t\tEntityType persistedEntityType = persistEntityTypeFirstPass(entityType, metadataMode);\n \t\t\tif (dataProvider.hasEntities(entityType))\n \t\t\t{\n+\t\t\t\tif (entityType.isAbstract())\n+\t\t\t\t{\n+\t\t\t\t\tthrow new MolgenisDataException(\n+\t\t\t\t\t\t\tformat(\"Abstract entity type '%s' with id '%s' cannot contain entities\",\n+\t\t\t\t\t\t\t\t\tentityType.getLabel(), entityType.getId()));\n+\t\t\t\t}\n \t\t\t\tStream<Entity> entities = dataProvider.getEntities(entityType);\n \t\t\t\tlong nrPersistedEntities = persistEntitiesFirstPass(persistedEntityType, entities, dataMode);\n \t\t\t\tpersistResultBuilder.put(entityType.getId(), nrPersistedEntities);\n",
    "projectMetrics": {
      "numberSourceFiles": 1237,
      "numberLibrariesFailingModule": 78,
      "numberTestFiles": 518,
      "numberModules": 57
    },
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 403901336,
        "hostName": "spirals-bears",
        "totalMemory": 761790464,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Sep 5, 2018 11:20:00 PM",
      "projectRootPomPath": "./workspace/molgenis/molgenis/369514407/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            1,
            4,
            1,
            0,
            730
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 736
        },
        "testing": {
          "stepDurations": [
            142
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 142
        },
        "cloning": {
          "stepDurations": [
            37
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 37
        }
      },
      "reproductionDateBeginning": "Sep 5, 2018 10:24:04 PM",
      "totalDuration": 3349
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 212,
        "numberRunning": 213,
        "numberFailing": 0,
        "numberErroring": 1,
        "failures": [
          {
            "failureName": "java.lang.StackOverflowError",
            "isError": true,
            "occurrences": 1
          }
        ],
        "numberSkipping": 4
      },
      "failingModule": "/root/workspace/openzipkin/zipkin/332209085/zipkin2",
      "failingClasses": [
        {
          "numberPassing": 10,
          "numberRunning": 11,
          "testClass": "zipkin2.SpanTest",
          "numberFailing": 0,
          "numberErroring": 1,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.StackOverflowError",
          "testMethod": "canUsePrimitiveOverloads",
          "isError": true,
          "testClass": "zipkin2.SpanTest"
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/openzipkin/zipkin/builds/332270677",
        "date": "Jan 23, 2018 1:50:34 PM",
        "id": 332270677
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/openzipkin/zipkin/builds/332209085",
        "date": "Jan 23, 2018 11:05:25 AM",
        "id": 332209085
      }
    },
    "repository": {
      "name": "openzipkin-zipkin",
      "url": "https://github.com/openzipkin/zipkin",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 4576305
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/openzipkin/zipkin/commit/a5fafd189f532e9322d83b6634d2b13ed82f782a",
        "sha": "a5fafd189f532e9322d83b6634d2b13ed82f782a",
        "branchName": "master",
        "date": "Jan 23, 2018 1:19:12 PM",
        "repoName": "openzipkin/zipkin"
      },
      "buggyBuild": {
        "url": "http://github.com/openzipkin/zipkin/commit/4875a0578fb3a131cc24c2457b51753ee189f7ab",
        "sha": "4875a0578fb3a131cc24c2457b51753ee189f7ab",
        "branchName": "master",
        "date": "Jan 23, 2018 10:24:40 AM",
        "repoName": "openzipkin/zipkin"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/openzipkin-zipkin-332209085-332270677\n",
    "projectMetrics": {
      "numberSourceFiles": 251,
      "numberLibrariesFailingModule": 21,
      "numberTestFiles": 170,
      "numberModules": 31
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 2,
        "numberDeleted": 2
      }
    },
    "diff": "diff --git a/zipkin2/src/main/java/zipkin2/Span.java b/zipkin2/src/main/java/zipkin2/Span.java\nindex f2775c3e5a..defa6b6ad7 100644\n--- a/zipkin2/src/main/java/zipkin2/Span.java\n+++ b/zipkin2/src/main/java/zipkin2/Span.java\n@@ -466,7 +466,7 @@ public final class Span implements Serializable { // for Spark and Flink jobs\n \n     /** @see Span#debug */\n     public Builder debug(@Nullable Boolean debug) {\n-      if (debug != null) return debug(debug);\n+      if (debug != null) return debug((boolean) debug);\n       flags &= ~FLAG_DEBUG_SET;\n       return this;\n     }\n@@ -484,7 +484,7 @@ public final class Span implements Serializable { // for Spark and Flink jobs\n \n     /** @see Span#shared */\n     public Builder shared(@Nullable Boolean shared) {\n-      if (shared != null) return shared(shared);\n+      if (shared != null) return shared((boolean) shared);\n       flags &= ~FLAG_SHARED_SET;\n       return this;\n     }\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 252704560,
        "hostName": "spirals-bears",
        "totalMemory": 551550976,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Aug 21, 2018 6:09:36 PM",
      "projectRootPomPath": "./workspace/openzipkin/zipkin/332209085/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            1,
            0,
            0,
            284
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 285
        },
        "testing": {
          "stepDurations": [
            19
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 19
        },
        "cloning": {
          "stepDurations": [
            23
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 23
        }
      },
      "reproductionDateBeginning": "Aug 21, 2018 5:56:32 PM",
      "totalDuration": 775
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 7766,
        "numberRunning": 7767,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 31
      },
      "failingModule": "/root/workspace/raphw/byte-buddy/352481508/byte-buddy-dep",
      "failingClasses": [
        {
          "numberPassing": 37,
          "numberRunning": 38,
          "testClass": "net.bytebuddy.pool.TypePoolDefaultMethodDescriptionTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testSyntethicParameter",
          "testClass": "net.bytebuddy.pool.TypePoolDefaultMethodDescriptionTest",
          "detail": "\nExpected: is <true>\n     but: was <false>",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/raphw/byte-buddy/builds/352894244",
        "date": "Mar 13, 2018 4:33:07 PM",
        "id": 352894244
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/raphw/byte-buddy/builds/352481508",
        "date": "Mar 12, 2018 7:38:39 PM",
        "id": 352481508
      }
    },
    "repository": {
      "name": "raphw-byte-buddy",
      "url": "https://github.com/raphw/byte-buddy",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 14696091
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/raphw/byte-buddy/commit/79fd9bee51dfd50881c17d7e230e58750bf4008f",
        "sha": "79fd9bee51dfd50881c17d7e230e58750bf4008f",
        "branchName": "master",
        "date": "Mar 13, 2018 4:26:19 PM",
        "repoName": "raphw/byte-buddy"
      },
      "buggyBuild": {
        "url": "http://github.com/raphw/byte-buddy/commit/d4a9fa818fa4edd4b781b6572adb7ad1b8da8359",
        "sha": "d4a9fa818fa4edd4b781b6572adb7ad1b8da8359",
        "branchName": "master",
        "date": "Mar 12, 2018 7:33:04 PM",
        "repoName": "raphw/byte-buddy"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/raphw-byte-buddy-352481508-352894244\n",
    "projectMetrics": {
      "numberSourceFiles": 293,
      "numberLibrariesFailingModule": 12,
      "numberTestFiles": 694,
      "numberModules": 7
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 4,
        "numberDeleted": 20
      }
    },
    "diff": "diff --git a/byte-buddy-dep/src/main/java/net/bytebuddy/pool/TypePool.java b/byte-buddy-dep/src/main/java/net/bytebuddy/pool/TypePool.java\nindex 8e6a704a41..5161662447 100644\n--- a/byte-buddy-dep/src/main/java/net/bytebuddy/pool/TypePool.java\n+++ b/byte-buddy-dep/src/main/java/net/bytebuddy/pool/TypePool.java\n@@ -7413,6 +7413,16 @@ public interface TypePool {\n                  */\n                 private Label firstLabel;\n \n+                /**\n+                 * A shift index for visible parameters that indicates a deviation of the actual parameter index.\n+                 */\n+                private int visibleParameterShift;\n+\n+                /**\n+                 * A shift index for invisible parameters that indicates a deviation of the actual parameter index.\n+                 */\n+                private int invisibleParameterShift;\n+\n                 /**\n                  * The default value of the found method or {@code null} if no such value exists.\n                  */\n@@ -7502,9 +7512,21 @@ public interface TypePool {\n                     return new AnnotationExtractor(descriptor, annotationTokens, new ComponentTypeLocator.ForAnnotationProperty(Default.this, descriptor));\n                 }\n \n+                @Override\n+                public void visitAnnotableParameterCount(int count, boolean visible) {\n+                    if (visible) {\n+                        visibleParameterShift = Type.getMethodType(descriptor).getArgumentTypes().length - count;\n+                    } else {\n+                        invisibleParameterShift = Type.getMethodType(descriptor).getArgumentTypes().length - count;\n+                    }\n+                }\n+\n                 @Override\n                 public AnnotationVisitor visitParameterAnnotation(int index, String descriptor, boolean visible) {\n-                    return new AnnotationExtractor(descriptor, index, parameterAnnotationTokens, new ComponentTypeLocator.ForAnnotationProperty(Default.this, descriptor));\n+                    return new AnnotationExtractor(descriptor,\n+                            index + (visible ? visibleParameterShift : invisibleParameterShift),\n+                            parameterAnnotationTokens,\n+                            new ComponentTypeLocator.ForAnnotationProperty(Default.this, descriptor));\n                 }\n \n                 @Override\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 239684960,
        "hostName": "spirals-bears",
        "totalMemory": 1437073408,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Aug 29, 2018 8:27:19 AM",
      "projectRootPomPath": "./workspace/raphw/byte-buddy/352481508/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            4,
            0,
            0,
            1,
            116
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 121
        },
        "testing": {
          "stepDurations": [
            57
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 57
        },
        "cloning": {
          "stepDurations": [
            252
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 252
        }
      },
      "reproductionDateBeginning": "Aug 29, 2018 8:16:28 AM",
      "totalDuration": 643
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 7963,
        "numberRunning": 7964,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 31
      },
      "failingModule": "/root/workspace/raphw/byte-buddy/357569370/byte-buddy-dep",
      "failingClasses": [
        {
          "numberPassing": 70,
          "numberRunning": 71,
          "testClass": "net.bytebuddy.implementation.MethodCallTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testInstanceCallFromStaticMethod",
          "testClass": "net.bytebuddy.implementation.MethodCallTest",
          "detail": "Expected exception: java.lang.IllegalStateException",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/raphw/byte-buddy/builds/357575635",
        "date": "Mar 23, 2018 9:32:47 PM",
        "id": 357575635
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/raphw/byte-buddy/builds/357569370",
        "date": "Mar 23, 2018 9:19:33 PM",
        "id": 357569370
      }
    },
    "repository": {
      "name": "raphw-byte-buddy",
      "url": "https://github.com/raphw/byte-buddy",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 14696091
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/raphw/byte-buddy/commit/f41aa877f065fbc73259c66a91163b7e6e1dd73e",
        "sha": "f41aa877f065fbc73259c66a91163b7e6e1dd73e",
        "branchName": "master",
        "date": "Mar 23, 2018 9:27:04 PM",
        "repoName": "raphw/byte-buddy"
      },
      "buggyBuild": {
        "url": "http://github.com/raphw/byte-buddy/commit/2277181f100e0d2e4fa0526a30caf850982f5384",
        "sha": "2277181f100e0d2e4fa0526a30caf850982f5384",
        "branchName": "master",
        "date": "Mar 23, 2018 9:12:28 PM",
        "repoName": "raphw/byte-buddy"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/raphw-byte-buddy-357569370-357575635\n",
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 1,
        "numberDeleted": 4
      }
    },
    "type": "passing_passing",
    "diff": "diff --git a/byte-buddy-dep/src/main/java/net/bytebuddy/implementation/MethodCall.java b/byte-buddy-dep/src/main/java/net/bytebuddy/implementation/MethodCall.java\nindex d5fe569dc0..b7758633fb 100644\n--- a/byte-buddy-dep/src/main/java/net/bytebuddy/implementation/MethodCall.java\n+++ b/byte-buddy-dep/src/main/java/net/bytebuddy/implementation/MethodCall.java\n@@ -1445,6 +1445,9 @@ public class MethodCall implements Implementation.Composable {\n                                              TypeDescription instrumentedType,\n                                              Assigner assigner,\n                                              Assigner.Typing typing) {\n+                if (instrumentedMethod.isStatic() && !invokedMethod.isStatic() && !invokedMethod.isConstructor()) {\n+                    throw new IllegalStateException(\"Cannot invoke \" + invokedMethod + \" from \" + instrumentedMethod);\n+                }\n                 return new StackManipulation.Compound(\n                         invokedMethod.isStatic()\n                                 ? StackManipulation.Trivial.INSTANCE\n@@ -2008,10 +2011,10 @@ public class MethodCall implements Implementation.Composable {\n                 argumentLoaders.addAll(argumentLoader.make(implementationTarget.getInstrumentedType(), instrumentedMethod, invokedMethod));\n             }\n             ParameterList<?> parameters = invokedMethod.getParameters();\n-            Iterator<? extends ParameterDescription> parameterIterator = parameters.iterator();\n             if (parameters.size() != argumentLoaders.size()) {\n                 throw new IllegalStateException(invokedMethod + \" does not take \" + argumentLoaders.size() + \" arguments\");\n             }\n+            Iterator<? extends ParameterDescription> parameterIterator = parameters.iterator();\n             List<StackManipulation> argumentInstructions = new ArrayList<StackManipulation>(argumentLoaders.size());\n             for (ArgumentLoader argumentLoader : argumentLoaders) {\n                 argumentInstructions.add(argumentLoader.resolve(parameterIterator.next(), assigner, typing));\n",
    "projectMetrics": {
      "numberSourceFiles": 300,
      "numberLibrariesFailingModule": 12,
      "numberTestFiles": 705,
      "numberModules": 7
    },
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 987219032,
        "hostName": "spirals-bears",
        "totalMemory": 1775763456,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Aug 31, 2018 10:36:37 PM",
      "projectRootPomPath": "./workspace/raphw/byte-buddy/357569370/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            1,
            0,
            0,
            1,
            122
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 124
        },
        "testing": {
          "stepDurations": [
            61
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 61
        },
        "cloning": {
          "stepDurations": [
            241
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 241
        }
      },
      "reproductionDateBeginning": "Aug 31, 2018 10:26:11 PM",
      "totalDuration": 619
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 7686,
        "numberRunning": 7689,
        "numberFailing": 3,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "org.mockito.exceptions.verification.junit.ArgumentsAreDifferent",
            "isError": false,
            "occurrences": 3
          }
        ],
        "numberSkipping": 31
      },
      "failingModule": "/root/workspace/raphw/byte-buddy/363589915/byte-buddy-dep",
      "failingClasses": [
        {
          "numberPassing": 54,
          "numberRunning": 57,
          "testClass": "net.bytebuddy.implementation.bytecode.member.MethodInvocationTest",
          "numberFailing": 3,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "org.mockito.exceptions.verification.junit.ArgumentsAreDifferent",
          "testMethod": "testExplicitlyVirtualMethodInvocationOfInterfaceOfObjectMethod[1]",
          "testClass": "net.bytebuddy.implementation.bytecode.member.MethodInvocationTest",
          "detail": "\nArgument(s) are different! Wanted:\nmethodVisitor.visitMethodInsn(\n    182,\n    \"foo\",\n    \"bar\",\n    \"qux\",\n    false\n);\n-> at net.bytebuddy.implementation.bytecode.member.MethodInvocationTest.assertInvocation(MethodInvocationTest.java:218)\nActual invocation has different arguments:\nmethodVisitor.visitMethodInsn(\n    185,\n    \"baz\",\n    \"bar\",\n    \"qux\",\n    true\n);\n-> at net.bytebuddy.implementation.bytecode.member.MethodInvocation$Invocation.apply(MethodInvocation.java:307)\n",
          "isError": false
        },
        {
          "failureName": "org.mockito.exceptions.verification.junit.ArgumentsAreDifferent",
          "testMethod": "testExplicitlyVirtualMethodInvocationOfInterfaceOfObjectMethod[2]",
          "testClass": "net.bytebuddy.implementation.bytecode.member.MethodInvocationTest",
          "detail": "\nArgument(s) are different! Wanted:\nmethodVisitor.visitMethodInsn(\n    182,\n    \"foo\",\n    \"bar\",\n    \"qux\",\n    false\n);\n-> at net.bytebuddy.implementation.bytecode.member.MethodInvocationTest.assertInvocation(MethodInvocationTest.java:218)\nActual invocation has different arguments:\nmethodVisitor.visitMethodInsn(\n    185,\n    \"baz\",\n    \"bar\",\n    \"qux\",\n    true\n);\n-> at net.bytebuddy.implementation.bytecode.member.MethodInvocation$Invocation.apply(MethodInvocation.java:307)\n",
          "isError": false
        },
        {
          "failureName": "org.mockito.exceptions.verification.junit.ArgumentsAreDifferent",
          "testMethod": "testExplicitlyVirtualMethodInvocationOfInterfaceOfObjectMethod[0]",
          "testClass": "net.bytebuddy.implementation.bytecode.member.MethodInvocationTest",
          "detail": "\nArgument(s) are different! Wanted:\nmethodVisitor.visitMethodInsn(\n    182,\n    \"foo\",\n    \"bar\",\n    \"qux\",\n    false\n);\n-> at net.bytebuddy.implementation.bytecode.member.MethodInvocationTest.assertInvocation(MethodInvocationTest.java:218)\nActual invocation has different arguments:\nmethodVisitor.visitMethodInsn(\n    185,\n    \"baz\",\n    \"bar\",\n    \"qux\",\n    true\n);\n-> at net.bytebuddy.implementation.bytecode.member.MethodInvocation$Invocation.apply(MethodInvocation.java:307)\n",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/raphw/byte-buddy/builds/364299280",
        "date": "Apr 9, 2018 10:28:52 PM",
        "id": 364299280
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/raphw/byte-buddy/builds/363589915",
        "date": "Apr 7, 2018 10:40:43 PM",
        "id": 363589915
      }
    },
    "repository": {
      "name": "raphw-byte-buddy",
      "url": "https://github.com/raphw/byte-buddy",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 14696091
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/raphw/byte-buddy/commit/538627753daf5ab1227d5157e6f682711d2fb1ae",
        "sha": "538627753daf5ab1227d5157e6f682711d2fb1ae",
        "branchName": "master",
        "date": "Apr 9, 2018 10:23:38 PM",
        "repoName": "raphw/byte-buddy"
      },
      "buggyBuild": {
        "url": "http://github.com/raphw/byte-buddy/commit/7b3d0e22c09f7387ecfa82e0e16a8f281ba60d55",
        "sha": "7b3d0e22c09f7387ecfa82e0e16a8f281ba60d55",
        "branchName": "master",
        "date": "Apr 7, 2018 10:36:04 PM",
        "repoName": "raphw/byte-buddy"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/raphw-byte-buddy-363589915-364299280\n",
    "projectMetrics": {
      "numberSourceFiles": 300,
      "numberLibrariesFailingModule": 11,
      "numberTestFiles": 681,
      "numberModules": 7
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 4,
        "numberDeleted": 3
      }
    },
    "diff": "diff --git a/byte-buddy-dep/src/main/java/net/bytebuddy/implementation/bytecode/member/MethodInvocation.java b/byte-buddy-dep/src/main/java/net/bytebuddy/implementation/bytecode/member/MethodInvocation.java\nindex cd9296dbdc..95fedb843d 100644\n--- a/byte-buddy-dep/src/main/java/net/bytebuddy/implementation/bytecode/member/MethodInvocation.java\n+++ b/byte-buddy-dep/src/main/java/net/bytebuddy/implementation/bytecode/member/MethodInvocation.java\n@@ -317,9 +317,10 @@ public enum MethodInvocation {\n         public StackManipulation virtual(TypeDescription invocationTarget) {\n             if (methodDescription.isPrivate() || methodDescription.isConstructor() || methodDescription.isStatic()) {\n                 return Illegal.INSTANCE;\n-            }\n-            if (invocationTarget.isInterface()) {\n-                return INTERFACE.new Invocation(methodDescription, invocationTarget);\n+            } else if (invocationTarget.isInterface()) {\n+                return methodDescription.getDeclaringType().represents(Object.class)\n+                        ? this\n+                        : INTERFACE.new Invocation(methodDescription, invocationTarget);\n             } else {\n                 return VIRTUAL.new Invocation(methodDescription, invocationTarget);\n             }\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 709451064,
        "hostName": "spirals-bears",
        "totalMemory": 1901592576,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Sep 3, 2018 8:27:36 AM",
      "projectRootPomPath": "./workspace/raphw/byte-buddy/363589915/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            2,
            0,
            0,
            1,
            108
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 111
        },
        "testing": {
          "stepDurations": [
            57
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 57
        },
        "cloning": {
          "stepDurations": [
            247
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 247
        }
      },
      "reproductionDateBeginning": "Sep 3, 2018 8:17:30 AM",
      "totalDuration": 599
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 36,
        "numberRunning": 37,
        "numberFailing": 0,
        "numberErroring": 1,
        "failures": [
          {
            "failureName": "java.lang.NullPointerException",
            "isError": true,
            "occurrences": 1
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/spring-cloud/spring-cloud-gcp/330973656/spring-cloud-gcp-storage",
      "failingClasses": [
        {
          "numberPassing": 21,
          "numberRunning": 22,
          "testClass": "org.springframework.cloud.gcp.storage.GoogleStorageTests",
          "numberFailing": 0,
          "numberErroring": 1,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.NullPointerException",
          "testMethod": "testValidObjectWithUnderscore",
          "isError": true,
          "testClass": "org.springframework.cloud.gcp.storage.GoogleStorageTests"
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/spring-cloud/spring-cloud-gcp/builds/330980388",
        "date": "Jan 19, 2018 9:42:27 PM",
        "id": 330980388
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/spring-cloud/spring-cloud-gcp/builds/330973656",
        "date": "Jan 19, 2018 9:22:50 PM",
        "id": 330973656
      }
    },
    "repository": {
      "name": "spring-cloud-spring-cloud-gcp",
      "url": "https://github.com/spring-cloud/spring-cloud-gcp",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 86105877
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/spring-cloud/spring-cloud-gcp/commit/6c5a5cede49cfa8c546dcdbeef4b34c0e4e33f95",
        "sha": "6c5a5cede49cfa8c546dcdbeef4b34c0e4e33f95",
        "branchName": "master",
        "date": "Jan 19, 2018 9:37:02 PM",
        "repoName": "spring-cloud/spring-cloud-gcp"
      },
      "buggyBuild": {
        "url": "http://github.com/spring-cloud/spring-cloud-gcp/commit/a3a51c0a9c3ec700ac2f3de60c25073fbdbdd41a",
        "sha": "a3a51c0a9c3ec700ac2f3de60c25073fbdbdd41a",
        "branchName": "master",
        "date": "Jan 19, 2018 9:18:46 PM",
        "repoName": "spring-cloud/spring-cloud-gcp"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/spring-cloud-spring-cloud-gcp-330973656-330980388\n",
    "projectMetrics": {
      "numberSourceFiles": 95,
      "numberLibrariesFailingModule": 68,
      "numberTestFiles": 26,
      "numberModules": 33
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 1,
        "numberDeleted": 1
      }
    },
    "diff": "diff --git a/spring-cloud-gcp-storage/src/main/java/org/springframework/cloud/gcp/storage/GoogleStorageResourceObject.java b/spring-cloud-gcp-storage/src/main/java/org/springframework/cloud/gcp/storage/GoogleStorageResourceObject.java\nindex b17b3f598a..b0c77d7b20 100644\n--- a/spring-cloud-gcp-storage/src/main/java/org/springframework/cloud/gcp/storage/GoogleStorageResourceObject.java\n+++ b/spring-cloud-gcp-storage/src/main/java/org/springframework/cloud/gcp/storage/GoogleStorageResourceObject.java\n@@ -107,7 +107,7 @@ public class GoogleStorageResourceObject implements WritableResource {\n \n \tprivate BlobId getBlobId() throws IOException {\n \t\tURI uri = getURI();\n-\t\treturn BlobId.of(uri.getHost(),\n+\t\treturn BlobId.of(uri.getAuthority(),\n \t\t\t\turi.getPath().substring(1, uri.getPath().length()));\n \t}\n \n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 326736600,
        "hostName": "spirals-bears",
        "totalMemory": 457179136,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Aug 20, 2018 4:54:54 AM",
      "projectRootPomPath": "./workspace/spring-cloud/spring-cloud-gcp/330973656/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            8,
            4,
            0,
            400
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 412
        },
        "testing": {
          "stepDurations": [
            21
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 21
        },
        "cloning": {
          "stepDurations": [
            4
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 4
        }
      },
      "reproductionDateBeginning": "Aug 20, 2018 4:44:37 AM",
      "totalDuration": 610
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 158,
        "numberRunning": 159,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "Wanted but not invoked",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/spring-cloud/spring-cloud-gcp/353059531/spring-cloud-gcp-data-spanner",
      "failingClasses": [
        {
          "numberPassing": 21,
          "numberRunning": 22,
          "testClass": "org.springframework.cloud.gcp.data.spanner.core.SpannerTemplateTests",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "Wanted but not invoked",
          "testMethod": "countTest",
          "testClass": "org.springframework.cloud.gcp.data.spanner.core.SpannerTemplateTests",
          "detail": " Wanted but not invoked: resultSet.close(); -> at org.springframework.cloud.gcp.data.spanner.core.SpannerTemplateTests.countTest(SpannerTemplateTests.java:259)  However, there were exactly 2 interactions with this mock: resultSet.next(); -> at org.springframework.cloud.gcp.data.spanner.core.SpannerTemplate.count(SpannerTemplate.java:204)  resultSet.getLong(0); -> at org.springframework.cloud.gcp.data.spanner.core.SpannerTemplate.count(SpannerTemplate.java:205)  ",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/spring-cloud/spring-cloud-gcp/builds/353471273",
        "date": "Mar 14, 2018 7:21:49 PM",
        "id": 353471273
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/spring-cloud/spring-cloud-gcp/builds/353059531",
        "date": "Mar 13, 2018 10:25:32 PM",
        "id": 353059531
      }
    },
    "repository": {
      "name": "spring-cloud-spring-cloud-gcp",
      "url": "https://github.com/spring-cloud/spring-cloud-gcp",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 86105877
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/spring-cloud/spring-cloud-gcp/commit/eb5af6c7b2aca11a41adb6b1c481127c461aeb9e",
        "sha": "eb5af6c7b2aca11a41adb6b1c481127c461aeb9e",
        "branchName": "master",
        "date": "Mar 14, 2018 7:16:18 PM",
        "repoName": "spring-cloud/spring-cloud-gcp"
      },
      "buggyBuild": {
        "url": "http://github.com/spring-cloud/spring-cloud-gcp/commit/eda9b5608332afc63bcc131f4d36e70bf4de79c0",
        "sha": "eda9b5608332afc63bcc131f4d36e70bf4de79c0",
        "branchName": "master",
        "date": "Mar 13, 2018 10:20:15 PM",
        "repoName": "spring-cloud/spring-cloud-gcp"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/spring-cloud-spring-cloud-gcp-353059531-353471273\n",
    "projectMetrics": {
      "numberSourceFiles": 133,
      "numberLibrariesFailingModule": 92,
      "numberTestFiles": 46,
      "numberModules": 33
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 6,
        "numberDeleted": 4
      }
    },
    "diff": "diff --git a/spring-cloud-gcp-data-spanner/src/main/java/org/springframework/cloud/gcp/data/spanner/core/SpannerTemplate.java b/spring-cloud-gcp-data-spanner/src/main/java/org/springframework/cloud/gcp/data/spanner/core/SpannerTemplate.java\nindex c88da85b31..f08c7e3a2f 100644\n--- a/spring-cloud-gcp-data-spanner/src/main/java/org/springframework/cloud/gcp/data/spanner/core/SpannerTemplate.java\n+++ b/spring-cloud-gcp-data-spanner/src/main/java/org/springframework/cloud/gcp/data/spanner/core/SpannerTemplate.java\n@@ -199,10 +199,12 @@ public class SpannerTemplate implements SpannerOperations {\n \tpublic long count(Class entityClass) {\n \t\tSpannerPersistentEntity<?> persistentEntity = this.mappingContext\n \t\t\t\t.getPersistentEntity(entityClass);\n-\t\tResultSet resultSet = this.databaseClient.singleUse().executeQuery(Statement.of(\n-\t\t\t\tString.format(\"select count(*) from %s\", persistentEntity.tableName())));\n-\t\tresultSet.next();\n-\t\treturn resultSet.getLong(0);\n+\t\tStatement statement = Statement.of(String.format(\n+\t\t\t\t\"select count(*) from %s\", persistentEntity.tableName()));\n+\t\ttry (ResultSet resultSet = this.databaseClient.singleUse().executeQuery(statement)) {\n+\t\t\tresultSet.next();\n+\t\t\treturn resultSet.getLong(0);\n+\t\t}\n \t}\n \n \tprivate <T, U> void applyMutationWithClass(BiFunction<T, U, Mutation> function,\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 284921840,
        "hostName": "spirals-bears",
        "totalMemory": 1001914368,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Aug 29, 2018 3:06:31 PM",
      "projectRootPomPath": "./workspace/spring-cloud/spring-cloud-gcp/353059531/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            102,
            101,
            0,
            424
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 627
        },
        "testing": {
          "stepDurations": [
            41
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 41
        },
        "cloning": {
          "stepDurations": [
            4
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 4
        }
      },
      "reproductionDateBeginning": "Aug 29, 2018 2:52:03 PM",
      "totalDuration": 860
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 214,
        "numberRunning": 215,
        "numberFailing": 0,
        "numberErroring": 1,
        "failures": [
          {
            "failureName": "java.lang.IllegalArgumentException",
            "isError": true,
            "occurrences": 1
          }
        ],
        "numberSkipping": 3
      },
      "failingModule": "/root/workspace/spring-cloud/spring-cloud-gcp/365341004/spring-cloud-gcp-data-spanner",
      "failingClasses": [
        {
          "numberPassing": 0,
          "numberRunning": 1,
          "testClass": "org.springframework.cloud.gcp.data.spanner.repository.query.SqlSpannerQueryTests",
          "numberFailing": 0,
          "numberErroring": 1,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.IllegalArgumentException",
          "testMethod": "compoundNameConventionTest",
          "testClass": "org.springframework.cloud.gcp.data.spanner.repository.query.SqlSpannerQueryTests",
          "detail": "The number of tags does match the number of params.",
          "isError": true
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/spring-cloud/spring-cloud-gcp/builds/365349415",
        "date": "Apr 12, 2018 12:18:01 AM",
        "id": 365349415
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/spring-cloud/spring-cloud-gcp/builds/365341004",
        "date": "Apr 11, 2018 11:56:57 PM",
        "id": 365341004
      }
    },
    "repository": {
      "name": "spring-cloud-spring-cloud-gcp",
      "url": "https://github.com/spring-cloud/spring-cloud-gcp",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 86105877
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/spring-cloud/spring-cloud-gcp/commit/44e85eb12606d3e05941f82c9dbc42c681ce10f8",
        "sha": "44e85eb12606d3e05941f82c9dbc42c681ce10f8",
        "branchName": "master",
        "date": "Apr 12, 2018 12:11:23 AM",
        "repoName": "spring-cloud/spring-cloud-gcp"
      },
      "buggyBuild": {
        "url": "http://github.com/spring-cloud/spring-cloud-gcp/commit/3c9769396e788e1d859d3097b7cb5a0edd37e74e",
        "sha": "3c9769396e788e1d859d3097b7cb5a0edd37e74e",
        "branchName": "master",
        "date": "Apr 11, 2018 11:49:37 PM",
        "repoName": "spring-cloud/spring-cloud-gcp"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/spring-cloud-spring-cloud-gcp-365341004-365349415\n",
    "projectMetrics": {
      "numberSourceFiles": 154,
      "numberLibrariesFailingModule": 81,
      "numberTestFiles": 61,
      "numberModules": 31
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 25,
        "numberDeleted": 17
      }
    },
    "diff": "diff --git a/spring-cloud-gcp-data-spanner/src/main/java/org/springframework/cloud/gcp/data/spanner/repository/query/SqlSpannerQuery.java b/spring-cloud-gcp-data-spanner/src/main/java/org/springframework/cloud/gcp/data/spanner/repository/query/SqlSpannerQuery.java\nindex 4338726da0..aec7e68425 100644\n--- a/spring-cloud-gcp-data-spanner/src/main/java/org/springframework/cloud/gcp/data/spanner/repository/query/SqlSpannerQuery.java\n+++ b/spring-cloud-gcp-data-spanner/src/main/java/org/springframework/cloud/gcp/data/spanner/repository/query/SqlSpannerQuery.java\n@@ -18,7 +18,6 @@ package org.springframework.cloud.gcp.data.spanner.repository.query;\n \n import java.util.ArrayList;\n import java.util.List;\n-import java.util.StringJoiner;\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n \n@@ -72,7 +71,7 @@ public class SqlSpannerQuery implements RepositoryQuery {\n \t}\n \n \tprivate List<String> getTags(String sql) {\n-\t\tPattern pattern = Pattern.compile(\"@\\\\S+\");\n+\t\tPattern pattern = Pattern.compile(\"@[^\\\\{^\\\\s][\\\\S]+[^\\\\}^\\\\s]\");\n \t\tMatcher matcher = pattern.matcher(sql);\n \t\tList<String> tags = new ArrayList<>();\n \t\twhile (matcher.find()) {\n@@ -83,33 +82,30 @@ public class SqlSpannerQuery implements RepositoryQuery {\n \t}\n \n \tprivate String resolveEntityClassNames(String sql) {\n-\t\tStringJoiner joiner = new StringJoiner(\" \");\n-\t\tfor (String part : sql.split(\"\\\\s+\")) {\n-\t\t\tif (part.length() > 2 && part.startsWith(ENTITY_CLASS_NAME_BOOKEND)\n-\t\t\t\t\t&& part.endsWith(ENTITY_CLASS_NAME_BOOKEND)) {\n-\t\t\t\tString className = part.substring(1, part.length() - 1);\n-\t\t\t\ttry {\n-\t\t\t\t\tClass entityClass = Class.forName(className);\n-\t\t\t\t\tSpannerPersistentEntity spannerPersistentEntity = this.spannerMappingContext\n-\t\t\t\t\t\t\t.getPersistentEntity(entityClass);\n-\t\t\t\t\tif (spannerPersistentEntity == null) {\n-\t\t\t\t\t\tthrow new SpannerDataException(\n-\t\t\t\t\t\t\t\t\"The class used in the SQL statement is not a Spanner persistent entity: \"\n-\t\t\t\t\t\t\t\t\t\t+ className);\n-\t\t\t\t\t}\n-\t\t\t\t\tjoiner.add(spannerPersistentEntity.tableName());\n-\t\t\t\t}\n-\t\t\t\tcatch (ClassNotFoundException e) {\n+\t\tPattern pattern = Pattern.compile(\"\\\\:\\\\S+\\\\:\");\n+\t\tMatcher matcher = pattern.matcher(sql);\n+\t\tString result = sql;\n+\t\twhile (matcher.find()) {\n+\t\t\tString matched = matcher.group();\n+\t\t\tString className = matched.substring(1, matched.length() - 1);\n+\t\t\ttry {\n+\t\t\t\tClass entityClass = Class.forName(className);\n+\t\t\t\tSpannerPersistentEntity spannerPersistentEntity = this.spannerMappingContext\n+\t\t\t\t\t\t.getPersistentEntity(entityClass);\n+\t\t\t\tif (spannerPersistentEntity == null) {\n \t\t\t\t\tthrow new SpannerDataException(\n-\t\t\t\t\t\t\t\"The class name does not refer to an available entity type: \"\n+\t\t\t\t\t\t\t\"The class used in the SQL statement is not a Spanner persistent entity: \"\n \t\t\t\t\t\t\t\t\t+ className);\n \t\t\t\t}\n+\t\t\t\tresult = result.replace(matched, spannerPersistentEntity.tableName());\n \t\t\t}\n-\t\t\telse {\n-\t\t\t\tjoiner.add(part);\n+\t\t\tcatch (ClassNotFoundException e) {\n+\t\t\t\tthrow new SpannerDataException(\n+\t\t\t\t\t\t\"The class name does not refer to an available entity type: \"\n+\t\t\t\t\t\t\t\t+ className);\n \t\t\t}\n \t\t}\n-\t\treturn joiner.toString();\n+\t\treturn result;\n \t}\n \n \t@Override\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 455719608,
        "hostName": "spirals-bears",
        "totalMemory": 590872576,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Sep 3, 2018 12:51:57 PM",
      "projectRootPomPath": "./workspace/spring-cloud/spring-cloud-gcp/365341004/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            10,
            5,
            0,
            462
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 477
        },
        "testing": {
          "stepDurations": [
            34
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 34
        },
        "cloning": {
          "stepDurations": [
            5
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 5
        }
      },
      "reproductionDateBeginning": "Sep 3, 2018 12:40:11 PM",
      "totalDuration": 697
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 218,
        "numberRunning": 219,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "org.junit.ComparisonFailure",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 3
      },
      "failingModule": "/root/workspace/spring-cloud/spring-cloud-gcp/367417648/spring-cloud-gcp-data-spanner",
      "failingClasses": [
        {
          "numberPassing": 29,
          "numberRunning": 30,
          "testClass": "org.springframework.cloud.gcp.data.spanner.core.SpannerTemplateTests",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "testMethod": "findAllPageableNoOptionsTest",
          "testClass": "org.springframework.cloud.gcp.data.spanner.core.SpannerTemplateTests",
          "detail": "expected:<...able ORDER BY id ASC[ LIMIT 5 OFFSET 3];> but was:<...able ORDER BY id ASC[];>",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/spring-cloud/spring-cloud-gcp/builds/367667323",
        "date": "Apr 17, 2018 4:07:00 PM",
        "id": 367667323
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/spring-cloud/spring-cloud-gcp/builds/367417648",
        "date": "Apr 17, 2018 1:34:49 AM",
        "id": 367417648
      }
    },
    "repository": {
      "name": "spring-cloud-spring-cloud-gcp",
      "url": "https://github.com/spring-cloud/spring-cloud-gcp",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 86105877
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/spring-cloud/spring-cloud-gcp/commit/1bc8d0d634443ff0d67725fa5ebcb5beb7a7e588",
        "sha": "1bc8d0d634443ff0d67725fa5ebcb5beb7a7e588",
        "branchName": "master",
        "date": "Apr 17, 2018 3:58:56 PM",
        "repoName": "spring-cloud/spring-cloud-gcp"
      },
      "buggyBuild": {
        "url": "http://github.com/spring-cloud/spring-cloud-gcp/commit/fc3c3aedc7ffcd04c4913f11a373f6f0861a9d4b",
        "sha": "fc3c3aedc7ffcd04c4913f11a373f6f0861a9d4b",
        "branchName": "master",
        "date": "Apr 17, 2018 1:28:35 AM",
        "repoName": "spring-cloud/spring-cloud-gcp"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/spring-cloud-spring-cloud-gcp-367417648-367667323\n",
    "projectMetrics": {
      "numberSourceFiles": 157,
      "numberLibrariesFailingModule": 81,
      "numberTestFiles": 62,
      "numberModules": 32
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 2,
        "numberDeleted": 1
      }
    },
    "diff": "diff --git a/spring-cloud-gcp-data-spanner/src/main/java/org/springframework/cloud/gcp/data/spanner/core/SpannerTemplate.java b/spring-cloud-gcp-data-spanner/src/main/java/org/springframework/cloud/gcp/data/spanner/core/SpannerTemplate.java\nindex 05f19de1ce..65272b15cb 100644\n--- a/spring-cloud-gcp-data-spanner/src/main/java/org/springframework/cloud/gcp/data/spanner/core/SpannerTemplate.java\n+++ b/spring-cloud-gcp-data-spanner/src/main/java/org/springframework/cloud/gcp/data/spanner/core/SpannerTemplate.java\n@@ -178,7 +178,8 @@ public class SpannerTemplate implements SpannerOperations {\n \n \t@Override\n \tpublic <T> Page<T> queryAll(Class<T> entityClass, Pageable pageable) {\n-\t\treturn queryAll(entityClass, pageable, null);\n+\t\treturn queryAll(entityClass, pageable, new SpannerQueryOptions()\n+\t\t\t\t.setOffset(pageable.getOffset()).setLimit(pageable.getPageSize()));\n \t}\n \n \t@Override\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 275739272,
        "hostName": "spirals-bears",
        "totalMemory": 659554304,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Sep 4, 2018 11:48:47 AM",
      "projectRootPomPath": "./workspace/spring-cloud/spring-cloud-gcp/367417648/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            10,
            5,
            0,
            471
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 486
        },
        "testing": {
          "stepDurations": [
            32
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 32
        },
        "cloning": {
          "stepDurations": [
            4
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 4
        }
      },
      "reproductionDateBeginning": "Sep 4, 2018 11:36:53 AM",
      "totalDuration": 706
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 304,
        "numberRunning": 305,
        "numberFailing": 0,
        "numberErroring": 1,
        "failures": [
          {
            "failureName": "java.lang.NullPointerException",
            "isError": true,
            "occurrences": 1
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/spring-projects/spring-data-jpa/341944401",
      "failingClasses": [
        {
          "numberPassing": 0,
          "numberRunning": 1,
          "testClass": "org.springframework.data.jpa.util.JpaMetamodelUnitTests",
          "numberFailing": 0,
          "numberErroring": 1,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.NullPointerException",
          "testMethod": "skipsEntityTypesWithoutJavaTypeForIdentifierLookup",
          "isError": true,
          "testClass": "org.springframework.data.jpa.util.JpaMetamodelUnitTests"
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/spring-projects/spring-data-jpa/builds/342236799",
        "date": "Feb 16, 2018 10:02:54 AM",
        "id": 342236799
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/spring-projects/spring-data-jpa/builds/341944401",
        "date": "Feb 15, 2018 7:39:36 PM",
        "id": 341944401
      }
    },
    "repository": {
      "name": "spring-projects-spring-data-jpa",
      "url": "https://github.com/spring-projects/spring-data-jpa",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 1072845
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/spring-projects/spring-data-jpa/commit/e35a0987992cc23ba06c6ddc15ae8a01d023bc84",
        "sha": "e35a0987992cc23ba06c6ddc15ae8a01d023bc84",
        "branchName": "2.0.x",
        "date": "Feb 16, 2018 9:19:37 AM",
        "repoName": "spring-projects/spring-data-jpa"
      },
      "buggyBuild": {
        "url": "http://github.com/spring-projects/spring-data-jpa/commit/1f5e757448be44559770c8b7c6709da559e0d528",
        "sha": "1f5e757448be44559770c8b7c6709da559e0d528",
        "branchName": "2.0.x",
        "date": "Feb 15, 2018 4:12:15 PM",
        "repoName": "spring-projects/spring-data-jpa"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/spring-projects-spring-data-jpa-341944401-342236799\n",
    "projectMetrics": {
      "numberSourceFiles": 110,
      "numberLibrariesFailingModule": 73,
      "numberTestFiles": 246,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 1,
        "numberDeleted": 1
      }
    },
    "diff": "diff --git a/src/main/java/org/springframework/data/jpa/util/JpaMetamodel.java b/src/main/java/org/springframework/data/jpa/util/JpaMetamodel.java\nindex 52860b5ab7..3b3ee202ef 100644\n--- a/src/main/java/org/springframework/data/jpa/util/JpaMetamodel.java\n+++ b/src/main/java/org/springframework/data/jpa/util/JpaMetamodel.java\n@@ -76,7 +76,7 @@ public class JpaMetamodel {\n \tpublic boolean isSingleIdAttribute(Class<?> entity, String name, Class<?> attributeType) {\n \n \t\treturn metamodel.getEntities().stream() //\n-\t\t\t\t.filter(it -> it.getJavaType().equals(entity)) //\n+\t\t\t\t.filter(it -> entity.equals(it.getJavaType())) //\n \t\t\t\t.findFirst() //\n \t\t\t\t.flatMap(it -> getSingularIdAttribute(it)) //\n \t\t\t\t.filter(it -> it.getJavaType().equals(attributeType)) //\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 262591144,
        "hostName": "spirals-bears",
        "totalMemory": 381681664,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Aug 25, 2018 5:12:41 AM",
      "projectRootPomPath": "./workspace/spring-projects/spring-data-jpa/341944401/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            2,
            0,
            0,
            182
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 184
        },
        "testing": {
          "stepDurations": [
            46
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 46
        },
        "cloning": {
          "stepDurations": [
            6
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 6
        }
      },
      "reproductionDateBeginning": "Aug 25, 2018 5:04:30 AM",
      "totalDuration": 486
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 8,
        "numberRunning": 9,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/swagger-api/swagger-codegen/331677749/modules/swagger-codegen",
      "failingClasses": [
        {
          "numberPassing": 7,
          "numberRunning": 8,
          "testClass": "io.swagger.codegen.languages.JavaJAXRSSpecServerCodegenTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "verify_that_interfaceOnly_is_removed_from_additional_properties_if_false",
          "testClass": "io.swagger.codegen.languages.JavaJAXRSSpecServerCodegenTest",
          "detail": "expected [false] but found [true]",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/swagger-api/swagger-codegen/builds/331695545",
        "date": "Jan 22, 2018 9:11:45 AM",
        "id": 331695545
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/swagger-api/swagger-codegen/builds/331677749",
        "date": "Jan 22, 2018 7:49:31 AM",
        "id": 331677749
      }
    },
    "repository": {
      "name": "swagger-api-swagger-codegen",
      "url": "https://github.com/swagger-api/swagger-codegen",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 2006876
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/swagger-api/swagger-codegen/commit/5ea3d3bb1834c538f3ea40755c0c684d15848dfa",
        "sha": "5ea3d3bb1834c538f3ea40755c0c684d15848dfa",
        "branchName": "master",
        "date": "Jan 22, 2018 8:57:17 AM",
        "repoName": "swagger-api/swagger-codegen"
      },
      "buggyBuild": {
        "url": "http://github.com/swagger-api/swagger-codegen/commit/9e1bbe0c1c590f9e1651c8cbe9574bf72842efe5",
        "sha": "9e1bbe0c1c590f9e1651c8cbe9574bf72842efe5",
        "branchName": "master",
        "date": "Jan 22, 2018 7:35:34 AM",
        "repoName": "swagger-api/swagger-codegen"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/swagger-api-swagger-codegen-331677749-331695545\n",
    "projectMetrics": {
      "numberSourceFiles": 187,
      "numberLibrariesFailingModule": 57,
      "numberTestFiles": 188,
      "numberModules": 4
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 0,
        "numberDeleted": 3
      }
    },
    "diff": "diff --git a/modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/JavaJAXRSSpecServerCodegen.java b/modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/JavaJAXRSSpecServerCodegen.java\nindex ba0c837be3..f48b4e3409 100644\n--- a/modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/JavaJAXRSSpecServerCodegen.java\n+++ b/modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/JavaJAXRSSpecServerCodegen.java\n@@ -85,6 +85,9 @@ public class JavaJAXRSSpecServerCodegen extends AbstractJavaJAXRSServerCodegen\n         }\n         if (additionalProperties.containsKey(INTERFACE_ONLY)) {\n             interfaceOnly = Boolean.valueOf(additionalProperties.get(INTERFACE_ONLY).toString());\n+            if (!interfaceOnly) {\n+                additionalProperties.remove(INTERFACE_ONLY);\n+            }\n         }\n         if (interfaceOnly) {\n             // Change default artifactId if genereating interfaces only, before command line options are applied in base class.\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 327921168,
        "hostName": "spirals-bears",
        "totalMemory": 668467200,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Aug 21, 2018 10:26:26 PM",
      "projectRootPomPath": "./workspace/swagger-api/swagger-codegen/331677749/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            2,
            0,
            0,
            2,
            235
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 239
        },
        "testing": {
          "stepDurations": [
            10
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 10
        },
        "cloning": {
          "stepDurations": [
            51
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 51
        }
      },
      "reproductionDateBeginning": "Aug 21, 2018 10:18:12 PM",
      "totalDuration": 487
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 590,
        "numberRunning": 591,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 3
      },
      "failingModule": "/root/workspace/swagger-api/swagger-codegen/364149464/modules/swagger-codegen",
      "failingClasses": [
        {
          "numberPassing": 1,
          "numberRunning": 2,
          "testClass": "io.swagger.codegen.swaggeryaml.SwaggerYamlGeneratorTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testNumberAsStrings",
          "testClass": "io.swagger.codegen.swaggeryaml.SwaggerYamlGeneratorTest",
          "detail": "expected [true] but found [false]",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/swagger-api/swagger-codegen/builds/364892960",
        "date": "Apr 11, 2018 3:01:44 AM",
        "id": 364892960
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/swagger-api/swagger-codegen/builds/364149464",
        "date": "Apr 9, 2018 4:54:31 PM",
        "id": 364149464
      }
    },
    "repository": {
      "name": "swagger-api-swagger-codegen",
      "url": "https://github.com/swagger-api/swagger-codegen",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 2006876
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/swagger-api/swagger-codegen/commit/338b9c04b839d27e4597577b0670ad2695609aff",
        "sha": "338b9c04b839d27e4597577b0670ad2695609aff",
        "branchName": "master",
        "date": "Apr 11, 2018 2:48:40 AM",
        "repoName": "swagger-api/swagger-codegen"
      },
      "buggyBuild": {
        "url": "http://github.com/swagger-api/swagger-codegen/commit/c91ce17aeeeae2982b4a648333835377adc8d054",
        "sha": "c91ce17aeeeae2982b4a648333835377adc8d054",
        "branchName": "master",
        "date": "Apr 9, 2018 4:41:22 PM",
        "repoName": "swagger-api/swagger-codegen"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/swagger-api-swagger-codegen-364149464-364892960\n",
    "projectMetrics": {
      "numberSourceFiles": 195,
      "numberLibrariesFailingModule": 57,
      "numberTestFiles": 200,
      "numberModules": 4
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 3,
        "numberDeleted": 1
      }
    },
    "diff": "diff --git a/modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/SwaggerYamlGenerator.java b/modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/SwaggerYamlGenerator.java\nindex b07d88fe5f..e946e7ece5 100644\n--- a/modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/SwaggerYamlGenerator.java\n+++ b/modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/SwaggerYamlGenerator.java\n@@ -60,7 +60,9 @@ public class SwaggerYamlGenerator extends DefaultCodegen implements CodegenConfi\n     @Override\n     public void processSwagger(Swagger swagger) {\n         try {\n-            final ObjectMapper mapper = new ObjectMapper(new YAMLFactory().configure(YAMLGenerator.Feature.MINIMIZE_QUOTES, true));\n+            final ObjectMapper mapper = new ObjectMapper(new YAMLFactory()\n+                    .configure(YAMLGenerator.Feature.MINIMIZE_QUOTES, true)\n+                    .configure(YAMLGenerator.Feature.ALWAYS_QUOTE_NUMBERS_AS_STRINGS, true));\n             configureMapper(mapper);\n             String swaggerString = mapper.writeValueAsString(swagger);\n             String outputFile = outputFolder + File.separator + this.outputFile;\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 365683256,
        "hostName": "spirals-bears",
        "totalMemory": 973602816,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Sep 3, 2018 12:26:04 PM",
      "projectRootPomPath": "./workspace/swagger-api/swagger-codegen/364149464/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            1,
            1,
            0,
            2,
            239
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 243
        },
        "testing": {
          "stepDurations": [
            44
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 44
        },
        "cloning": {
          "stepDurations": [
            33
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 33
        }
      },
      "reproductionDateBeginning": "Sep 3, 2018 12:17:40 PM",
      "totalDuration": 497
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 6,
        "numberRunning": 7,
        "numberFailing": 0,
        "numberErroring": 1,
        "failures": [
          {
            "failureName": "java.lang.NullPointerException",
            "isError": true,
            "occurrences": 1
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/SzFMV2018-Tavasz/AutomatedCar/351742666",
      "failingClasses": [
        {
          "numberPassing": 0,
          "numberRunning": 1,
          "testClass": "hu.oe.nik.szfmv.visualization.DashboardTest",
          "numberFailing": 0,
          "numberErroring": 1,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.NullPointerException",
          "testMethod": "allRequiredValuesReceivedOnUpdate",
          "isError": true,
          "testClass": "hu.oe.nik.szfmv.visualization.DashboardTest"
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/SzFMV2018-Tavasz/AutomatedCar/builds/351759763",
        "date": "Mar 10, 2018 7:17:00 PM",
        "id": 351759763
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/SzFMV2018-Tavasz/AutomatedCar/builds/351742666",
        "date": "Mar 10, 2018 6:05:33 PM",
        "id": 351742666
      }
    },
    "repository": {
      "name": "SzFMV2018-Tavasz-AutomatedCar",
      "url": "https://github.com/SzFMV2018-Tavasz/AutomatedCar",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 117655293
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/SzFMV2018-Tavasz/AutomatedCar/commit/6a656ea5686fa563e85754282f059264f3664471",
        "sha": "6a656ea5686fa563e85754282f059264f3664471",
        "branchName": "sprint1/team4/dashboard_AnalogSpeedoTacho",
        "date": "Mar 10, 2018 7:13:13 PM",
        "repoName": "SzFMV2018-Tavasz/AutomatedCar"
      },
      "buggyBuild": {
        "url": "http://github.com/SzFMV2018-Tavasz/AutomatedCar/commit/4efc1e696af816519a2d0d5d52b7deb11240dcc2",
        "sha": "4efc1e696af816519a2d0d5d52b7deb11240dcc2",
        "branchName": "sprint1/team4/dashboard_AnalogSpeedoTacho",
        "date": "Mar 10, 2018 6:03:12 PM",
        "repoName": "SzFMV2018-Tavasz/AutomatedCar"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/SzFMV2018-Tavasz-AutomatedCar-351742666-351759763\n",
    "projectMetrics": {
      "numberSourceFiles": 19,
      "numberLibrariesFailingModule": 7,
      "numberTestFiles": 4,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 1,
        "numberDeleted": 1
      }
    },
    "diff": "diff --git a/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java b/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\nindex f75f81d204..4ba52c4316 100644\n--- a/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\n+++ b/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\n@@ -56,7 +56,7 @@ public class Dashboard extends JPanel {\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        repaint();\n     }\n \n     /**\n",
    "type": "failing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 397908648,
        "hostName": "spirals-bears",
        "totalMemory": 437256192,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Aug 28, 2018 10:07:41 PM",
      "projectRootPomPath": "./workspace/SzFMV2018-Tavasz/AutomatedCar/351742666/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            19
          ],
          "stepNames": [
            "CheckoutBuggyBuildCandidate",
            "BuildProjectBuggyBuildCandidate"
          ],
          "nbSteps": 2,
          "totalDuration": 19
        },
        "testing": {
          "stepDurations": [
            9
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidate"
          ],
          "nbSteps": 1,
          "totalDuration": 9
        },
        "cloning": {
          "stepDurations": [
            9
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 9
        }
      },
      "reproductionDateBeginning": "Aug 28, 2018 10:06:36 PM",
      "totalDuration": 62
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 85,
        "numberRunning": 90,
        "numberFailing": 0,
        "numberErroring": 5,
        "failures": [
          {
            "failureName": "java.lang.NullPointerException",
            "isError": true,
            "occurrences": 5
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/SzFMV2018-Tavasz/AutomatedCar/367688128",
      "failingClasses": [
        {
          "numberPassing": 1,
          "numberRunning": 4,
          "testClass": "hu.oe.nik.szfmv.automatedcar.sensors.UltrasonicSensorTest",
          "numberFailing": 0,
          "numberErroring": 3,
          "numberSkipping": 0
        },
        {
          "numberPassing": 0,
          "numberRunning": 2,
          "testClass": "hu.oe.nik.szfmv.detector.DetectorTest",
          "numberFailing": 0,
          "numberErroring": 2,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.NullPointerException",
          "testMethod": "testNearestObject",
          "isError": true,
          "testClass": "hu.oe.nik.szfmv.automatedcar.sensors.UltrasonicSensorTest"
        },
        {
          "failureName": "java.lang.NullPointerException",
          "testMethod": "testNearestObjectDimensions",
          "isError": true,
          "testClass": "hu.oe.nik.szfmv.automatedcar.sensors.UltrasonicSensorTest"
        },
        {
          "failureName": "java.lang.NullPointerException",
          "testMethod": "onlyCollidableObjects",
          "isError": true,
          "testClass": "hu.oe.nik.szfmv.detector.DetectorTest"
        },
        {
          "failureName": "java.lang.NullPointerException",
          "testMethod": "itHasAllWorldObjects",
          "isError": true,
          "testClass": "hu.oe.nik.szfmv.detector.DetectorTest"
        },
        {
          "failureName": "java.lang.NullPointerException",
          "testMethod": "testNearestObjectDistance",
          "isError": true,
          "testClass": "hu.oe.nik.szfmv.automatedcar.sensors.UltrasonicSensorTest"
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/SzFMV2018-Tavasz/AutomatedCar/builds/367699437",
        "date": "Apr 17, 2018 5:10:31 PM",
        "id": 367699437
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/SzFMV2018-Tavasz/AutomatedCar/builds/367688128",
        "date": "Apr 17, 2018 4:45:57 PM",
        "id": 367688128
      }
    },
    "repository": {
      "name": "SzFMV2018-Tavasz-AutomatedCar",
      "url": "https://github.com/SzFMV2018-Tavasz/AutomatedCar",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 117655293
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/SzFMV2018-Tavasz/AutomatedCar/commit/6ffd1edf63c63dc77bc5ce924fce78399524bcb5",
        "sha": "6ffd1edf63c63dc77bc5ce924fce78399524bcb5",
        "branchName": "sprint3/team4/detectorchange",
        "date": "Apr 17, 2018 5:07:17 PM",
        "repoName": "SzFMV2018-Tavasz/AutomatedCar"
      },
      "buggyBuild": {
        "url": "http://github.com/SzFMV2018-Tavasz/AutomatedCar/commit/cfb2118729b90c03d884f2902956ae000f06d926",
        "sha": "cfb2118729b90c03d884f2902956ae000f06d926",
        "branchName": "sprint3/team4/detectorchange",
        "date": "Apr 17, 2018 4:44:23 PM",
        "repoName": "SzFMV2018-Tavasz/AutomatedCar"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/SzFMV2018-Tavasz-AutomatedCar-367688128-367699437\n",
    "projectMetrics": {
      "numberSourceFiles": 57,
      "numberLibrariesFailingModule": 7,
      "numberTestFiles": 20,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 3,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 5,
        "numberDeleted": 6
      }
    },
    "diff": "diff --git a/src/main/java/hu/oe/nik/szfmv/Main.java b/src/main/java/hu/oe/nik/szfmv/Main.java\nindex afc03a2791..116975ab3c 100644\n--- a/src/main/java/hu/oe/nik/szfmv/Main.java\n+++ b/src/main/java/hu/oe/nik/szfmv/Main.java\n@@ -32,10 +32,6 @@ public class Main {\n \n         // create the world\n         World w = new World(worldWidth, worldHeight);\n-        //create detector\n-        Detector d = Detector.getDetector();\n-        //set detector's list\n-        d.setWorldObjects(w.getWorldObjects());\n         // create an automated car\n         AutomatedCar car = new AutomatedCar(carX, carY, \"car_2_white.png\");\n         // add car to the world\ndiff --git a/src/main/java/hu/oe/nik/szfmv/automatedcar/AutomatedCar.java b/src/main/java/hu/oe/nik/szfmv/automatedcar/AutomatedCar.java\nindex a3eec69936..b82e0419c6 100644\n--- a/src/main/java/hu/oe/nik/szfmv/automatedcar/AutomatedCar.java\n+++ b/src/main/java/hu/oe/nik/szfmv/automatedcar/AutomatedCar.java\n@@ -7,6 +7,7 @@ import hu.oe.nik.szfmv.automatedcar.bus.packets.input.ReadOnlyInputPacket;\n import hu.oe.nik.szfmv.automatedcar.bus.powertrain.ReadOnlyPowertrainPacket;\n import hu.oe.nik.szfmv.automatedcar.sensors.UltrasonicSensor;\n import hu.oe.nik.szfmv.automatedcar.systemcomponents.*;\n+import hu.oe.nik.szfmv.detector.classes.Detector;\n import hu.oe.nik.szfmv.environment.WorldObject;\n import org.apache.logging.log4j.LogManager;\n import org.apache.logging.log4j.Logger;\n@@ -62,7 +63,6 @@ public class AutomatedCar extends WorldObject {\n         powertrainSystem = new PowertrainSystem(virtualFunctionBus);\n         steeringSystem = new SteeringSystem(virtualFunctionBus);\n         steeringWheel = new SteeringWheel(virtualFunctionBus);\n-\n         new Driver(virtualFunctionBus);\n     }\n \ndiff --git a/src/main/java/hu/oe/nik/szfmv/environment/World.java b/src/main/java/hu/oe/nik/szfmv/environment/World.java\nindex 4632d0a432..6c57c6c707 100644\n--- a/src/main/java/hu/oe/nik/szfmv/environment/World.java\n+++ b/src/main/java/hu/oe/nik/szfmv/environment/World.java\n@@ -14,6 +14,7 @@ public class World implements IWorld {\n     private int width = 0;\n     private int height = 0;\n     private List<WorldObject> worldObjects = new ArrayList<>();\n+    Detector d;\n \n     /**\n      * Creates the virtual world with the given dimension.\n@@ -26,6 +27,10 @@ public class World implements IWorld {\n         this.width = width;\n         this.height = height;\n         this.build(\"src/main/resources/test.xml\");\n+        //create detector\n+        d = Detector.getDetector();\n+        //set detector's list\n+        d.setWorldObjects(getWorldObjects());\n     }\n \n     public int getWidth() {\n",
    "type": "failing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 355291392,
        "hostName": "spirals-bears",
        "totalMemory": 415760384,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Sep 3, 2018 9:45:30 PM",
      "projectRootPomPath": "./workspace/SzFMV2018-Tavasz/AutomatedCar/367688128/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            20
          ],
          "stepNames": [
            "CheckoutBuggyBuildCandidate",
            "BuildProjectBuggyBuildCandidate"
          ],
          "nbSteps": 2,
          "totalDuration": 20
        },
        "testing": {
          "stepDurations": [
            14
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidate"
          ],
          "nbSteps": 1,
          "totalDuration": 14
        },
        "cloning": {
          "stepDurations": [
            10
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 10
        }
      },
      "reproductionDateBeginning": "Sep 3, 2018 9:44:13 PM",
      "totalDuration": 74
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 104,
        "numberRunning": 110,
        "numberFailing": 6,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "org.junit.ComparisonFailure",
            "isError": false,
            "occurrences": 6
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/thelastpickle/cassandra-reaper/364710673/src/server",
      "failingClasses": [
        {
          "numberPassing": 6,
          "numberRunning": 12,
          "testClass": "io.cassandrareaper.resources.view.NodesStatusTest",
          "numberFailing": 6,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "testMethod": "testParseIPv6Endpoint21WithHostnameStatusString",
          "testClass": "io.cassandrareaper.resources.view.NodesStatusTest",
          "detail": "expected:<NORMAL - [D]OWN> but was:<NORMAL - [UNKN]OWN>",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "testMethod": "testParseIPv6EndpointCassandraWithHostnameStatusString",
          "testClass": "io.cassandrareaper.resources.view.NodesStatusTest",
          "detail": "expected:<NORMAL - [D]OWN> but was:<NORMAL - [UNKN]OWN>",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "testMethod": "testParseIPv6Endpoint21StatusString",
          "testClass": "io.cassandrareaper.resources.view.NodesStatusTest",
          "detail": "expected:<NORMAL - [D]OWN> but was:<NORMAL - [UNKN]OWN>",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "testMethod": "testParseIPv6Endpoint22StatusString",
          "testClass": "io.cassandrareaper.resources.view.NodesStatusTest",
          "detail": "expected:<NORMAL - [D]OWN> but was:<NORMAL - [UNKN]OWN>",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "testMethod": "testParseIPv6EndpointCassandraStatusString",
          "testClass": "io.cassandrareaper.resources.view.NodesStatusTest",
          "detail": "expected:<NORMAL - [D]OWN> but was:<NORMAL - [UNKN]OWN>",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "testMethod": "testParseIPv6Endpoint22WithHostnameStatusString",
          "testClass": "io.cassandrareaper.resources.view.NodesStatusTest",
          "detail": "expected:<NORMAL - [D]OWN> but was:<NORMAL - [UNKN]OWN>",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/thelastpickle/cassandra-reaper/builds/365484062",
        "date": "Apr 12, 2018 10:09:19 AM",
        "id": 365484062
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/thelastpickle/cassandra-reaper/builds/364710673",
        "date": "Apr 10, 2018 8:07:45 PM",
        "id": 364710673
      }
    },
    "repository": {
      "name": "thelastpickle-cassandra-reaper",
      "url": "https://github.com/thelastpickle/cassandra-reaper",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 70856121
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/thelastpickle/cassandra-reaper/commit/6a59feda5c2fd4ea6f05a41a8437c3749e29fd21",
        "sha": "6a59feda5c2fd4ea6f05a41a8437c3749e29fd21",
        "branchName": "master",
        "date": "Apr 12, 2018 9:43:16 AM",
        "repoName": "thelastpickle/cassandra-reaper"
      },
      "buggyBuild": {
        "url": "http://github.com/thelastpickle/cassandra-reaper/commit/53b8f9c03ce3e8e1905aeb658bde238925195891",
        "sha": "53b8f9c03ce3e8e1905aeb658bde238925195891",
        "branchName": "master",
        "date": "Apr 10, 2018 7:00:43 PM",
        "repoName": "thelastpickle/cassandra-reaper"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/thelastpickle-cassandra-reaper-364710673-365484062\n",
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 2,
        "numberDeleted": 4
      }
    },
    "type": "passing_passing",
    "diff": "diff --git a/src/server/src/main/java/io/cassandrareaper/resources/view/NodesStatus.java b/src/server/src/main/java/io/cassandrareaper/resources/view/NodesStatus.java\nindex a97f7f8c41..9d35544a4f 100644\n--- a/src/server/src/main/java/io/cassandrareaper/resources/view/NodesStatus.java\n+++ b/src/server/src/main/java/io/cassandrareaper/resources/view/NodesStatus.java\n@@ -41,8 +41,10 @@ public final class NodesStatus {\n   private static final List<Pattern> ENDPOINT_HOSTID_PATTERNS = Lists.newArrayList();\n   private static final List<Pattern> ENDPOINT_TOKENS_PATTERNS = Lists.newArrayList();\n \n-  private static final Pattern ENDPOINT_NAME_PATTERN\n+  private static final Pattern ENDPOINT_NAME_PATTERN_IP4\n       = Pattern.compile(\"^([0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3})\", Pattern.MULTILINE | Pattern.DOTALL);\n+  private static final Pattern ENDPOINT_NAME_PATTERN_IP6\n+          = Pattern.compile(\"^([0-9:a-fA-F\\\\]\\\\[]{3,41})\", Pattern.MULTILINE | Pattern.DOTALL);\n   private static final Pattern ENDPOINT_STATUS_22_PATTERN = Pattern.compile(\"(STATUS):([0-9]*):(\\\\w+)\");\n   private static final Pattern ENDPOINT_DC_22_PATTERN = Pattern.compile(\"(DC):([0-9]*):([0-9a-zA-Z-\\\\.]+)\");\n   private static final Pattern ENDPOINT_RACK_22_PATTERN = Pattern.compile(\"(RACK):([0-9]*):([0-9a-zA-Z-\\\\.]+)\");\n@@ -181,7 +183,7 @@ public final class NodesStatus {\n   }\n \n   private static void initPatterns() {\n-    ENDPOINT_NAME_PATTERNS.add(ENDPOINT_NAME_PATTERN);\n+    ENDPOINT_NAME_PATTERNS.addAll(Arrays.asList(ENDPOINT_NAME_PATTERN_IP4, ENDPOINT_NAME_PATTERN_IP6));\n     ENDPOINT_STATUS_PATTERNS.addAll(Arrays.asList(ENDPOINT_STATUS_22_PATTERN, ENDPOINT_STATUS_21_PATTERN));\n     ENDPOINT_DC_PATTERNS.addAll(Arrays.asList(ENDPOINT_DC_22_PATTERN, ENDPOINT_DC_21_PATTERN));\n     ENDPOINT_RACK_PATTERNS.addAll(Arrays.asList(ENDPOINT_RACK_22_PATTERN, ENDPOINT_RACK_21_PATTERN));\n",
    "projectMetrics": {
      "numberSourceFiles": 84,
      "numberLibrariesFailingModule": 182,
      "numberTestFiles": 37,
      "numberModules": 1
    },
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 296824136,
        "hostName": "spirals-bears",
        "totalMemory": 428343296,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Sep 3, 2018 3:13:04 AM",
      "projectRootPomPath": "./workspace/thelastpickle/cassandra-reaper/364710673/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            70
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 70
        },
        "testing": {
          "stepDurations": [
            44
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 44
        },
        "cloning": {
          "stepDurations": [
            7
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 7
        }
      },
      "reproductionDateBeginning": "Sep 3, 2018 3:08:19 AM",
      "totalDuration": 280
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 112,
        "numberRunning": 114,
        "numberFailing": 2,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 2
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/thelastpickle/cassandra-reaper/365484062/src/server",
      "failingClasses": [
        {
          "numberPassing": 4,
          "numberRunning": 6,
          "testClass": "io.cassandrareaper.resources.view.RepairRunStatusTest",
          "numberFailing": 2,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testAbortedRepairDuration",
          "testClass": "io.cassandrareaper.resources.view.RepairRunStatusTest",
          "detail": "expected:<30 seconds> but was:<null>",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testRunningRepairDuration",
          "testClass": "io.cassandrareaper.resources.view.RepairRunStatusTest",
          "detail": "expected:<1 minute 0 seconds> but was:<null>",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/thelastpickle/cassandra-reaper/builds/365554427",
        "date": "Apr 12, 2018 2:18:52 PM",
        "id": 365554427
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/thelastpickle/cassandra-reaper/builds/365484062",
        "date": "Apr 12, 2018 10:09:19 AM",
        "id": 365484062
      }
    },
    "repository": {
      "name": "thelastpickle-cassandra-reaper",
      "url": "https://github.com/thelastpickle/cassandra-reaper",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 70856121
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/thelastpickle/cassandra-reaper/commit/3c0a1fae7bf21f40be319464bcd16ebf50397417",
        "sha": "3c0a1fae7bf21f40be319464bcd16ebf50397417",
        "branchName": "master",
        "date": "Apr 12, 2018 1:03:56 PM",
        "repoName": "thelastpickle/cassandra-reaper"
      },
      "buggyBuild": {
        "url": "http://github.com/thelastpickle/cassandra-reaper/commit/6a59feda5c2fd4ea6f05a41a8437c3749e29fd21",
        "sha": "6a59feda5c2fd4ea6f05a41a8437c3749e29fd21",
        "branchName": "master",
        "date": "Apr 12, 2018 9:43:16 AM",
        "repoName": "thelastpickle/cassandra-reaper"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/thelastpickle-cassandra-reaper-365484062-365554427\n",
    "projectMetrics": {
      "numberSourceFiles": 84,
      "numberLibrariesFailingModule": 182,
      "numberTestFiles": 37,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 21,
        "numberDeleted": 28
      }
    },
    "diff": "diff --git a/src/server/src/main/java/io/cassandrareaper/resources/view/RepairRunStatus.java b/src/server/src/main/java/io/cassandrareaper/resources/view/RepairRunStatus.java\nindex 0c81b9243c..b4ca87e978 100644\n--- a/src/server/src/main/java/io/cassandrareaper/resources/view/RepairRunStatus.java\n+++ b/src/server/src/main/java/io/cassandrareaper/resources/view/RepairRunStatus.java\n@@ -19,6 +19,7 @@ import io.cassandrareaper.core.RepairUnit;\n \n import java.util.Collection;\n import java.util.UUID;\n+\n import javax.annotation.Nullable;\n \n import com.fasterxml.jackson.annotation.JsonIgnore;\n@@ -67,6 +68,8 @@ public final class RepairRunStatus {\n   @JsonIgnore\n   private DateTime pauseTime;\n \n+  @JsonIgnore private DateTime currentTime;\n+\n   @JsonProperty\n   private double intensity;\n \n@@ -139,6 +142,7 @@ public final class RepairRunStatus {\n     this.startTime = startTime;\n     this.endTime = endTime;\n     this.pauseTime = pauseTime;\n+    this.currentTime = DateTime.now();\n     this.intensity = roundDoubleNicely(intensity);\n     this.incrementalRepair = incrementalRepair;\n     this.totalSegments = totalSegments;\n@@ -150,14 +154,31 @@ public final class RepairRunStatus {\n     this.datacenters = datacenters;\n     this.blacklistedTables = blacklistedTables;\n \n-    if (startTime == null || endTime == null) {\n+    if (startTime == null) {\n       duration = null;\n     } else {\n-      duration = DurationFormatUtils.formatDurationWords(\n-          new Duration(startTime.toInstant(), endTime.toInstant()).getMillis(), true, false);\n+      if (state == RepairRun.RunState.RUNNING || state == RepairRun.RunState.PAUSED) {\n+        duration =\n+            DurationFormatUtils.formatDurationWords(\n+                new Duration(startTime.toInstant(), currentTime.toInstant()).getMillis(),\n+                true,\n+                false);\n+      } else if (state == RepairRun.RunState.ABORTED) {\n+        duration =\n+            DurationFormatUtils.formatDurationWords(\n+                new Duration(startTime.toInstant(), pauseTime.toInstant()).getMillis(),\n+                true,\n+                false);\n+      } else if (endTime != null) {\n+        duration =\n+            DurationFormatUtils.formatDurationWords(\n+                new Duration(startTime.toInstant(), endTime.toInstant()).getMillis(), true, false);\n+      } else {\n+        duration = null;\n+      }\n     }\n \n-    if (startTime == null || (endTime != null && endTime.isAfter(startTime))) {\n+    if (startTime == null) {\n       estimatedTimeOfArrival = null;\n     } else {\n       if (state == RepairRun.RunState.ERROR\n@@ -247,6 +268,18 @@ public final class RepairRunStatus {\n     }\n   }\n \n+  @JsonProperty(\"current_time\")\n+  public void setCurrentTimeIso8601(String dateStr) {\n+    if (null != dateStr) {\n+      currentTime = ISODateTimeFormat.dateTimeNoMillis().parseDateTime(dateStr);\n+    }\n+  }\n+\n+  @JsonProperty(\"current_time\")\n+  public String getCurrentTimeIso8601() {\n+    return dateTimeToIso8601(currentTime);\n+  }\n+\n   public String getCause() {\n     return cause;\n   }\n@@ -335,6 +368,14 @@ public final class RepairRunStatus {\n     this.pauseTime = pauseTime;\n   }\n \n+  public DateTime getCurrentTime() {\n+    return currentTime;\n+  }\n+\n+  public void setCurrentTime(DateTime currentTime) {\n+    this.currentTime = currentTime;\n+  }\n+\n   public double getIntensity() {\n     return intensity;\n   }\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 284905496,
        "hostName": "spirals-bears",
        "totalMemory": 423100416,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Sep 3, 2018 3:09:52 AM",
      "projectRootPomPath": "./workspace/thelastpickle/cassandra-reaper/365484062/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            1,
            71
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 72
        },
        "testing": {
          "stepDurations": [
            46
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 46
        },
        "cloning": {
          "stepDurations": [
            8
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 8
        }
      },
      "reproductionDateBeginning": "Sep 3, 2018 3:05:41 AM",
      "totalDuration": 245
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 153,
        "numberRunning": 154,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "junit.framework.ComparisonFailure",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/apereo/java-cas-client/408206584/cas-client-core",
      "failingClasses": [
        {
          "numberPassing": 25,
          "numberRunning": 26,
          "testClass": "org.jasig.cas.client.util.CommonUtilsTests",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "junit.framework.ComparisonFailure",
          "testMethod": "testConstructServiceUrlWithServerNameContainingPathAndSchema",
          "testClass": "org.jasig.cas.client.util.CommonUtilsTests",
          "detail": "null expected:<...//www.my.server.com/[app/]hello/hithere/> but was:<...//www.my.server.com/[]hello/hithere/>",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/apereo/java-cas-client/builds/439486928",
        "date": "Oct 10, 2018 8:59:34 AM",
        "id": 439486928
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/apereo/java-cas-client/builds/408206584",
        "date": "Jul 25, 2018 10:12:15 PM",
        "id": 408206584
      }
    },
    "repository": {
      "name": "apereo-java-cas-client",
      "url": "https://github.com/apereo/java-cas-client",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 3645037
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/apereo/java-cas-client/commit/82c21161b9ef7abf0001ecfcd8800e669bd54b43",
        "sha": "82c21161b9ef7abf0001ecfcd8800e669bd54b43",
        "branchName": "master",
        "date": "Oct 10, 2018 8:22:17 AM",
        "repoName": "apereo/java-cas-client"
      },
      "buggyBuild": {
        "url": "http://github.com/apereo/java-cas-client/commit/ee9dcc61cdaab8ce9b9d50dddea06a31bd363529",
        "sha": "ee9dcc61cdaab8ce9b9d50dddea06a31bd363529",
        "branchName": "master",
        "date": "Jul 25, 2018 9:17:05 PM",
        "repoName": "apereo/java-cas-client"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/apereo-java-cas-client-408206584-439486928\n",
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 2,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 21,
        "numberDeleted": 10
      }
    },
    "type": "passing_passing",
    "diff": "diff --git a/cas-client-core/src/main/java/org/jasig/cas/client/util/CommonUtils.java b/cas-client-core/src/main/java/org/jasig/cas/client/util/CommonUtils.java\nindex 5cff27fde9..eb354beea8 100644\n--- a/cas-client-core/src/main/java/org/jasig/cas/client/util/CommonUtils.java\n+++ b/cas-client-core/src/main/java/org/jasig/cas/client/util/CommonUtils.java\n@@ -257,17 +257,7 @@ public final class CommonUtils {\n \n         return serverNames[0];\n     }\n-\n-    private static boolean serverNameContainsPort(final boolean containsScheme, final String serverName) {\n-        if (!containsScheme && serverName.contains(\":\")) {\n-            return true;\n-        }\n-\n-        final int schemeIndex = serverName.indexOf(\":\");\n-        final int portIndex = serverName.lastIndexOf(\":\");\n-        return schemeIndex != portIndex;\n-    }\n-\n+    \n     private static boolean requestIsOnStandardPort(final HttpServletRequest request) {\n         final int serverPort = request.getServerPort();\n         return serverPort == 80 || serverPort == 443;\n@@ -325,23 +315,18 @@ public final class CommonUtils {\n         originalRequestUrl.setParameters(request.getQueryString());\n \n         final URIBuilder builder;\n-\n-        boolean containsScheme = true;\n         if (!serverName.startsWith(\"https://\") && !serverName.startsWith(\"http://\")) {\n-            builder = new URIBuilder(encode);\n-            builder.setScheme(request.isSecure() ? \"https\" : \"http\");\n-            builder.setHost(serverName);\n-            containsScheme = false;\n-        }  else {\n+            String scheme = request.isSecure() ? \"https://\" : \"http://\";\n+            builder = new URIBuilder(scheme + serverName, encode);\n+        } else {\n             builder = new URIBuilder(serverName, encode);\n         }\n \n-\n-        if (!serverNameContainsPort(containsScheme, serverName) && !requestIsOnStandardPort(request)) {\n+        if (builder.getPort() == -1 && !requestIsOnStandardPort(request)) {\n             builder.setPort(request.getServerPort());\n         }\n \n-        builder.setEncodedPath(request.getRequestURI());\n+        builder.setEncodedPath(builder.getEncodedPath() + request.getRequestURI());\n \n         final List<String> serviceParameterNames = Arrays.asList(serviceParameterName.split(\",\"));\n         if (!serviceParameterNames.isEmpty() && !originalRequestUrl.getQueryParams().isEmpty()) {\ndiff --git a/cas-client-core/src/main/java/org/jasig/cas/client/util/URIBuilder.java b/cas-client-core/src/main/java/org/jasig/cas/client/util/URIBuilder.java\nindex f4c0b1a112..5e73dd109c 100644\n--- a/cas-client-core/src/main/java/org/jasig/cas/client/util/URIBuilder.java\n+++ b/cas-client-core/src/main/java/org/jasig/cas/client/util/URIBuilder.java\n@@ -523,6 +523,10 @@ public final class URIBuilder {\n         return this.path;\n     }\n \n+    public String getEncodedPath() {\n+        return this.encodedPath;\n+    }\n+\n     public List<BasicNameValuePair> getQueryParams() {\n         if (this.queryParams != null) {\n             return new ArrayList<BasicNameValuePair>(this.queryParams);\n",
    "projectMetrics": {
      "numberSourceFiles": 163,
      "numberLibrariesFailingModule": 20,
      "numberTestFiles": 40,
      "numberModules": 12
    },
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 318225856,
        "hostName": "spirals-bears",
        "totalMemory": 389545984,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Oct 10, 2018 9:03:00 AM",
      "projectRootPomPath": "./workspace/apereo/java-cas-client/408206584/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            1,
            0,
            0,
            116
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 117
        },
        "testing": {
          "stepDurations": [
            16
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 16
        },
        "cloning": {
          "stepDurations": [
            3
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 3
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 8:59:53 AM",
      "totalDuration": 181
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 417,
        "numberRunning": 432,
        "numberFailing": 0,
        "numberErroring": 15,
        "failures": [
          {
            "failureName": "java.lang.RuntimeException",
            "isError": true,
            "occurrences": 15
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/cpesch/RouteConverter/432166807/navigation-formats",
      "failingClasses": [
        {
          "numberPassing": 0,
          "numberRunning": 15,
          "testClass": "slash.navigation.gpx.Gpx11ExtensionsTest",
          "numberFailing": 0,
          "numberErroring": 15,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.RuntimeException",
          "testMethod": "testWriteTemperature",
          "testClass": "slash.navigation.gpx.Gpx11ExtensionsTest",
          "detail": "javax.xml.bind.PropertyException: name: com.sun.xml.internal.bind.xmlHeaders value: \n<!-- Generated by Christian Pesch's RouteConverter. See http://www.routeconverter.com -->\n",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "testMethod": "testWriteGarmin3TemperatureThenSpeed",
          "testClass": "slash.navigation.gpx.Gpx11ExtensionsTest",
          "detail": "javax.xml.bind.PropertyException: name: com.sun.xml.internal.bind.xmlHeaders value: \n<!-- Generated by Christian Pesch's RouteConverter. See http://www.routeconverter.com -->\n",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "testMethod": "testWriteGarmin3Temperature",
          "testClass": "slash.navigation.gpx.Gpx11ExtensionsTest",
          "detail": "javax.xml.bind.PropertyException: name: com.sun.xml.internal.bind.xmlHeaders value: \n<!-- Generated by Christian Pesch's RouteConverter. See http://www.routeconverter.com -->\n",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "testMethod": "testWriteTrackpoint2HeadingAndBearing",
          "testClass": "slash.navigation.gpx.Gpx11ExtensionsTest",
          "detail": "javax.xml.bind.PropertyException: name: com.sun.xml.internal.bind.xmlHeaders value: \n<!-- Generated by Christian Pesch's RouteConverter. See http://www.routeconverter.com -->\n",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "testMethod": "testWriteUnknownHeading",
          "testClass": "slash.navigation.gpx.Gpx11ExtensionsTest",
          "detail": "javax.xml.bind.PropertyException: name: com.sun.xml.internal.bind.xmlHeaders value: \n<!-- Generated by Christian Pesch's RouteConverter. See http://www.routeconverter.com -->\n",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "testMethod": "testWriteSpeed",
          "testClass": "slash.navigation.gpx.Gpx11ExtensionsTest",
          "detail": "javax.xml.bind.PropertyException: name: com.sun.xml.internal.bind.xmlHeaders value: \n<!-- Generated by Christian Pesch's RouteConverter. See http://www.routeconverter.com -->\n",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "testMethod": "testWriteTrackpoint2SpeedAndBearing",
          "testClass": "slash.navigation.gpx.Gpx11ExtensionsTest",
          "detail": "javax.xml.bind.PropertyException: name: com.sun.xml.internal.bind.xmlHeaders value: \n<!-- Generated by Christian Pesch's RouteConverter. See http://www.routeconverter.com -->\n",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "testMethod": "testWriteTrackpoint2Speed",
          "testClass": "slash.navigation.gpx.Gpx11ExtensionsTest",
          "detail": "javax.xml.bind.PropertyException: name: com.sun.xml.internal.bind.xmlHeaders value: \n<!-- Generated by Christian Pesch's RouteConverter. See http://www.routeconverter.com -->\n",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "testMethod": "testWriteTrackpoint2Heading",
          "testClass": "slash.navigation.gpx.Gpx11ExtensionsTest",
          "detail": "javax.xml.bind.PropertyException: name: com.sun.xml.internal.bind.xmlHeaders value: \n<!-- Generated by Christian Pesch's RouteConverter. See http://www.routeconverter.com -->\n",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "testMethod": "testWriteTrackpoint2Temperature",
          "testClass": "slash.navigation.gpx.Gpx11ExtensionsTest",
          "detail": "javax.xml.bind.PropertyException: name: com.sun.xml.internal.bind.xmlHeaders value: \n<!-- Generated by Christian Pesch's RouteConverter. See http://www.routeconverter.com -->\n",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "testMethod": "testWriteUnknownTemperature",
          "testClass": "slash.navigation.gpx.Gpx11ExtensionsTest",
          "detail": "javax.xml.bind.PropertyException: name: com.sun.xml.internal.bind.xmlHeaders value: \n<!-- Generated by Christian Pesch's RouteConverter. See http://www.routeconverter.com -->\n",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "testMethod": "testWriteHeading",
          "testClass": "slash.navigation.gpx.Gpx11ExtensionsTest",
          "detail": "javax.xml.bind.PropertyException: name: com.sun.xml.internal.bind.xmlHeaders value: \n<!-- Generated by Christian Pesch's RouteConverter. See http://www.routeconverter.com -->\n",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "testMethod": "testWriteTrackpoint1Temperature",
          "testClass": "slash.navigation.gpx.Gpx11ExtensionsTest",
          "detail": "javax.xml.bind.PropertyException: name: com.sun.xml.internal.bind.xmlHeaders value: \n<!-- Generated by Christian Pesch's RouteConverter. See http://www.routeconverter.com -->\n",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "testMethod": "testWriteTrackpoint1TemperatureThenSpeed",
          "testClass": "slash.navigation.gpx.Gpx11ExtensionsTest",
          "detail": "javax.xml.bind.PropertyException: name: com.sun.xml.internal.bind.xmlHeaders value: \n<!-- Generated by Christian Pesch's RouteConverter. See http://www.routeconverter.com -->\n",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "testMethod": "testWriteUnknownSpeed",
          "testClass": "slash.navigation.gpx.Gpx11ExtensionsTest",
          "detail": "javax.xml.bind.PropertyException: name: com.sun.xml.internal.bind.xmlHeaders value: \n<!-- Generated by Christian Pesch's RouteConverter. See http://www.routeconverter.com -->\n",
          "isError": true
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/cpesch/RouteConverter/builds/432169636",
        "date": "Sep 23, 2018 6:03:59 PM",
        "id": 432169636
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/cpesch/RouteConverter/builds/432166807",
        "date": "Sep 23, 2018 5:52:39 PM",
        "id": 432166807
      }
    },
    "repository": {
      "name": "cpesch-RouteConverter",
      "url": "https://github.com/cpesch/RouteConverter",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 1271699
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/cpesch/RouteConverter/commit/5b5d6db1fad6a4890489dd0e854cefe7f45b698e",
        "sha": "5b5d6db1fad6a4890489dd0e854cefe7f45b698e",
        "branchName": "master",
        "date": "Sep 23, 2018 5:57:49 PM",
        "repoName": "cpesch/RouteConverter"
      },
      "buggyBuild": {
        "url": "http://github.com/cpesch/RouteConverter/commit/fc182de4dd4e2e27263ddc0058376418bea1a85c",
        "sha": "fc182de4dd4e2e27263ddc0058376418bea1a85c",
        "branchName": "master",
        "date": "Sep 23, 2018 5:47:16 PM",
        "repoName": "cpesch/RouteConverter"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/cpesch-RouteConverter-432166807-432169636\n",
    "projectMetrics": {
      "numberSourceFiles": 1439,
      "numberLibrariesFailingModule": 49,
      "numberTestFiles": 164,
      "numberModules": 47
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 3,
        "numberDeleted": 10
      }
    },
    "diff": "diff --git a/common/src/main/java/slash/common/helpers/JAXBHelper.java b/common/src/main/java/slash/common/helpers/JAXBHelper.java\nindex e17f794e12..f351a1aa5f 100644\n--- a/common/src/main/java/slash/common/helpers/JAXBHelper.java\n+++ b/common/src/main/java/slash/common/helpers/JAXBHelper.java\n@@ -23,6 +23,7 @@ package slash.common.helpers;\n import javax.xml.bind.JAXBContext;\n import javax.xml.bind.JAXBException;\n import javax.xml.bind.Marshaller;\n+import javax.xml.bind.PropertyException;\n import javax.xml.bind.Unmarshaller;\n import java.util.HashMap;\n import java.util.List;\n@@ -70,14 +71,20 @@ public class JAXBHelper {\n     }\n \n     public static Marshaller newMarshaller(JAXBContext context) {\n+        Marshaller result;\n         try {\n-            Marshaller result = context.createMarshaller();\n+            result = context.createMarshaller();\n             result.setProperty(JAXB_FORMATTED_OUTPUT, preferences.getBoolean(\"prettyPrintXml\", true));\n-            result.setProperty(JAXB_IMPL_HEADER, HEADER_LINE);\n-            return result;\n         } catch (JAXBException e) {\n             throw new RuntimeException(e);\n         }\n+\n+        try {\n+            result.setProperty(JAXB_IMPL_HEADER, HEADER_LINE);\n+        } catch (PropertyException e) {\n+            // intentionally left empty\n+        }\n+        return result;\n     }\n \n     public static Unmarshaller newUnmarshaller(JAXBContext context) {\n",
    "type": "failing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 334630304,
        "hostName": "spirals-bears",
        "totalMemory": 547880960,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Sep 23, 2018 6:14:12 PM",
      "projectRootPomPath": "./workspace/cpesch/RouteConverter/432166807/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            376
          ],
          "stepNames": [
            "CheckoutBuggyBuildCandidate",
            "BuildProjectBuggyBuildCandidate"
          ],
          "nbSteps": 2,
          "totalDuration": 376
        },
        "testing": {
          "stepDurations": [
            29
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidate"
          ],
          "nbSteps": 1,
          "totalDuration": 29
        },
        "cloning": {
          "stepDurations": [
            21
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 21
        }
      },
      "reproductionDateBeginning": "Sep 23, 2018 6:04:14 PM",
      "totalDuration": 592
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 176,
        "numberRunning": 178,
        "numberFailing": 2,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 2
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/dungba88/libra/436514153",
      "failingClasses": [
        {
          "numberPassing": 66,
          "numberRunning": 68,
          "testClass": "org.joo.libra.test.TestSqlVariable",
          "numberFailing": 2,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testVariable[40]",
          "testClass": "org.joo.libra.test.TestSqlVariable",
          "detail": "expected:<false> but was:<true>",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testVariable[41]",
          "testClass": "org.joo.libra.test.TestSqlVariable",
          "detail": "expected:<false> but was:<true>",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/dungba88/libra/builds/436524727",
        "date": "Oct 3, 2018 10:41:19 AM",
        "id": 436524727
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/dungba88/libra/builds/436514153",
        "date": "Oct 3, 2018 10:10:51 AM",
        "id": 436514153
      }
    },
    "repository": {
      "name": "dungba88-libra",
      "url": "https://github.com/dungba88/libra",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 110289100
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/dungba88/libra/commit/fbe5d265849641ee3e49f5ffe81db87534525859",
        "sha": "fbe5d265849641ee3e49f5ffe81db87534525859",
        "branchName": "master",
        "date": "Oct 3, 2018 10:38:04 AM",
        "repoName": "dungba88/libra"
      },
      "buggyBuild": {
        "url": "http://github.com/dungba88/libra/commit/fd48492de18ad9abd87c58b286f1c3e5028d2fed",
        "sha": "fd48492de18ad9abd87c58b286f1c3e5028d2fed",
        "branchName": "master",
        "date": "Oct 3, 2018 10:06:19 AM",
        "repoName": "dungba88/libra"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/dungba88-libra-436514153-436524727\n",
    "projectMetrics": {
      "numberSourceFiles": 59,
      "numberLibrariesFailingModule": 7,
      "numberTestFiles": 12,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 0,
        "numberDeleted": 6
      }
    },
    "diff": "diff --git a/src/main/java/org/joo/libra/pointer/VariablePredicate.java b/src/main/java/org/joo/libra/pointer/VariablePredicate.java\nindex a7ad5baa51..9186475ea1 100644\n--- a/src/main/java/org/joo/libra/pointer/VariablePredicate.java\n+++ b/src/main/java/org/joo/libra/pointer/VariablePredicate.java\n@@ -1,5 +1,7 @@\n package org.joo.libra.pointer;\r\n \r\n+import java.util.Collection;\r\n+\r\n import org.joo.libra.PredicateContext;\r\n import org.joo.libra.common.CompositionPredicate;\r\n import org.joo.libra.common.HasValue;\r\n@@ -33,6 +35,10 @@ public class VariablePredicate implements CompositionPredicate {\n         \treturn ((Number) rawValue).doubleValue() != 0.0;\r\n         if (rawValue instanceof Boolean)\r\n         \treturn Boolean.TRUE.equals(rawValue);\r\n+        if (rawValue instanceof Collection)\r\n+        \treturn !((Collection<?>) rawValue).isEmpty();\r\n+        if (rawValue instanceof Object[])\r\n+        \treturn ((Object[]) rawValue).length != 0;\r\n         return true;\r\n     }\r\n     \r\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 244856160,
        "hostName": "spirals-bears",
        "totalMemory": 382730240,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Oct 3, 2018 10:44:56 AM",
      "projectRootPomPath": "./workspace/dungba88/libra/436514153/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            40
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 40
        },
        "testing": {
          "stepDurations": [
            61
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 61
        },
        "cloning": {
          "stepDurations": [
            2
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 2
        }
      },
      "reproductionDateBeginning": "Oct 3, 2018 10:41:40 AM",
      "totalDuration": 192
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 47,
        "numberRunning": 48,
        "numberFailing": 0,
        "numberErroring": 1,
        "failures": [
          {
            "failureName": "java.lang.IllegalArgumentException",
            "isError": true,
            "occurrences": 1
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/hexagonframework/spring-data-ebean/375829724",
      "failingClasses": [
        {
          "numberPassing": 40,
          "numberRunning": 41,
          "testClass": "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest",
          "numberFailing": 0,
          "numberErroring": 1,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.IllegalArgumentException",
          "testMethod": "findUserByEmailAddressEqualsOql_pageable",
          "testClass": "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest",
          "detail": "query not supported!",
          "isError": true
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/hexagonframework/spring-data-ebean/builds/438411426",
        "date": "Oct 8, 2018 2:15:00 AM",
        "id": 438411426
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/hexagonframework/spring-data-ebean/builds/375829724",
        "date": "May 7, 2018 12:41:42 PM",
        "id": 375829724
      }
    },
    "repository": {
      "name": "hexagonframework-spring-data-ebean",
      "url": "https://github.com/hexagonframework/spring-data-ebean",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 93129711
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/hexagonframework/spring-data-ebean/commit/827079b74c6eb27d2fba17f4ecf44ae62b97bae5",
        "sha": "827079b74c6eb27d2fba17f4ecf44ae62b97bae5",
        "branchName": "master",
        "date": "Oct 8, 2018 2:12:58 AM",
        "repoName": "hexagonframework/spring-data-ebean"
      },
      "buggyBuild": {
        "url": "http://github.com/hexagonframework/spring-data-ebean/commit/92a18cd6a231154e1b812c037ea738b57e55ca85",
        "sha": "92a18cd6a231154e1b812c037ea738b57e55ca85",
        "branchName": "master",
        "date": "May 7, 2018 12:40:05 PM",
        "repoName": "hexagonframework/spring-data-ebean"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/hexagonframework-spring-data-ebean-375829724-438411426\n",
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 0,
        "numberDeleted": 2
      }
    },
    "type": "passing_passing",
    "diff": "diff --git a/src/main/java/org/springframework/data/ebean/repository/query/EbeanQueryWrapper.java b/src/main/java/org/springframework/data/ebean/repository/query/EbeanQueryWrapper.java\nindex 547cc89177..60b278e3a5 100644\n--- a/src/main/java/org/springframework/data/ebean/repository/query/EbeanQueryWrapper.java\n+++ b/src/main/java/org/springframework/data/ebean/repository/query/EbeanQueryWrapper.java\n@@ -183,6 +183,7 @@ public class EbeanQueryWrapper<T> {\n     void setMaxRows(int maxRows) {\r\n         if (queryType == QUERY) {\r\n             ((Query) queryInstance).setMaxRows(maxRows);\r\n+            return;\r\n         }\r\n         throw new IllegalArgumentException(\"query not supported!\");\r\n     }\r\n@@ -197,6 +198,7 @@ public class EbeanQueryWrapper<T> {\n     void setFirstRow(int firstRow) {\r\n         if (queryType == QUERY) {\r\n             ((Query) queryInstance).setFirstRow(firstRow);\r\n+            return;\r\n         }\r\n         throw new IllegalArgumentException(\"query not supported!\");\r\n     }\r\n",
    "projectMetrics": {
      "numberSourceFiles": 50,
      "numberLibrariesFailingModule": 31,
      "numberTestFiles": 13,
      "numberModules": 1
    },
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 372293728,
        "hostName": "spirals-bears",
        "totalMemory": 398458880,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Oct 8, 2018 2:18:58 AM",
      "projectRootPomPath": "./workspace/hexagonframework/spring-data-ebean/375829724/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            115
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 115
        },
        "testing": {
          "stepDurations": [
            19
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 19
        },
        "cloning": {
          "stepDurations": [
            2
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 2
        }
      },
      "reproductionDateBeginning": "Oct 8, 2018 2:15:14 AM",
      "totalDuration": 219
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1558,
        "numberRunning": 1559,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 5
      },
      "failingModule": "/root/workspace/INRIA/spoon/431373130",
      "failingClasses": [
        {
          "numberPassing": 6,
          "numberRunning": 7,
          "testClass": "spoon.test.imports.ImportScannerTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testImportByJavaDoc",
          "isError": false,
          "testClass": "spoon.test.imports.ImportScannerTest"
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/431373716",
        "date": "Sep 21, 2018 10:32:11 AM",
        "id": 431373716
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/431373130",
        "date": "Sep 21, 2018 10:03:26 AM",
        "id": 431373130
      }
    },
    "repository": {
      "name": "INRIA-spoon",
      "url": "https://github.com/INRIA/spoon",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 14176513
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/c43cffe10c3f847b75f39f84e3a610b855398ac7",
        "sha": "c43cffe10c3f847b75f39f84e3a610b855398ac7",
        "branchName": "master",
        "date": "Sep 21, 2018 9:41:20 AM",
        "repoName": "INRIA/spoon"
      },
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/1fa1c72cb7239db28c93501789807ddcd3b3548e",
        "sha": "1fa1c72cb7239db28c93501789807ddcd3b3548e",
        "branchName": "master",
        "date": "Sep 21, 2018 9:39:20 AM",
        "repoName": "INRIA/spoon"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/INRIA-spoon-431373130-431373716\n",
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 6,
        "numberDeleted": 53
      }
    },
    "type": "passing_passing",
    "diff": "diff --git a/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java b/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java\nindex 2719f880ed..0bb6db06af 100644\n--- a/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java\n+++ b/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java\n@@ -59,6 +59,8 @@ import java.util.Map;\n import java.util.Set;\n import java.util.StringTokenizer;\n import java.util.TreeMap;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n \n /**\n  * A scanner that calculates the imports for a given model.\n@@ -153,20 +155,71 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \t\tstringBuilder.append(ctJavaDoc.getContent());\n \n \t\tfor (CtJavaDocTag ctJavaDocTag : ctJavaDoc.getTags()) {\n-\t\t\tstringBuilder.append(ctJavaDocTag.getContent());\n+\t\t\tstringBuilder.append(\"\\n\").append(ctJavaDocTag.getType()).append(\" \").append(ctJavaDocTag.getContent());\n \t\t}\n \n \t\tString javadoc = stringBuilder.toString();\n \t\tfor (CtImport ctImport : this.usedImport.keySet()) {\n \t\t\tswitch (ctImport.getImportKind()) {\n \t\t\t\tcase TYPE:\n-\t\t\t\t\tif (javadoc.contains(ctImport.getReference().getSimpleName())) {\n-\t\t\t\t\t\tthis.setImportUsed(ctImport);\n+\t\t\t\t\tif (javadoc.contains(ctImport.getReference().getSimpleName()) && ctImport.getReference() instanceof CtTypeReference) {\n+\t\t\t\t\t\t//assure that it is not just any occurrence of same substring, but it is real javadoc link to the same type\n+\t\t\t\t\t\tif (matchesTypeName(javadoc, (CtTypeReference<?>) ctImport.getReference())) {\n+\t\t\t\t\t\t\tthis.setImportUsed(ctImport);\n+\t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t\tbreak;\n \t\t\t}\n \t\t}\n+\t}\n+\n+\tprivate static Set<String> mainTags = new HashSet<>(Arrays.asList(\"see\", \"throws\", \"exception\"));\n+\tprivate static Set<String> inlineTags = new HashSet<>(Arrays.asList(\"link\", \"linkplain\", \"value\"));\n+\tprivate static Pattern tagRE = Pattern.compile(\"(\\\\{)?@(\\\\w+)\\\\s+([\\\\w\\\\.\\\\$]+)(?:#(\\\\w+)(?:\\\\(([^\\\\)]*)\\\\)))?\");\n+\n+\tprivate boolean matchesTypeName(String javadoc, CtTypeReference<?> typeRef) {\n+\t\tMatcher m = tagRE.matcher(javadoc);\n+\t\twhile (m.find()) {\n+\t\t\tString bracket = m.group(1);\n+\t\t\tString tag = m.group(2);\n+\t\t\tif (\"{\".equals(bracket)) {\n+\t\t\t\tif (inlineTags.contains(tag) == false) {\n+\t\t\t\t\tcontinue;\n+\t\t\t\t}\n+\t\t\t} else {\n+\t\t\t\tif (mainTags.contains(tag) == false) {\n+\t\t\t\t\tcontinue;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tString type = m.group(3);\n+//\t\t\tString methodName = m.group(4);\n+\t\t\tString params = m.group(5);\n \n+\t\t\tif (isTypeMatching(type, typeRef)) {\n+\t\t\t\treturn true;\n+\t\t\t}\n+\t\t\tif (params != null) {\n+\t\t\t\tString[] paramTypes = params.split(\"\\\\s*,\\\\s*\");\n+\t\t\t\tfor (String paramType : paramTypes) {\n+\t\t\t\t\tif (isTypeMatching(paramType, typeRef)) {\n+\t\t\t\t\t\treturn true;\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\treturn false;\n+\t}\n+\n+\tprivate boolean isTypeMatching(String typeName, CtTypeReference<?> typeRef) {\n+\t\tif (typeName != null) {\n+\t\t\tif (typeName.equals(typeRef.getQualifiedName())) {\n+\t\t\t\treturn true;\n+\t\t\t}\n+\t\t\tif (typeName.equals(typeRef.getSimpleName())) {\n+\t\t\t\treturn true;\n+\t\t\t}\n+\t\t}\n+\t\treturn false;\n \t}\n \n \t@Override\n",
    "projectMetrics": {
      "numberSourceFiles": 638,
      "numberLibrariesFailingModule": 33,
      "numberTestFiles": 703,
      "numberModules": 1
    },
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 231121680,
        "hostName": "spirals-bears",
        "totalMemory": 394788864,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Sep 21, 2018 10:58:24 AM",
      "projectRootPomPath": "./workspace/INRIA/spoon/431373130/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            83
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 83
        },
        "testing": {
          "stepDurations": [
            772
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 772
        },
        "cloning": {
          "stepDurations": [
            11
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 11
        }
      },
      "reproductionDateBeginning": "Sep 21, 2018 10:32:27 AM",
      "totalDuration": 1549
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1556,
        "numberRunning": 1559,
        "numberFailing": 3,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 3
          }
        ],
        "numberSkipping": 5
      },
      "failingModule": "/root/workspace/INRIA/spoon/431601111",
      "failingClasses": [
        {
          "numberPassing": 2,
          "numberRunning": 3,
          "testClass": "spoon.test.serializable.SerializableTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        },
        {
          "numberPassing": 4,
          "numberRunning": 6,
          "testClass": "spoon.test.snippets.SnippetTest",
          "numberFailing": 2,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testCompileSnippetWithContext",
          "isError": false,
          "testClass": "spoon.test.snippets.SnippetTest"
        },
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testCompileSnippetSeveralTimes",
          "isError": false,
          "testClass": "spoon.test.snippets.SnippetTest"
        },
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testSerialCtStatement",
          "testClass": "spoon.test.serializable.SerializableTest",
          "detail": "expected null, but was:<class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        java.lang.String hello = \"t1\";\n    }\n}>",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/431664501",
        "date": "Sep 21, 2018 10:27:44 PM",
        "id": 431664501
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/431601111",
        "date": "Sep 21, 2018 8:20:59 PM",
        "id": 431601111
      }
    },
    "repository": {
      "name": "INRIA-spoon",
      "url": "https://github.com/INRIA/spoon",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 14176513
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/62d2de1fc4beae4f3c88d01f80821732ed6aba8c",
        "sha": "62d2de1fc4beae4f3c88d01f80821732ed6aba8c",
        "branchName": "master",
        "date": "Sep 21, 2018 10:12:17 PM",
        "repoName": "INRIA/spoon"
      },
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/8403a1fadbbadaaa548cb337619fdedcc78d0e8e",
        "sha": "8403a1fadbbadaaa548cb337619fdedcc78d0e8e",
        "branchName": "master",
        "date": "Sep 21, 2018 7:33:13 PM",
        "repoName": "INRIA/spoon"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/INRIA-spoon-431601111-431664501\n",
    "projectMetrics": {
      "numberSourceFiles": 638,
      "numberLibrariesFailingModule": 33,
      "numberTestFiles": 703,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 7,
        "numberDeleted": 2
      }
    },
    "diff": "diff --git a/src/main/java/spoon/support/compiler/SnippetCompilationHelper.java b/src/main/java/spoon/support/compiler/SnippetCompilationHelper.java\nindex 391d299c0e..02a40f7256 100644\n--- a/src/main/java/spoon/support/compiler/SnippetCompilationHelper.java\n+++ b/src/main/java/spoon/support/compiler/SnippetCompilationHelper.java\n@@ -94,6 +94,7 @@ public class SnippetCompilationHelper {\n \n \t\t//disconnect element from the parent, so it can be added to another model\n \t\tret.delete();\n+\t\tret.setParent(null);\n \n \t\tif (ret instanceof CtClass) {\n \t\t\tCtClass klass = (CtClass) ret;\n@@ -109,7 +110,13 @@ public class SnippetCompilationHelper {\n \n \t\tCtReturn<T> ret = (CtReturn<T>) internalCompileStatement(expr, expr.getFactory().Type().OBJECT);\n \n-\t\treturn ret.getReturnedExpression();\n+\t\tCtExpression<T> returnedExpression = ret.getReturnedExpression();\n+\n+\t\t// this compiled expression is not in a parent, ready to be used\n+\t\treturnedExpression.delete();\n+\t\treturnedExpression.setParent(null);\n+\n+\t\treturn returnedExpression;\n \t}\n \n \tprivate static void build(Factory f, String contents) {\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 339603576,
        "hostName": "spirals-bears",
        "totalMemory": 416808960,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Sep 21, 2018 10:53:29 PM",
      "projectRootPomPath": "./workspace/INRIA/spoon/431601111/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            80
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 80
        },
        "testing": {
          "stepDurations": [
            743
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 743
        },
        "cloning": {
          "stepDurations": [
            11
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 11
        }
      },
      "reproductionDateBeginning": "Sep 21, 2018 10:27:57 PM",
      "totalDuration": 1524
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 404,
        "numberRunning": 405,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "org.junit.ComparisonFailure",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/javadev/underscore-java/435386942",
      "failingClasses": [
        {
          "numberPassing": 132,
          "numberRunning": 133,
          "testClass": "com.github.underscore.lodash.StringTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "testMethod": "toXmlFromJson21",
          "testClass": "com.github.underscore.lodash.StringTest",
          "detail": "expected:<...encoding=\"UTF-8\"?> <[root>   <a>0</a> </root]>> but was:<...encoding=\"UTF-8\"?> <[a>   <a>0</a> </a]>>",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/javadev/underscore-java/builds/435396295",
        "date": "Oct 1, 2018 2:32:15 AM",
        "id": 435396295
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/javadev/underscore-java/builds/435386942",
        "date": "Oct 1, 2018 1:35:20 AM",
        "id": 435386942
      }
    },
    "repository": {
      "name": "javadev-underscore-java",
      "url": "https://github.com/javadev/underscore-java",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 18259368
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/javadev/underscore-java/commit/321c6af83d17da58ee078eec8f916366dc8381f3",
        "sha": "321c6af83d17da58ee078eec8f916366dc8381f3",
        "branchName": "master",
        "date": "Oct 1, 2018 2:27:14 AM",
        "repoName": "javadev/underscore-java"
      },
      "buggyBuild": {
        "url": "http://github.com/javadev/underscore-java/commit/148c98222b1c79c1517de4a8cf37a2928f74b306",
        "sha": "148c98222b1c79c1517de4a8cf37a2928f74b306",
        "branchName": "master",
        "date": "Oct 1, 2018 1:31:00 AM",
        "repoName": "javadev/underscore-java"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/javadev-underscore-java-435386942-435396295\n",
    "projectMetrics": {
      "numberSourceFiles": 19,
      "numberLibrariesFailingModule": 5,
      "numberTestFiles": 11,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 9,
        "numberDeleted": 1
      }
    },
    "diff": "diff --git a/src/main/java/com/github/underscore/lodash/Xml.java b/src/main/java/com/github/underscore/lodash/Xml.java\nindex f7ae884920..71906b870c 100644\n--- a/src/main/java/com/github/underscore/lodash/Xml.java\n+++ b/src/main/java/com/github/underscore/lodash/Xml.java\n@@ -696,7 +696,15 @@ public final class Xml {\n             if (localMap != null && localMap.size() == 1\n                 && ((Map.Entry) localMap.entrySet().iterator().next()).getValue() instanceof List\n                 && !((List) ((Map.Entry) localMap.entrySet().iterator().next()).getValue()).isEmpty()) {\n-                name = String.valueOf(((Map.Entry) localMap.entrySet().iterator().next()).getKey());\n+                boolean allMapItems = true;\n+                for (Object item : (List) ((Map.Entry) localMap.entrySet().iterator().next()).getValue()) {\n+                    if (!(item instanceof Map)) {\n+                       allMapItems = false;\n+                       break;\n+                    }\n+                }\n+                name = allMapItems ? String.valueOf(((Map.Entry) localMap.entrySet().iterator().next()).getKey())\n+                    : \"root\";\n             } else {\n                 name = \"root\";\n             }\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 393988168,
        "hostName": "spirals-bears",
        "totalMemory": 438304768,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Oct 1, 2018 2:34:34 AM",
      "projectRootPomPath": "./workspace/javadev/underscore-java/435386942/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            45
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 45
        },
        "testing": {
          "stepDurations": [
            13
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 13
        },
        "cloning": {
          "stepDurations": [
            5
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 5
        }
      },
      "reproductionDateBeginning": "Oct 1, 2018 2:32:36 AM",
      "totalDuration": 113
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 11,
        "numberRunning": 12,
        "numberFailing": 0,
        "numberErroring": 1,
        "failures": [
          {
            "failureName": "java.lang.NumberFormatException",
            "isError": true,
            "occurrences": 1
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/kmehrunes/valuestreams/438682914",
      "failingClasses": [
        {
          "numberPassing": 1,
          "numberRunning": 2,
          "testClass": "PipelineTests",
          "numberFailing": 0,
          "numberErroring": 1,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.NumberFormatException",
          "testMethod": "basicUsage",
          "testClass": "PipelineTests",
          "detail": "For input string: \"a\"",
          "isError": true
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/kmehrunes/valuestreams/builds/439585987",
        "date": "Oct 10, 2018 1:10:25 PM",
        "id": 439585987
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/kmehrunes/valuestreams/builds/438682914",
        "date": "Oct 8, 2018 5:25:03 PM",
        "id": 438682914
      }
    },
    "repository": {
      "name": "kmehrunes-valuestreams",
      "url": "https://github.com/kmehrunes/valuestreams",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 148899028
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/kmehrunes/valuestreams/commit/e9d52b5221079373033876d8b7a24277a1388568",
        "sha": "e9d52b5221079373033876d8b7a24277a1388568",
        "branchName": "master",
        "date": "Oct 10, 2018 1:05:41 PM",
        "repoName": "kmehrunes/valuestreams"
      },
      "buggyBuild": {
        "url": "http://github.com/kmehrunes/valuestreams/commit/7ab21ffddc91744488f4459caaedb617872a5c9e",
        "sha": "7ab21ffddc91744488f4459caaedb617872a5c9e",
        "branchName": "master",
        "date": "Oct 8, 2018 5:23:17 PM",
        "repoName": "kmehrunes/valuestreams"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/kmehrunes-valuestreams-438682914-439585987\n",
    "projectMetrics": {
      "numberSourceFiles": 14,
      "numberLibrariesFailingModule": 11,
      "numberTestFiles": 5,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 11,
        "numberDeleted": 11
      }
    },
    "diff": "diff --git a/src/main/java/valuestreams/pipeline/Pipeline.java b/src/main/java/valuestreams/pipeline/Pipeline.java\nindex 94155080c9..87f14a9476 100644\n--- a/src/main/java/valuestreams/pipeline/Pipeline.java\n+++ b/src/main/java/valuestreams/pipeline/Pipeline.java\n@@ -109,19 +109,23 @@ public class Pipeline<I, O> {\n      */\n     @SuppressWarnings({\"rawtypes\", \"unchecked\"})\n     public Value<O> apply(I input) {\n-        Object source = input;\n-        Object target = null;\n+        try {\n+            Object source = input;\n+            Object target = null;\n \n-        for (Operation p : operations) {\n-            target = p.apply(source);\n-            source = target;\n+            for (Operation p : operations) {\n+                target = p.apply(source);\n+                source = target;\n \n-            if (source == null) {\n-                break;\n+                if (source == null) {\n+                    break;\n+                }\n             }\n-        }\n \n-        return target != null ? Value.of((O) target) : Value.empty();\n+            return target != null ? Value.of((O) target) : Value.empty();\n+        } catch (Exception ex) {\n+            return Value.empty();\n+        }\n     }\n \n     public CompletableFuture<Value<O>> applyAsync(I input) {\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 299904696,
        "hostName": "spirals-bears",
        "totalMemory": 393740288,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Oct 10, 2018 1:46:20 PM",
      "projectRootPomPath": "./workspace/kmehrunes/valuestreams/438682914/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            20
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 20
        },
        "testing": {
          "stepDurations": [
            9
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 9
        },
        "cloning": {
          "stepDurations": [
            1
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 1
        }
      },
      "reproductionDateBeginning": "Oct 10, 2018 1:45:19 PM",
      "totalDuration": 58
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 0,
        "numberRunning": 1,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/mindmill/ladon-s3-server/432224417/ladon-s3-server",
      "failingClasses": [
        {
          "numberPassing": 0,
          "numberRunning": 1,
          "testClass": "de.mc.ladon.s3server.auth.TestAuthKeyGen",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testNoMinusNoUnderscore",
          "isError": false,
          "testClass": "de.mc.ladon.s3server.auth.TestAuthKeyGen"
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/mindmill/ladon-s3-server/builds/435321184",
        "date": "Sep 30, 2018 8:43:31 PM",
        "id": 435321184
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/mindmill/ladon-s3-server/builds/432224417",
        "date": "Sep 23, 2018 9:46:14 PM",
        "id": 432224417
      }
    },
    "repository": {
      "name": "mindmill-ladon-s3-server",
      "url": "https://github.com/mindmill/ladon-s3-server",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 52228869
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/mindmill/ladon-s3-server/commit/5c3ea1c9ef811aa610f2d9e4a8af2f4e0f85f5f9",
        "sha": "5c3ea1c9ef811aa610f2d9e4a8af2f4e0f85f5f9",
        "branchName": "master",
        "date": "Sep 30, 2018 8:40:48 PM",
        "repoName": "mindmill/ladon-s3-server"
      },
      "buggyBuild": {
        "url": "http://github.com/mindmill/ladon-s3-server/commit/88133dcf3928a27f02578cce7d548d10148854da",
        "sha": "88133dcf3928a27f02578cce7d548d10148854da",
        "branchName": "master",
        "date": "Sep 23, 2018 9:37:26 PM",
        "repoName": "mindmill/ladon-s3-server"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/mindmill-ladon-s3-server-432224417-435321184\n",
    "projectMetrics": {
      "numberSourceFiles": 141,
      "numberLibrariesFailingModule": 5,
      "numberTestFiles": 19,
      "numberModules": 4
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 13,
        "numberDeleted": 10
      }
    },
    "diff": "diff --git a/ladon-s3-server/src/main/java/de/mc/ladon/s3server/auth/AuthKeyGen.java b/ladon-s3-server/src/main/java/de/mc/ladon/s3server/auth/AuthKeyGen.java\nindex 59f92efc7a..efb413733b 100644\n--- a/ladon-s3-server/src/main/java/de/mc/ladon/s3server/auth/AuthKeyGen.java\n+++ b/ladon-s3-server/src/main/java/de/mc/ladon/s3server/auth/AuthKeyGen.java\n@@ -10,21 +10,26 @@ import java.security.NoSuchAlgorithmException;\n \n /**\n  * Generates a new KeyPair\n+ *\n  * @author Ralf Ulrich 21.10.16.\n  */\n public class AuthKeyGen {\n \n \n     public static AwsKeyPair generateKeypair() throws NoSuchAlgorithmException {\n-        KeyGenerator generator = KeyGenerator.getInstance(AwsSignatureVersion2.HMAC_SHA_1);\n-        generator.init(120);\n-        byte[] awsAccessKeyId = generator.generateKey().getEncoded();\n-        generator.init(240);\n-        byte[] awsSecretAccessKey = generator.generateKey().getEncoded();\n-        return new AwsKeyPair(\n-                BaseEncoding.base64Url().encode(awsSecretAccessKey),\n-                BaseEncoding.base64Url().encode(awsAccessKeyId)\n-        );\n+        String accessKey = \"-\";\n+        String secretKey = \"-\";\n+        while (accessKey.contains(\"-\") || accessKey.contains(\"_\")\n+                || secretKey.contains(\"-\") || secretKey.contains(\"_\")) {\n+            KeyGenerator generator = KeyGenerator.getInstance(AwsSignatureVersion2.HMAC_SHA_1);\n+            generator.init(120);\n+            byte[] awsAccessKeyId = generator.generateKey().getEncoded();\n+            accessKey = BaseEncoding.base64Url().encode(awsAccessKeyId);\n+            generator.init(240);\n+            byte[] awsSecretAccessKey = generator.generateKey().getEncoded();\n+            secretKey = BaseEncoding.base64Url().encode(awsSecretAccessKey);\n+        }\n+        return new AwsKeyPair(secretKey, accessKey);\n \n     }\n \n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 365665352,
        "hostName": "spirals-bears",
        "totalMemory": 390070272,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Sep 30, 2018 8:45:32 PM",
      "projectRootPomPath": "./workspace/mindmill/ladon-s3-server/432224417/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            1,
            0,
            0,
            45
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 46
        },
        "testing": {
          "stepDurations": [
            8
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 8
        },
        "cloning": {
          "stepDurations": [
            2
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 2
        }
      },
      "reproductionDateBeginning": "Sep 30, 2018 8:43:41 PM",
      "totalDuration": 105
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 18,
        "numberRunning": 19,
        "numberFailing": 0,
        "numberErroring": 1,
        "failures": [
          {
            "failureName": "java.lang.NullPointerException",
            "isError": true,
            "occurrences": 1
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/opentracing-contrib/java-p6spy/390188323",
      "failingClasses": [
        {
          "numberPassing": 4,
          "numberRunning": 5,
          "testClass": "io.opentracing.contrib.p6spy.JdbcTest",
          "numberFailing": 0,
          "numberErroring": 1,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.NullPointerException",
          "testMethod": "should_report_one_span_with_null_url",
          "isError": true,
          "testClass": "io.opentracing.contrib.p6spy.JdbcTest"
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/opentracing-contrib/java-p6spy/builds/431527545",
        "date": "Sep 21, 2018 4:43:22 PM",
        "id": 431527545
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/opentracing-contrib/java-p6spy/builds/390188323",
        "date": "Jun 9, 2018 8:38:52 PM",
        "id": 390188323
      }
    },
    "repository": {
      "name": "opentracing-contrib-java-p6spy",
      "url": "https://github.com/opentracing-contrib/java-p6spy",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 105222576
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/opentracing-contrib/java-p6spy/commit/72faab4a5a793b3251c29a2796dac3b95de14717",
        "sha": "72faab4a5a793b3251c29a2796dac3b95de14717",
        "branchName": "master",
        "date": "Sep 21, 2018 4:35:46 PM",
        "repoName": "opentracing-contrib/java-p6spy"
      },
      "buggyBuild": {
        "url": "http://github.com/opentracing-contrib/java-p6spy/commit/c8426e6f359f5fb7ed928e151c97029d752955f8",
        "sha": "c8426e6f359f5fb7ed928e151c97029d752955f8",
        "branchName": "master",
        "date": "Jun 9, 2018 8:37:04 PM",
        "repoName": "opentracing-contrib/java-p6spy"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/opentracing-contrib-java-p6spy-390188323-431527545\n",
    "projectMetrics": {
      "numberSourceFiles": 3,
      "numberLibrariesFailingModule": 31,
      "numberTestFiles": 4,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 14,
        "numberDeleted": 12
      }
    },
    "diff": "diff --git a/src/main/java/io/opentracing/contrib/p6spy/TracingP6SpyListener.java b/src/main/java/io/opentracing/contrib/p6spy/TracingP6SpyListener.java\nindex dcba6dabfe..c5a9da6825 100644\n--- a/src/main/java/io/opentracing/contrib/p6spy/TracingP6SpyListener.java\n+++ b/src/main/java/io/opentracing/contrib/p6spy/TracingP6SpyListener.java\n@@ -122,13 +122,17 @@ class TracingP6SpyListener extends SimpleJdbcEventListener {\n \n     Tags.COMPONENT.set(span, \"java-p6spy\");\n     Tags.DB_STATEMENT.set(span, statementInformation.getSql());\n-    Tags.DB_TYPE.set(span, extractDbType(dbUrl));\n-    Tags.DB_INSTANCE.set(span, dbInstance);\n-    span.setTag(\"peer.address\", dbUrl);\n-    if (peerName != null && !peerName.isEmpty()) {\n+    if (!isNullOrEmpty(dbUrl)) {\n+      span.setTag(\"peer.address\", dbUrl);\n+      Tags.DB_TYPE.set(span, extractDbType(dbUrl));\n+    }\n+    if (!isNullOrEmpty(dbInstance)) {\n+      Tags.DB_INSTANCE.set(span, dbInstance);\n+    }\n+    if (!isNullOrEmpty(peerName)) {\n       Tags.PEER_SERVICE.set(span, peerName);\n     }\n-    if (dbUser != null && !dbUser.isEmpty()) {\n+    if (!isNullOrEmpty(dbUser)) {\n       Tags.DB_USER.set(span, dbUser);\n     }\n   }\n@@ -138,9 +142,11 @@ class TracingP6SpyListener extends SimpleJdbcEventListener {\n   }\n \n   private static String extractPeerService(String url) {\n-    Matcher matcher = URL_PEER_SERVICE_FINDER.matcher(url);\n-    if (matcher.find() && matcher.groupCount() == 1) {\n-      return matcher.group(1);\n+    if (url != null) {\n+      Matcher matcher = URL_PEER_SERVICE_FINDER.matcher(url);\n+      if (matcher.find() && matcher.groupCount() == 1) {\n+        return matcher.group(1);\n+      }\n     }\n     return \"\";\n   }\n@@ -167,4 +173,8 @@ class TracingP6SpyListener extends SimpleJdbcEventListener {\n     }\n     return OptionalBoolean.OPTION_NOT_FOUND;\n   }\n+\n+  private static boolean isNullOrEmpty(String s) {\n+    return s == null || s.isEmpty();\n+  }\n }\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 281226472,
        "hostName": "spirals-bears",
        "totalMemory": 392167424,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Sep 21, 2018 5:27:31 PM",
      "projectRootPomPath": "./workspace/opentracing-contrib/java-p6spy/390188323/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            32
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 32
        },
        "testing": {
          "stepDurations": [
            26
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 26
        },
        "cloning": {
          "stepDurations": [
            2
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 2
        }
      },
      "reproductionDateBeginning": "Sep 21, 2018 5:25:37 PM",
      "totalDuration": 110
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 14,
        "numberRunning": 15,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/rafonsecad/cash-count/435955189",
      "failingClasses": [
        {
          "numberPassing": 5,
          "numberRunning": 6,
          "testClass": "org.cash.count.service.impl.TransferServiceTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "shouldNotExecuteTransfer_accountDisabled",
          "isError": false,
          "testClass": "org.cash.count.service.impl.TransferServiceTest"
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/rafonsecad/cash-count/builds/435958219",
        "date": "Oct 2, 2018 6:27:44 AM",
        "id": 435958219
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/rafonsecad/cash-count/builds/435955189",
        "date": "Oct 2, 2018 6:19:14 AM",
        "id": 435955189
      }
    },
    "repository": {
      "name": "rafonsecad-cash-count",
      "url": "https://github.com/rafonsecad/cash-count",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 147287009
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/rafonsecad/cash-count/commit/13288f1282bdb1237c98aec02b89edcee813915b",
        "sha": "13288f1282bdb1237c98aec02b89edcee813915b",
        "branchName": "master",
        "date": "Oct 2, 2018 6:26:11 AM",
        "repoName": "rafonsecad/cash-count"
      },
      "buggyBuild": {
        "url": "http://github.com/rafonsecad/cash-count/commit/1019f4ae787bd616e432f364917e83ab2fe35587",
        "sha": "1019f4ae787bd616e432f364917e83ab2fe35587",
        "branchName": "master",
        "date": "Oct 2, 2018 6:11:09 AM",
        "repoName": "rafonsecad/cash-count"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/rafonsecad-cash-count-435955189-435958219\n",
    "projectMetrics": {
      "numberSourceFiles": 13,
      "numberLibrariesFailingModule": 89,
      "numberTestFiles": 3,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 0,
        "numberDeleted": 4
      }
    },
    "diff": "diff --git a/src/main/java/org/cash/count/service/impl/TransferService.java b/src/main/java/org/cash/count/service/impl/TransferService.java\nindex e93358cddf..2a670ad0d1 100644\n--- a/src/main/java/org/cash/count/service/impl/TransferService.java\n+++ b/src/main/java/org/cash/count/service/impl/TransferService.java\n@@ -41,6 +41,10 @@ public class TransferService implements ITransferService{\n         Account debitedAccount = debitedAccountWrapper.orElseThrow(NoSuchElementException::new);\n         Account creditedAccount = creditedAccountWrapper.orElseThrow(NoSuchElementException::new);\n         \n+        if (debitedAccount.isDisabled() || creditedAccount.isDisabled()){\n+            throw new IllegalStateException(\"Account disabled\");\n+        }\n+        \n         BigDecimal debitedAccountBalance = calculateDebitedBalance(debitedAccount, amount);\n         BigDecimal creditedAccountBalance = calculateCreditedBalance(creditedAccount, amount);\n         \n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 345099016,
        "hostName": "spirals-bears",
        "totalMemory": 400556032,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Oct 2, 2018 6:29:19 AM",
      "projectRootPomPath": "./workspace/rafonsecad/cash-count/435955189/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            3,
            0,
            0,
            32
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 35
        },
        "testing": {
          "stepDurations": [
            11
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 11
        },
        "cloning": {
          "stepDurations": [
            1
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 1
        }
      },
      "reproductionDateBeginning": "Oct 2, 2018 6:27:54 AM",
      "totalDuration": 80
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 16,
        "numberRunning": 17,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/rafonsecad/cash-count/435958219",
      "failingClasses": [
        {
          "numberPassing": 10,
          "numberRunning": 11,
          "testClass": "org.cash.count.service.impl.AccountManagerTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "shouldNotDisableAccount_accountHasChildrenEnabledAccounts",
          "isError": false,
          "testClass": "org.cash.count.service.impl.AccountManagerTest"
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/rafonsecad/cash-count/builds/435967865",
        "date": "Oct 2, 2018 7:24:55 AM",
        "id": 435967865
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/rafonsecad/cash-count/builds/435958219",
        "date": "Oct 2, 2018 6:27:44 AM",
        "id": 435958219
      }
    },
    "repository": {
      "name": "rafonsecad-cash-count",
      "url": "https://github.com/rafonsecad/cash-count",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 147287009
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/rafonsecad/cash-count/commit/56033af0343521249b0ad6d150bd972638d16c0a",
        "sha": "56033af0343521249b0ad6d150bd972638d16c0a",
        "branchName": "master",
        "date": "Oct 2, 2018 7:19:03 AM",
        "repoName": "rafonsecad/cash-count"
      },
      "buggyBuild": {
        "url": "http://github.com/rafonsecad/cash-count/commit/13288f1282bdb1237c98aec02b89edcee813915b",
        "sha": "13288f1282bdb1237c98aec02b89edcee813915b",
        "branchName": "master",
        "date": "Oct 2, 2018 6:26:11 AM",
        "repoName": "rafonsecad/cash-count"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/rafonsecad-cash-count-435958219-435967865\n",
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 0,
        "numberDeleted": 10
      }
    },
    "type": "passing_passing",
    "diff": "diff --git a/src/main/java/org/cash/count/service/impl/AccountManager.java b/src/main/java/org/cash/count/service/impl/AccountManager.java\nindex 38fdd410ac..e3513d5ade 100644\n--- a/src/main/java/org/cash/count/service/impl/AccountManager.java\n+++ b/src/main/java/org/cash/count/service/impl/AccountManager.java\n@@ -105,7 +105,17 @@ public class AccountManager implements IAccountManager {\n     public void disable(int accountId) {\n         Optional<Account> wrappedAccount = accountRepository.findById(accountId);\n         Account account = wrappedAccount.orElseThrow(NoSuchElementException::new);\n+        if (hasAnyChildrenAccountEnabled(account)){\n+            throw new IllegalStateException(\"Children accounts enabled\");\n+        }    \n         account.setDisabled(true);\n         accountRepository.save(account);\n     }\n+    \n+    private boolean hasAnyChildrenAccountEnabled(Account account){\n+        return account.getChildren().stream()\n+                .filter(a -> !a.isDisabled())\n+                .findAny()\n+                .isPresent();\n+    }\n }\n",
    "projectMetrics": {
      "numberSourceFiles": 13,
      "numberLibrariesFailingModule": 89,
      "numberTestFiles": 3,
      "numberModules": 1
    },
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 339320336,
        "hostName": "spirals-bears",
        "totalMemory": 398983168,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Oct 2, 2018 7:26:35 AM",
      "projectRootPomPath": "./workspace/rafonsecad/cash-count/435958219/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            3,
            0,
            0,
            31
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 34
        },
        "testing": {
          "stepDurations": [
            11
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 11
        },
        "cloning": {
          "stepDurations": [
            1
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 1
        }
      },
      "reproductionDateBeginning": "Oct 2, 2018 7:25:10 AM",
      "totalDuration": 80
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 8301,
        "numberRunning": 8305,
        "numberFailing": 4,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 4
          }
        ],
        "numberSkipping": 27
      },
      "failingModule": "/root/workspace/raphw/byte-buddy/432194751/byte-buddy-dep",
      "failingClasses": [
        {
          "numberPassing": 220,
          "numberRunning": 221,
          "testClass": "net.bytebuddy.pool.TypePoolDefaultTypeDescriptionTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        },
        {
          "numberPassing": 235,
          "numberRunning": 236,
          "testClass": "net.bytebuddy.pool.TypePoolDefaultWithLazyResolutionTypeDescriptionTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        },
        {
          "numberPassing": 220,
          "numberRunning": 221,
          "testClass": "net.bytebuddy.pool.TypePoolDefaultTypeDescriptionSuperClassLoadingTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        },
        {
          "numberPassing": 220,
          "numberRunning": 221,
          "testClass": "net.bytebuddy.pool.TypePoolLazyFacadeTypeDescriptionTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testNonEnclosedAnonymousType",
          "testClass": "net.bytebuddy.pool.TypePoolDefaultTypeDescriptionTest",
          "detail": "\nExpected: is <false>\n     but: was <true>",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testNonEnclosedAnonymousType",
          "testClass": "net.bytebuddy.pool.TypePoolLazyFacadeTypeDescriptionTest",
          "detail": "\nExpected: is <false>\n     but: was <true>",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testNonEnclosedAnonymousType",
          "testClass": "net.bytebuddy.pool.TypePoolDefaultWithLazyResolutionTypeDescriptionTest",
          "detail": "\nExpected: is <false>\n     but: was <true>",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testNonEnclosedAnonymousType",
          "testClass": "net.bytebuddy.pool.TypePoolDefaultTypeDescriptionSuperClassLoadingTest",
          "detail": "\nExpected: is <false>\n     but: was <true>",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/raphw/byte-buddy/builds/432199042",
        "date": "Sep 23, 2018 8:03:08 PM",
        "id": 432199042
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/raphw/byte-buddy/builds/432194751",
        "date": "Sep 23, 2018 7:45:56 PM",
        "id": 432194751
      }
    },
    "repository": {
      "name": "raphw-byte-buddy",
      "url": "https://github.com/raphw/byte-buddy",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 14696091
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/raphw/byte-buddy/commit/96df8c354d6573aea2c2a63b836f1ff37a18ca95",
        "sha": "96df8c354d6573aea2c2a63b836f1ff37a18ca95",
        "branchName": "master",
        "date": "Sep 23, 2018 7:57:14 PM",
        "repoName": "raphw/byte-buddy"
      },
      "buggyBuild": {
        "url": "http://github.com/raphw/byte-buddy/commit/23ad858aee1f55940adb28c6cdcf63f7ad78135b",
        "sha": "23ad858aee1f55940adb28c6cdcf63f7ad78135b",
        "branchName": "master",
        "date": "Sep 23, 2018 7:40:08 PM",
        "repoName": "raphw/byte-buddy"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/raphw-byte-buddy-432194751-432199042\n",
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 2,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 8,
        "numberDeleted": 5
      }
    },
    "type": "passing_passing",
    "diff": "diff --git a/byte-buddy-dep/src/main/java/net/bytebuddy/dynamic/scaffold/TypeWriter.java b/byte-buddy-dep/src/main/java/net/bytebuddy/dynamic/scaffold/TypeWriter.java\nindex 8bf1e707b7..83b59ef620 100644\n--- a/byte-buddy-dep/src/main/java/net/bytebuddy/dynamic/scaffold/TypeWriter.java\n+++ b/byte-buddy-dep/src/main/java/net/bytebuddy/dynamic/scaffold/TypeWriter.java\n@@ -4346,10 +4346,7 @@ public interface TypeWriter<T> {\n                                     enclosingMethod.getInternalName(),\n                                     enclosingMethod.getDescriptor());\n                         } else if (instrumentedType.isLocalType() || instrumentedType.isAnonymousType()) {\n-                            TypeDescription enclosingType = instrumentedType.getEnclosingType();\n-                            if (enclosingType != null) { // The Scala compiler sometimes generates illegal combinations.\n-                                cv.visitOuterClass(enclosingType.getInternalName(), NO_REFERENCE, NO_REFERENCE);\n-                            }\n+                            cv.visitOuterClass(instrumentedType.getEnclosingType().getInternalName(), NO_REFERENCE, NO_REFERENCE);\n                         }\n                     }\n \ndiff --git a/byte-buddy-dep/src/main/java/net/bytebuddy/pool/TypePool.java b/byte-buddy-dep/src/main/java/net/bytebuddy/pool/TypePool.java\nindex eee2c35172..4ceea2eb6b 100644\n--- a/byte-buddy-dep/src/main/java/net/bytebuddy/pool/TypePool.java\n+++ b/byte-buddy-dep/src/main/java/net/bytebuddy/pool/TypePool.java\n@@ -7567,16 +7567,16 @@ public interface TypePool {\n             @Override\n             public void visitInnerClass(String internalName, String outerName, String innerName, int modifiers) {\n                 if (internalName.equals(this.internalName)) {\n-                    this.modifiers = modifiers & REAL_MODIFIER_MASK;\n-                    if (innerName == null) {\n-                        anonymousType = true;\n-                    }\n                     if (outerName != null) {\n                         declaringTypeName = outerName;\n                         if (typeContainment.isSelfContained()) {\n                             typeContainment = new LazyTypeDescription.TypeContainment.WithinType(outerName, false);\n                         }\n                     }\n+                    if (innerName == null && !typeContainment.isSelfContained()) { // Some compilers define this property inconsistently.\n+                        anonymousType = true;\n+                    }\n+                    this.modifiers = modifiers & REAL_MODIFIER_MASK;\n                 } else if (outerName != null && innerName != null && outerName.equals(this.internalName)) {\n                     declaredTypes.add(\"L\" + internalName + \";\");\n                 }\n",
    "projectMetrics": {
      "numberSourceFiles": 306,
      "numberLibrariesFailingModule": 11,
      "numberTestFiles": 702,
      "numberModules": 7
    },
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 1508493176,
        "hostName": "spirals-bears",
        "totalMemory": 1979711488,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Sep 23, 2018 8:13:56 PM",
      "projectRootPomPath": "./workspace/raphw/byte-buddy/432194751/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            2,
            131
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 133
        },
        "testing": {
          "stepDurations": [
            62
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 62
        },
        "cloning": {
          "stepDurations": [
            232
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 232
        }
      },
      "reproductionDateBeginning": "Sep 23, 2018 8:03:24 PM",
      "totalDuration": 625
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 148,
        "numberRunning": 149,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "org.mockito.exceptions.verification.WantedButNotInvoked",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 9
      },
      "failingModule": "/root/workspace/runelite/runelite/438254091/runelite-client",
      "failingClasses": [
        {
          "numberPassing": 7,
          "numberRunning": 8,
          "testClass": "net.runelite.client.plugins.idlenotifier.IdleNotifierPluginTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "org.mockito.exceptions.verification.WantedButNotInvoked",
          "testMethod": "checkAnimationIdle",
          "testClass": "net.runelite.client.plugins.idlenotifier.IdleNotifierPluginTest",
          "detail": "\nWanted but not invoked:\nnotifier.notify(\"[Deathbeam] is now idle!\");\n-> at net.runelite.client.plugins.idlenotifier.IdleNotifierPluginTest.checkAnimationIdle(IdleNotifierPluginTest.java:131)\nActually, there were zero interactions with this mock.\n",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/runelite/runelite/builds/438256317",
        "date": "Oct 7, 2018 2:59:14 PM",
        "id": 438256317
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/runelite/runelite/builds/438254091",
        "date": "Oct 7, 2018 2:50:30 PM",
        "id": 438254091
      }
    },
    "repository": {
      "name": "runelite-runelite",
      "url": "https://github.com/runelite/runelite",
      "isFork": false,
      "pullRequestId": 5863,
      "isPullRequest": true,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 57461213
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/runelite/runelite/commit/a3f6fd6d7b00d4e86a8454ca21f45dafc11c6c59",
        "sha": "a3f6fd6d7b00d4e86a8454ca21f45dafc11c6c59",
        "branchName": "master",
        "date": "Oct 7, 2018 2:54:44 PM",
        "repoName": "runelite/runelite"
      },
      "fixerBuildBaseRepo": {
        "url": "https://github.com/runelite/runelite/commit/bd8f75cf3056309ab9832e84a9834e381d42221d",
        "sha": "bd8f75cf3056309ab9832e84a9834e381d42221d",
        "branchName": "master",
        "date": "Oct 7, 2018 2:20:38 PM",
        "repoName": "runelite/runelite"
      },
      "fixerBuildForkRepo": {
        "url": "https://github.com/forsco/runelite/commit/895f83cb2fa2b20b62073b6bb561cb32b6b234cd",
        "sha": "895f83cb2fa2b20b62073b6bb561cb32b6b234cd",
        "branchName": "lunars-idle-alerts",
        "date": "Oct 7, 2018 3:00:34 PM",
        "repoName": "forsco/runelite"
      },
      "buggyBuildForkRepo": {
        "url": "https://github.com/forsco/runelite/commit/1af82439005ca706ee561082b4c73e13f6d7e1fa",
        "sha": "1af82439005ca706ee561082b4c73e13f6d7e1fa",
        "branchName": "lunars-idle-alerts",
        "date": "Oct 7, 2018 2:56:36 PM",
        "repoName": "forsco/runelite"
      },
      "buggyBuild": {
        "url": "http://github.com/runelite/runelite/commit/216fddac509cfea4ec2dce35816da97a30d93ff5",
        "sha": "216fddac509cfea4ec2dce35816da97a30d93ff5",
        "branchName": "master",
        "date": "Oct 7, 2018 2:40:17 PM",
        "repoName": "runelite/runelite"
      },
      "buggyBuildBaseRepo": {
        "url": "https://github.com/runelite/runelite/commit/bd8f75cf3056309ab9832e84a9834e381d42221d",
        "sha": "bd8f75cf3056309ab9832e84a9834e381d42221d",
        "branchName": "master",
        "date": "Oct 7, 2018 2:20:38 PM",
        "repoName": "runelite/runelite"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/runelite-runelite-438254091-438256317\n",
    "projectMetrics": {
      "numberSourceFiles": 1412,
      "numberLibrariesFailingModule": 36,
      "numberTestFiles": 88,
      "numberModules": 14
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 2,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 6,
        "numberDeleted": 7
      }
    },
    "diff": "diff --git a/runelite-api/src/main/java/net/runelite/api/GraphicID.java b/runelite-api/src/main/java/net/runelite/api/GraphicID.java\nindex 4322fb527f..80d352df21 100644\n--- a/runelite-api/src/main/java/net/runelite/api/GraphicID.java\n+++ b/runelite-api/src/main/java/net/runelite/api/GraphicID.java\n@@ -46,6 +46,5 @@ public class GraphicID\n \tpublic static final int FLYING_FISH = 1387;\n \tpublic static final int NPC_CONTACT = 728;\n \tpublic static final int POT_SHARE = 733;\n-\tpublic static final int FERTILE_SOIL = -1;\n \tpublic static final int BAKE_PIE = 476;\n }\ndiff --git a/runelite-client/src/main/java/net/runelite/client/plugins/idlenotifier/IdleNotifierPlugin.java b/runelite-client/src/main/java/net/runelite/client/plugins/idlenotifier/IdleNotifierPlugin.java\nindex 84fc113c76..71f4bea1fa 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/idlenotifier/IdleNotifierPlugin.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/idlenotifier/IdleNotifierPlugin.java\n@@ -205,11 +205,6 @@ public class IdleNotifierPlugin extends Plugin\n \t\t\t/* Magic */\n \t\t\tcase MAGIC_CHARGING_ORBS:\n \t\t\tcase MAGIC_LUNAR_STRING_JEWELRY:\n-\t\t\tcase MAGIC_LUNAR_SHARED:\n-\t\t\t\tif (graphic != GraphicID.BAKE_PIE) // Don't send an alert unless the graphic matches Bake Pie from the shared animation\n-\t\t\t\t{\n-\t\t\t\t\tbreak;\n-\t\t\t\t}\n \t\t\tcase MAGIC_MAKE_TABLET:\n \t\t\t/* Prayer */\n \t\t\tcase USING_GILDED_ALTAR:\n@@ -218,6 +213,13 @@ public class IdleNotifierPlugin extends Plugin\n \t\t\t\tresetTimers();\n \t\t\t\tlastAnimation = animation;\n \t\t\t\tbreak;\n+\t\t\tcase MAGIC_LUNAR_SHARED:\n+\t\t\t\tif (graphic != GraphicID.BAKE_PIE) // Don't send an alert unless the graphic matches Bake Pie from the shared animation\n+\t\t\t\t{\n+\t\t\t\t\tresetTimers();\n+\t\t\t\t\tlastAnimation = animation;\n+\t\t\t\t\tbreak;\n+\t\t\t\t}\n \t\t\tcase IDLE:\n \t\t\t\tbreak;\n \t\t\tdefault:\n",
    "type": "failing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 398487336,
        "hostName": "spirals-bears",
        "totalMemory": 455081984,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Oct 7, 2018 3:05:34 PM",
      "projectRootPomPath": "./workspace/runelite/runelite/438254091/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            4,
            115
          ],
          "stepNames": [
            "CheckoutBuggyBuildCandidate",
            "BuildProjectBuggyBuildCandidate"
          ],
          "nbSteps": 2,
          "totalDuration": 119
        },
        "testing": {
          "stepDurations": [
            76
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidate"
          ],
          "nbSteps": 1,
          "totalDuration": 76
        },
        "cloning": {
          "stepDurations": [
            12
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 12
        }
      },
      "reproductionDateBeginning": "Oct 7, 2018 2:59:23 PM",
      "totalDuration": 367
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 41,
        "numberRunning": 45,
        "numberFailing": 4,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "org.junit.ComparisonFailure",
            "isError": false,
            "occurrences": 4
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/societe-generale/ci-droid-tasks-consumer/420388707/ci-droid-tasks-consumer-services",
      "failingClasses": [
        {
          "numberPassing": 10,
          "numberRunning": 14,
          "testClass": "com.societegenerale.cidroid.tasks.consumer.services.ActionToPerformServiceTest",
          "numberFailing": 4,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "testMethod": "reuseBranchIfAlreadyExistWhenDoing_PULL_REQUEST",
          "testClass": "com.societegenerale.cidroid.tasks.consumer.services.ActionToPerformServiceTest",
          "detail": "expected:<\"[myPrBranch]\"> but was:<\"[this is the original commit message by the user]\">",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "testMethod": "shouldCreatePRwithBranchName_whenPRtitleIsNotProvided",
          "testClass": "com.societegenerale.cidroid.tasks.consumer.services.ActionToPerformServiceTest",
          "detail": "expected:<\"[myPrBranch]\"> but was:<\"[this is the original commit message by the user]\">",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "testMethod": "shouldCreatePRwithProvidedTitle",
          "testClass": "com.societegenerale.cidroid.tasks.consumer.services.ActionToPerformServiceTest",
          "detail": "expected:<\"[new feature branch]\"> but was:<\"[this is the original commit message by the user]\">",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "testMethod": "performActionOfType_PULL_REQUEST",
          "testClass": "com.societegenerale.cidroid.tasks.consumer.services.ActionToPerformServiceTest",
          "detail": "expected:<\"[myPrBranch]\"> but was:<\"[this is the original commit message by the user]\">",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/societe-generale/ci-droid-tasks-consumer/builds/430936160",
        "date": "Sep 20, 2018 11:22:06 AM",
        "id": 430936160
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/societe-generale/ci-droid-tasks-consumer/builds/420388707",
        "date": "Aug 25, 2018 6:24:12 AM",
        "id": 420388707
      }
    },
    "repository": {
      "name": "societe-generale-ci-droid-tasks-consumer",
      "url": "https://github.com/societe-generale/ci-droid-tasks-consumer",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 137922807
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/societe-generale/ci-droid-tasks-consumer/commit/22675d288c728b3ce3bd0a65c823127fa39b070c",
        "sha": "22675d288c728b3ce3bd0a65c823127fa39b070c",
        "branchName": "master",
        "date": "Sep 20, 2018 11:18:46 AM",
        "repoName": "societe-generale/ci-droid-tasks-consumer"
      },
      "buggyBuild": {
        "url": "http://github.com/societe-generale/ci-droid-tasks-consumer/commit/27d59c0db669b4e9b19c127028c7bcfd603f3320",
        "sha": "27d59c0db669b4e9b19c127028c7bcfd603f3320",
        "branchName": "master",
        "date": "Aug 25, 2018 6:13:55 AM",
        "repoName": "societe-generale/ci-droid-tasks-consumer"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/societe-generale-ci-droid-tasks-consumer-420388707-430936160\n",
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 10,
        "numberDeleted": 3
      }
    },
    "type": "passing_passing",
    "diff": "diff --git a/ci-droid-tasks-consumer-services/src/main/java/com/societegenerale/cidroid/tasks/consumer/services/ActionToPerformService.java b/ci-droid-tasks-consumer-services/src/main/java/com/societegenerale/cidroid/tasks/consumer/services/ActionToPerformService.java\nindex ca05835b15..b30a61c765 100644\n--- a/ci-droid-tasks-consumer-services/src/main/java/com/societegenerale/cidroid/tasks/consumer/services/ActionToPerformService.java\n+++ b/ci-droid-tasks-consumer-services/src/main/java/com/societegenerale/cidroid/tasks/consumer/services/ActionToPerformService.java\n@@ -115,9 +115,11 @@ public class ActionToPerformService {\n             if (existingResourceExists(existingResourceContent)) {\n                 decodedOriginalContent = GitHubContentBase64codec.decode(existingResourceContent.getBase64EncodedContent());\n                 newContent = actionToReplicate.provideContent(decodedOriginalContent);\n-            } else if (actionToReplicate.canContinueIfResourceDoesntExist()) {\n+            }\n+            else if (actionToReplicate.canContinueIfResourceDoesntExist()) {\n                 newContent = actionToReplicate.provideContent(null);\n-            } else {\n+            }\n+            else {\n                 //existing resource doesnt exist and we should not continue\n \n                 log.info(\"{} NOT updated on repo {}, on branch {}, as it doesnt exist\", resourceToUpdate.getFilePathOnRepo(),\n@@ -203,7 +205,12 @@ public class ActionToPerformService {\n         PullRequestToCreate newPr = new PullRequestToCreate();\n         newPr.setHead(branchName);\n         newPr.setBase(impactedRepo.getDefaultBranch());\n-        newPr.setTitle(action.getCommitMessage());\n+\n+        PullRequestGitHubInteraction pullRequestGitHubInteraction=(PullRequestGitHubInteraction)action.getGitHubInteraction();\n+\n+        String providedPrTitle=pullRequestGitHubInteraction.getPullRequestTitle();\n+\n+        newPr.setTitle(providedPrTitle!=null ? providedPrTitle : branchName);\n         newPr.setBody(\"performed on behalf of \" + action.getGitLogin() + \" by CI-droid\\n\\n\" + action.getCommitMessage());\n \n         try{\n",
    "projectMetrics": {
      "numberSourceFiles": 58,
      "numberLibrariesFailingModule": 34,
      "numberTestFiles": 35,
      "numberModules": 4
    },
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 329789176,
        "hostName": "spirals-bears",
        "totalMemory": 418381824,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Sep 20, 2018 11:24:42 AM",
      "projectRootPomPath": "./workspace/societe-generale/ci-droid-tasks-consumer/420388707/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            6,
            0,
            0,
            56
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 62
        },
        "testing": {
          "stepDurations": [
            15
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 15
        },
        "cloning": {
          "stepDurations": [
            2
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 2
        }
      },
      "reproductionDateBeginning": "Sep 20, 2018 11:22:21 AM",
      "totalDuration": 135
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 615,
        "numberRunning": 616,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/SonarOpenCommunity/sonar-cxx/437974912/cxx-checks",
      "failingClasses": [
        {
          "numberPassing": 0,
          "numberRunning": 1,
          "testClass": "org.sonar.cxx.checks.naming.MethodNameCheckTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "test",
          "testClass": "org.sonar.cxx.checks.naming.MethodNameCheckTest",
          "detail": "\nExpected: 96\ngot: 67",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/SonarOpenCommunity/sonar-cxx/builds/438070185",
        "date": "Oct 6, 2018 8:51:20 PM",
        "id": 438070185
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/SonarOpenCommunity/sonar-cxx/builds/437974912",
        "date": "Oct 6, 2018 1:55:17 PM",
        "id": 437974912
      }
    },
    "repository": {
      "name": "SonarOpenCommunity-sonar-cxx",
      "url": "https://github.com/SonarOpenCommunity/sonar-cxx",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 6140556
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/SonarOpenCommunity/sonar-cxx/commit/040a94a2104f7cd9ad7e0d0cb4d8935052264720",
        "sha": "040a94a2104f7cd9ad7e0d0cb4d8935052264720",
        "branchName": "master",
        "date": "Oct 6, 2018 8:14:52 PM",
        "repoName": "SonarOpenCommunity/sonar-cxx"
      },
      "buggyBuild": {
        "url": "http://github.com/SonarOpenCommunity/sonar-cxx/commit/21562864e471b5a1db1c85ef08ed082168894e1b",
        "sha": "21562864e471b5a1db1c85ef08ed082168894e1b",
        "branchName": "master",
        "date": "Oct 6, 2018 1:18:31 PM",
        "repoName": "SonarOpenCommunity/sonar-cxx"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/SonarOpenCommunity-sonar-cxx-437974912-438070185\n",
    "projectMetrics": {
      "numberSourceFiles": 226,
      "numberLibrariesFailingModule": 47,
      "numberTestFiles": 162,
      "numberModules": 8
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 4,
        "numberDeleted": 25
      }
    },
    "diff": "diff --git a/cxx-checks/src/main/java/org/sonar/cxx/checks/naming/MethodNameCheck.java b/cxx-checks/src/main/java/org/sonar/cxx/checks/naming/MethodNameCheck.java\nindex 7e241c9f4f..2806bfbf90 100644\n--- a/cxx-checks/src/main/java/org/sonar/cxx/checks/naming/MethodNameCheck.java\n+++ b/cxx-checks/src/main/java/org/sonar/cxx/checks/naming/MethodNameCheck.java\n@@ -19,10 +19,11 @@\n  */\n package org.sonar.cxx.checks.naming;\n \n-import com.sonar.sslr.api.AstNode;\n-import com.sonar.sslr.api.Grammar;\n+import java.util.Optional;\n import java.util.regex.Pattern;\n+\n import javax.annotation.Nullable;\n+\n import org.sonar.check.Priority;\n import org.sonar.check.Rule;\n import org.sonar.check.RuleProperty;\n@@ -32,6 +33,10 @@ import org.sonar.squidbridge.annotations.ActivatedByDefault;\n import org.sonar.squidbridge.annotations.SqaleConstantRemediation;\n import org.sonar.squidbridge.checks.SquidCheck;\n \n+import com.sonar.sslr.api.AstNode;\n+import com.sonar.sslr.api.GenericTokenType;\n+import com.sonar.sslr.api.Grammar;\n+\n /**\n  * MethodNameCheck\n  *\n@@ -111,6 +116,22 @@ public class MethodNameCheck extends SquidCheck<Grammar> {\n     return result;\n   }\n \n+  private static Optional<AstNode> getMostNestedTypeName(AstNode nestedNameSpecifier) {\n+    Optional<AstNode> result = Optional.empty();\n+    for (AstNode child : nestedNameSpecifier.getChildren()) {\n+      if (\n+          // type name was recognized by parser (most probably the least nested type)\n+          child.is(CxxGrammarImpl.typeName) ||\n+          // type name was recognized as template\n+          child.is(CxxGrammarImpl.simpleTemplateId) ||\n+          // type name was recognized, but not properly typed\n+          GenericTokenType.IDENTIFIER.equals(child.getToken().getType())) {\n+        result = Optional.of(child);\n+      }\n+    }\n+    return result;\n+  }\n+\n   private static @Nullable\n   AstNode getOutsideMemberDeclaration(AstNode declId) {\n     AstNode nestedNameSpecifier = declId.getFirstDescendant(CxxGrammarImpl.nestedNameSpecifier);\n@@ -118,9 +139,9 @@ public class MethodNameCheck extends SquidCheck<Grammar> {\n     if (nestedNameSpecifier != null) {\n       AstNode idNode = declId.getLastChild(CxxGrammarImpl.className);\n       if (idNode != null) {\n-        AstNode className = nestedNameSpecifier.getFirstDescendant(CxxGrammarImpl.className);\n+        Optional<AstNode> typeName = getMostNestedTypeName(nestedNameSpecifier);\n         // if class name is equal to method name then it is a ctor or dtor\n-        if ((className != null) && !className.getTokenValue().equals(idNode.getTokenValue())) {\n+        if (typeName.isPresent() && !typeName.get().getTokenValue().equals(idNode.getTokenValue())) {\n           result = idNode;\n         }\n       }\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 318911656,
        "hostName": "spirals-bears",
        "totalMemory": 465043456,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Oct 6, 2018 8:55:27 PM",
      "projectRootPomPath": "./workspace/SonarOpenCommunity/sonar-cxx/437974912/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            83
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 83
        },
        "testing": {
          "stepDurations": [
            29
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 29
        },
        "cloning": {
          "stepDurations": [
            12
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 12
        }
      },
      "reproductionDateBeginning": "Oct 6, 2018 8:51:36 PM",
      "totalDuration": 223
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 95,
        "numberRunning": 96,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 1
      },
      "failingModule": "/root/workspace/SpoonLabs/gumtree-spoon-ast-diff/431628140",
      "failingClasses": [
        {
          "numberPassing": 79,
          "numberRunning": 80,
          "testClass": "gumtree.spoon.AstComparatorTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 1
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "test_t_209184_buggy_allopsNPE",
          "isError": false,
          "testClass": "gumtree.spoon.AstComparatorTest"
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/SpoonLabs/gumtree-spoon-ast-diff/builds/431912220",
        "date": "Sep 22, 2018 6:50:00 PM",
        "id": 431912220
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/SpoonLabs/gumtree-spoon-ast-diff/builds/431628140",
        "date": "Sep 21, 2018 8:44:35 PM",
        "id": 431628140
      }
    },
    "repository": {
      "name": "SpoonLabs-gumtree-spoon-ast-diff",
      "url": "https://github.com/SpoonLabs/gumtree-spoon-ast-diff",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 25924085
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/SpoonLabs/gumtree-spoon-ast-diff/commit/8eaaa2ac48a1bb384aa95b28bf00df444bf421f9",
        "sha": "8eaaa2ac48a1bb384aa95b28bf00df444bf421f9",
        "branchName": "master",
        "date": "Sep 22, 2018 6:46:27 PM",
        "repoName": "SpoonLabs/gumtree-spoon-ast-diff"
      },
      "buggyBuild": {
        "url": "http://github.com/SpoonLabs/gumtree-spoon-ast-diff/commit/820db5860556768256c5fbda3c41c9e62e772c33",
        "sha": "820db5860556768256c5fbda3c41c9e62e772c33",
        "branchName": "master",
        "date": "Sep 21, 2018 8:41:08 PM",
        "repoName": "SpoonLabs/gumtree-spoon-ast-diff"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/SpoonLabs-gumtree-spoon-ast-diff-431628140-431912220\n",
    "projectMetrics": {
      "numberSourceFiles": 15,
      "numberLibrariesFailingModule": 39,
      "numberTestFiles": 3,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 22,
        "numberDeleted": 23
      }
    },
    "diff": "diff --git a/src/main/java/gumtree/spoon/diff/DiffImpl.java b/src/main/java/gumtree/spoon/diff/DiffImpl.java\nindex c06b882883..976e2dbf8b 100644\n--- a/src/main/java/gumtree/spoon/diff/DiffImpl.java\n+++ b/src/main/java/gumtree/spoon/diff/DiffImpl.java\n@@ -1,5 +1,12 @@\n package gumtree.spoon.diff;\n \n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.NoSuchElementException;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+\n import com.github.gumtreediff.actions.ActionGenerator;\n import com.github.gumtreediff.actions.model.Action;\n import com.github.gumtreediff.actions.model.Delete;\n@@ -11,6 +18,7 @@ import com.github.gumtreediff.matchers.MappingStore;\n import com.github.gumtreediff.matchers.Matcher;\n import com.github.gumtreediff.tree.ITree;\n import com.github.gumtreediff.tree.TreeContext;\n+\n import gumtree.spoon.builder.SpoonGumTreeBuilder;\n import gumtree.spoon.diff.operations.DeleteOperation;\n import gumtree.spoon.diff.operations.InsertOperation;\n@@ -20,13 +28,6 @@ import gumtree.spoon.diff.operations.OperationKind;\n import gumtree.spoon.diff.operations.UpdateOperation;\n import spoon.reflect.declaration.CtElement;\n \n-import java.util.ArrayList;\n-import java.util.Collections;\n-import java.util.List;\n-import java.util.NoSuchElementException;\n-import java.util.Optional;\n-import java.util.stream.Collectors;\n-\n /**\n  * @author Matias Martinez, matias.martinez@inria.fr\n  */\n@@ -54,12 +55,17 @@ public class DiffImpl implements Diff {\n \t\tfinal Matcher matcher = new CompositeMatchers.ClassicGumtree(rootSpoonLeft, rootSpoonRight, mappingsComp);\n \t\tmatcher.match();\n \n-\t\tfinal ActionGenerator actionGenerator = new ActionGenerator(rootSpoonLeft, rootSpoonRight, matcher.getMappings());\n+\t\tfinal ActionGenerator actionGenerator = new ActionGenerator(rootSpoonLeft, rootSpoonRight,\n+\t\t\t\tmatcher.getMappings());\n \t\tactionGenerator.generate();\n \n-\n+\t\tActionClassifier actionClassifier = new ActionClassifier(matcher.getMappingsAsSet(),\n+\t\t\t\tactionGenerator.getActions());\n+\t\t// Bugfix: the Action classifier must be executed *BEFORE* the convertToSpoon\n+\t\t// because it writes meta-data on the trees\n+\t\tthis.rootOperations = convertToSpoon(actionClassifier.getRootActions());\n \t\tthis.allOperations = convertToSpoon(actionGenerator.getActions());\n-\t\tthis.rootOperations = convertToSpoon(new ActionClassifier(matcher.getMappingsAsSet(), actionGenerator.getActions()).getRootActions());\n+\n \t\tthis._mappingsComp = mappingsComp;\n \t\tthis.context = context;\n \n@@ -120,7 +126,8 @@ public class DiffImpl implements Diff {\n \t\t\tCtElement el = operation.getNode();\n \t\t\tif (operation instanceof InsertOperation) {\n \t\t\t\t// we take the corresponding node in the source tree\n-\t\t\t\tel = (CtElement) _mappingsComp.getSrc(operation.getAction().getNode().getParent()).getMetadata(SpoonGumTreeBuilder.SPOON_OBJECT);\n+\t\t\t\tel = (CtElement) _mappingsComp.getSrc(operation.getAction().getNode().getParent())\n+\t\t\t\t\t\t.getMetadata(SpoonGumTreeBuilder.SPOON_OBJECT);\n \t\t\t}\n \t\t\tcopy.add(el);\n \t\t}\n@@ -170,11 +177,12 @@ public class DiffImpl implements Diff {\n \t}\n \n \t@Override\n-\tpublic boolean containsOperations(List<Operation> operations, OperationKind kind, String nodeKind, String nodeLabel) {\n-\t\treturn operations.stream().anyMatch(operation -> operation.getAction().getClass().getSimpleName().equals(kind.name()) //\n-\t\t\t\t&& context.getTypeLabel(operation.getAction().getNode()).equals(nodeKind)\n-\t\t\t\t&& operation.getAction().getNode().getLabel().equals(nodeLabel)\n-\t\t);\n+\tpublic boolean containsOperations(List<Operation> operations, OperationKind kind, String nodeKind,\n+\t\t\tString nodeLabel) {\n+\t\treturn operations.stream()\n+\t\t\t\t.anyMatch(operation -> operation.getAction().getClass().getSimpleName().equals(kind.name()) //\n+\t\t\t\t\t\t&& context.getTypeLabel(operation.getAction().getNode()).equals(nodeKind)\n+\t\t\t\t\t\t&& operation.getAction().getNode().getLabel().equals(nodeLabel));\n \t}\n \n \t@Override\n@@ -193,9 +201,10 @@ public class DiffImpl implements Diff {\n \t\t\t}\n \t\t\tString nodeType = context.getTypeLabel(node.getType());\n \t\t\tif (nodeElement != null) {\n-\t\t\t\tnodeType += \"(\" + nodeElement.getClass().getSimpleName()+\")\";\n+\t\t\t\tnodeType += \"(\" + nodeElement.getClass().getSimpleName() + \")\";\n \t\t\t}\n-\t\t\tresult += \"\\\"\" + operation.getAction().getClass().getSimpleName() + \"\\\", \\\"\" + nodeType + \"\\\", \" + label + \" (size: \" + node.getDescendants().size() + \")\" + node.toTreeString();\n+\t\t\tresult += \"\\\"\" + operation.getAction().getClass().getSimpleName() + \"\\\", \\\"\" + nodeType + \"\\\", \" + label\n+\t\t\t\t\t+ \" (size: \" + node.getDescendants().size() + \")\" + node.toTreeString();\n \t\t}\n \t\treturn result;\n \t}\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 283096968,
        "hostName": "spirals-bears",
        "totalMemory": 371195904,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Sep 22, 2018 6:54:00 PM",
      "projectRootPomPath": "./workspace/SpoonLabs/gumtree-spoon-ast-diff/431628140/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            55
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 55
        },
        "testing": {
          "stepDurations": [
            64
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 64
        },
        "cloning": {
          "stepDurations": [
            4
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 4
        }
      },
      "reproductionDateBeginning": "Sep 22, 2018 6:50:16 PM",
      "totalDuration": 219
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 333,
        "numberRunning": 334,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 1
      },
      "failingModule": "/root/workspace/square/javapoet/418963407",
      "failingClasses": [
        {
          "numberPassing": 2,
          "numberRunning": 3,
          "testClass": "com.squareup.javapoet.ParameterSpecTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "addNonFinalModifier",
          "isError": false,
          "testClass": "com.squareup.javapoet.ParameterSpecTest"
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/square/javapoet/builds/436938143",
        "date": "Oct 4, 2018 5:01:24 AM",
        "id": 436938143
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/square/javapoet/builds/418963407",
        "date": "Aug 22, 2018 3:16:05 AM",
        "id": 418963407
      }
    },
    "repository": {
      "name": "square-javapoet",
      "url": "https://github.com/square/javapoet",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 7961991
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/square/javapoet/commit/c93bfa88c30940d4f9bda88cac322ebbb83703a6",
        "sha": "c93bfa88c30940d4f9bda88cac322ebbb83703a6",
        "branchName": "master",
        "date": "Oct 4, 2018 4:57:36 AM",
        "repoName": "square/javapoet"
      },
      "buggyBuild": {
        "url": "http://github.com/square/javapoet/commit/527c397d2987e44c4422412b8ab3ae5bca07db06",
        "sha": "527c397d2987e44c4422412b8ab3ae5bca07db06",
        "branchName": "master",
        "date": "Aug 22, 2018 3:13:24 AM",
        "repoName": "square/javapoet"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/square-javapoet-418963407-436938143\n",
    "projectMetrics": {
      "numberSourceFiles": 17,
      "numberLibrariesFailingModule": 19,
      "numberTestFiles": 19,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 0,
        "numberDeleted": 3
      }
    },
    "diff": "diff --git a/src/main/java/com/squareup/javapoet/ParameterSpec.java b/src/main/java/com/squareup/javapoet/ParameterSpec.java\nindex 63da3f234e..e30cb0fef9 100644\n--- a/src/main/java/com/squareup/javapoet/ParameterSpec.java\n+++ b/src/main/java/com/squareup/javapoet/ParameterSpec.java\n@@ -160,6 +160,9 @@ public final class ParameterSpec {\n     public Builder addModifiers(Iterable<Modifier> modifiers) {\n       checkNotNull(modifiers, \"modifiers == null\");\n       for (Modifier modifier : modifiers) {\n+        if (!modifier.equals(Modifier.FINAL)) {\n+          throw new IllegalStateException(\"unexpected parameter modifier: \" + modifier);\n+        }\n         this.modifiers.add(modifier);\n       }\n       return this;\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 304793552,
        "hostName": "spirals-bears",
        "totalMemory": 375390208,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Oct 4, 2018 5:03:33 AM",
      "projectRootPomPath": "./workspace/square/javapoet/418963407/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            42
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 42
        },
        "testing": {
          "stepDurations": [
            20
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 20
        },
        "cloning": {
          "stepDurations": [
            3
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 3
        }
      },
      "reproductionDateBeginning": "Oct 4, 2018 5:01:39 AM",
      "totalDuration": 109
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 32,
        "numberRunning": 33,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "org.junit.ComparisonFailure",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/tilln/jmeter-wssecurity/431819946",
      "failingClasses": [
        {
          "numberPassing": 8,
          "numberRunning": 9,
          "testClass": "nz.co.breakpoint.jmeter.modifiers.TestWSSDecryptionPostProcessor",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "testMethod": "testSwADecryptionWithHeaders",
          "testClass": "nz.co.breakpoint.jmeter.modifiers.TestWSSDecryptionPostProcessor",
          "detail": "expected:<Content-Type:[ ]text/plain\n> but was:<Content-Type:[]text/plain\n>",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/tilln/jmeter-wssecurity/builds/432218723",
        "date": "Sep 23, 2018 9:13:56 PM",
        "id": 432218723
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/tilln/jmeter-wssecurity/builds/431819946",
        "date": "Sep 22, 2018 11:41:03 AM",
        "id": 431819946
      }
    },
    "repository": {
      "name": "tilln-jmeter-wssecurity",
      "url": "https://github.com/tilln/jmeter-wssecurity",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 81063858
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/tilln/jmeter-wssecurity/commit/82698a280229dd9dae1228494f485f944de98f35",
        "sha": "82698a280229dd9dae1228494f485f944de98f35",
        "branchName": "feature/attachments",
        "date": "Sep 23, 2018 9:11:30 PM",
        "repoName": "tilln/jmeter-wssecurity"
      },
      "buggyBuild": {
        "url": "http://github.com/tilln/jmeter-wssecurity/commit/ff060984b7185641faa765f871ebccf5a3996e55",
        "sha": "ff060984b7185641faa765f871ebccf5a3996e55",
        "branchName": "feature/attachments",
        "date": "Sep 22, 2018 11:38:48 AM",
        "repoName": "tilln/jmeter-wssecurity"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/tilln-jmeter-wssecurity-431819946-432218723\n",
    "projectMetrics": {
      "numberSourceFiles": 26,
      "numberLibrariesFailingModule": 168,
      "numberTestFiles": 12,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 2,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 4,
        "numberDeleted": 3
      }
    },
    "diff": "diff --git a/src/main/java/nz/co/breakpoint/jmeter/modifiers/AbstractWSSecurityPostProcessor.java b/src/main/java/nz/co/breakpoint/jmeter/modifiers/AbstractWSSecurityPostProcessor.java\nindex 86067f8191..9abf561f05 100644\n--- a/src/main/java/nz/co/breakpoint/jmeter/modifiers/AbstractWSSecurityPostProcessor.java\n+++ b/src/main/java/nz/co/breakpoint/jmeter/modifiers/AbstractWSSecurityPostProcessor.java\n@@ -97,7 +97,8 @@ public abstract class AbstractWSSecurityPostProcessor extends AbstractWSSecurity\n                     result.setSuccessful(true);\n                 }\n                 result.setContentType(attachment.getMimeType());\n-                result.setResponseHeaders(Attachment.fromHeadersMap(attachment.getHeaders()));\n+                result.setEncodingAndType(attachment.getMimeType());\n+                result.setResponseHeaders(result.getResponseHeaders() + Attachment.fromHeadersMap(attachment.getHeaders()));\n                 try {\n                     result.setResponseData(IOUtils.toByteArray(attachment.getSourceStream())); // could be a binary attachment, so don't just treat as String\n                 }\n@@ -110,7 +111,7 @@ public abstract class AbstractWSSecurityPostProcessor extends AbstractWSSecurity\n \n     // Recursivley (depth-first) look for a SampleResult matching the decrypted attachment's cid\n     protected SampleResult findAttachment(String cid, SampleResult result) {\n-        if (result == null) return null; // recursion anchor\n+        if (result == null) return null; // should not normally happen\n \n         if (resultContainsCid(cid, result)) { return result; }\n \ndiff --git a/src/main/java/nz/co/breakpoint/jmeter/modifiers/Attachment.java b/src/main/java/nz/co/breakpoint/jmeter/modifiers/Attachment.java\nindex 3f7eb02df2..43641b9747 100644\n--- a/src/main/java/nz/co/breakpoint/jmeter/modifiers/Attachment.java\n+++ b/src/main/java/nz/co/breakpoint/jmeter/modifiers/Attachment.java\n@@ -95,7 +95,7 @@ public class Attachment extends AbstractTestElement {\n         StringBuilder sb = new StringBuilder();\n         if (headers != null) {\n             for (Map.Entry<String, String> entry : headers.entrySet()) {\n-                sb.append(entry.getKey()+\":\"+entry.getValue()+\"\\n\");\n+                sb.append(entry.getKey()+\": \"+entry.getValue()+\"\\n\");\n             }\n         }\n         return sb.toString();\n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 252585200,
        "hostName": "spirals-bears",
        "totalMemory": 389021696,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Sep 24, 2018 12:04:47 AM",
      "projectRootPomPath": "./workspace/tilln/jmeter-wssecurity/431819946/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            39
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 39
        },
        "testing": {
          "stepDurations": [
            37
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 37
        },
        "cloning": {
          "stepDurations": [
            2
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 2
        }
      },
      "reproductionDateBeginning": "Sep 24, 2018 12:02:26 AM",
      "totalDuration": 137
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 91,
        "numberRunning": 92,
        "numberFailing": 1,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 1
          }
        ],
        "numberSkipping": 1
      },
      "failingModule": "/root/workspace/vert-x3/vertx-jdbc-client/438227334",
      "failingClasses": [
        {
          "numberPassing": 42,
          "numberRunning": 43,
          "testClass": "io.vertx.ext.jdbc.JDBCClientTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testInsertOneShot",
          "testClass": "io.vertx.ext.jdbc.JDBCClientTest",
          "detail": "expected:<1> but was:<0>",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/vert-x3/vertx-jdbc-client/builds/440167311",
        "date": "Oct 11, 2018 4:23:15 PM",
        "id": 440167311
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/vert-x3/vertx-jdbc-client/builds/438227334",
        "date": "Oct 7, 2018 1:45:22 PM",
        "id": 438227334
      }
    },
    "repository": {
      "name": "vert-x3-vertx-jdbc-client",
      "url": "https://github.com/vert-x3/vertx-jdbc-client",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 26814908
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/vert-x3/vertx-jdbc-client/commit/351d8a489ba9cca11ef6a148e4d6aa9bae0ce8e0",
        "sha": "351d8a489ba9cca11ef6a148e4d6aa9bae0ce8e0",
        "branchName": "master",
        "date": "Oct 11, 2018 4:17:21 PM",
        "repoName": "vert-x3/vertx-jdbc-client"
      },
      "buggyBuild": {
        "url": "http://github.com/vert-x3/vertx-jdbc-client/commit/9f3f6ececa3527614163aede9b27fe4766e0d550",
        "sha": "9f3f6ececa3527614163aede9b27fe4766e0d550",
        "branchName": "master",
        "date": "Oct 7, 2018 12:09:50 PM",
        "repoName": "vert-x3/vertx-jdbc-client"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/vert-x3-vertx-jdbc-client-438227334-440167311\n",
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 2,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 46,
        "numberDeleted": 17
      }
    },
    "type": "passing_passing",
    "diff": "diff --git a/src/main/java/io/vertx/ext/jdbc/impl/JDBCConnectionImpl.java b/src/main/java/io/vertx/ext/jdbc/impl/JDBCConnectionImpl.java\nindex 46deea9ff5..29d3e7ea6d 100644\n--- a/src/main/java/io/vertx/ext/jdbc/impl/JDBCConnectionImpl.java\n+++ b/src/main/java/io/vertx/ext/jdbc/impl/JDBCConnectionImpl.java\n@@ -47,7 +47,7 @@ class JDBCConnectionImpl implements SQLConnection {\n \n   private final JDBCStatementHelper helper;\n \n-  private SQLOptions options = new SQLOptions().setAutoGeneratedKeys(true);\n+  private SQLOptions options;\n \n   public JDBCConnectionImpl(Context context, JDBCStatementHelper helper, Connection conn, PoolMetrics metrics, Object metric) {\n     this.vertx = context.owner();\ndiff --git a/src/main/java/io/vertx/ext/jdbc/impl/actions/JDBCUpdate.java b/src/main/java/io/vertx/ext/jdbc/impl/actions/JDBCUpdate.java\nindex d7ff9509cc..a5df713ba8 100644\n--- a/src/main/java/io/vertx/ext/jdbc/impl/actions/JDBCUpdate.java\n+++ b/src/main/java/io/vertx/ext/jdbc/impl/actions/JDBCUpdate.java\n@@ -42,42 +42,43 @@ public class JDBCUpdate extends AbstractJDBCAction<UpdateResult> {\n   }\n \n   private PreparedStatement prepareStatement(Connection conn) throws SQLException {\n-    if (options != null) {\n-      if (options.isAutoGeneratedKeys() && options.getAutoGeneratedKeysIndexes() == null) {\n-        generateKeys = true;\n-        return conn.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);\n-      }\n+    if (options == null) {\n+      generateKeys = true;\n+      return conn.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);\n+    }\n \n-      if (options.getAutoGeneratedKeysIndexes() != null) {\n-        // attempt to guess type from index 0\n-        if (options.getAutoGeneratedKeysIndexes().getValue(0) instanceof String) {\n-          String[] columnNames = new String[options.getAutoGeneratedKeysIndexes().size()];\n-          for (int i = 0; i < columnNames.length; i++) {\n-            columnNames[i] = options.getAutoGeneratedKeysIndexes().getString(i);\n-          }\n+    if (!options.isAutoGeneratedKeys()) {\n+      generateKeys = false;\n+      return conn.prepareStatement(sql, Statement.NO_GENERATED_KEYS);\n+    }\n \n-          generateKeys = true;\n-          return conn.prepareStatement(sql, columnNames);\n-        }\n+    if (options.getAutoGeneratedKeysIndexes() == null) {\n+      generateKeys = true;\n+      return conn.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);\n+    }\n \n-        // attempt to guess type from index 0\n-        if (options.getAutoGeneratedKeysIndexes().getValue(0) instanceof Integer) {\n-          int[] columnIndexes = new int[options.getAutoGeneratedKeysIndexes().size()];\n-          for (int i = 0; i < columnIndexes.length; i++) {\n-            columnIndexes[i] = options.getAutoGeneratedKeysIndexes().getInteger(i);\n-          }\n+    if (options.getAutoGeneratedKeysIndexes().getValue(0) instanceof String) {\n+      String[] columnNames = new String[options.getAutoGeneratedKeysIndexes().size()];\n+      for (int i = 0; i < columnNames.length; i++) {\n+        columnNames[i] = options.getAutoGeneratedKeysIndexes().getString(i);\n+      }\n \n-          generateKeys = true;\n-          return conn.prepareStatement(sql, columnIndexes);\n-        }\n+      generateKeys = true;\n+      return conn.prepareStatement(sql, columnNames);\n+    }\n \n-        // invalid type\n-        throw new SQLException(\"Invalid type for auto generated keys\");\n+    if (options.getAutoGeneratedKeysIndexes().getValue(0) instanceof Number) {\n+      int[] columnIndexes = new int[options.getAutoGeneratedKeysIndexes().size()];\n+      for (int i = 0; i < columnIndexes.length; i++) {\n+        columnIndexes[i] = options.getAutoGeneratedKeysIndexes().getInteger(i);\n       }\n+\n+      generateKeys = true;\n+      return conn.prepareStatement(sql, columnIndexes);\n     }\n \n-    generateKeys = false;\n-    return conn.prepareStatement(sql, Statement.NO_GENERATED_KEYS);\n+    // invalid type\n+    throw new SQLException(\"Invalid type for auto generated keys\");\n   }\n \n   @Override\n",
    "projectMetrics": {
      "numberSourceFiles": 23,
      "numberLibrariesFailingModule": 35,
      "numberTestFiles": 23,
      "numberModules": 1
    },
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 308363424,
        "hostName": "spirals-bears",
        "totalMemory": 396361728,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Oct 11, 2018 4:26:17 PM",
      "projectRootPomPath": "./workspace/vert-x3/vertx-jdbc-client/438227334/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            2,
            1,
            0,
            42
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 45
        },
        "testing": {
          "stepDurations": [
            41
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 41
        },
        "cloning": {
          "stepDurations": [
            2
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 2
        }
      },
      "reproductionDateBeginning": "Oct 11, 2018 4:23:38 PM",
      "totalDuration": 154
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 15,
        "numberRunning": 24,
        "numberFailing": 0,
        "numberErroring": 9,
        "failures": [
          {
            "failureName": "java.lang.NullPointerException",
            "isError": true,
            "occurrences": 9
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/vitorenesduarte/VCD-java-client/437204853",
      "failingClasses": [
        {
          "numberPassing": 0,
          "numberRunning": 9,
          "testClass": "org.imdea.vcd.queue.ConfQueueTest",
          "numberFailing": 0,
          "numberErroring": 9,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.NullPointerException",
          "testMethod": "testAdd2",
          "isError": true,
          "testClass": "org.imdea.vcd.queue.ConfQueueTest"
        },
        {
          "failureName": "java.lang.NullPointerException",
          "testMethod": "testAdd3",
          "isError": true,
          "testClass": "org.imdea.vcd.queue.ConfQueueTest"
        },
        {
          "failureName": "java.lang.NullPointerException",
          "testMethod": "testAdd4",
          "isError": true,
          "testClass": "org.imdea.vcd.queue.ConfQueueTest"
        },
        {
          "failureName": "java.lang.NullPointerException",
          "testMethod": "testAdd6",
          "isError": true,
          "testClass": "org.imdea.vcd.queue.ConfQueueTest"
        },
        {
          "failureName": "java.lang.NullPointerException",
          "testMethod": "testRandom",
          "isError": true,
          "testClass": "org.imdea.vcd.queue.ConfQueueTest"
        },
        {
          "failureName": "java.lang.NullPointerException",
          "testMethod": "testFailures",
          "isError": true,
          "testClass": "org.imdea.vcd.queue.ConfQueueTest"
        },
        {
          "failureName": "java.lang.NullPointerException",
          "testMethod": "testAdd1",
          "isError": true,
          "testClass": "org.imdea.vcd.queue.ConfQueueTest"
        },
        {
          "failureName": "java.lang.NullPointerException",
          "testMethod": "testFailure1",
          "isError": true,
          "testClass": "org.imdea.vcd.queue.ConfQueueTest"
        },
        {
          "failureName": "java.lang.NullPointerException",
          "testMethod": "testAdd5",
          "isError": true,
          "testClass": "org.imdea.vcd.queue.ConfQueueTest"
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/vitorenesduarte/VCD-java-client/builds/437571024",
        "date": "Oct 5, 2018 1:20:16 PM",
        "id": 437571024
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/vitorenesduarte/VCD-java-client/builds/437204853",
        "date": "Oct 4, 2018 5:54:09 PM",
        "id": 437204853
      }
    },
    "repository": {
      "name": "vitorenesduarte-VCD-java-client",
      "url": "https://github.com/vitorenesduarte/VCD-java-client",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 100865990
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/vitorenesduarte/VCD-java-client/commit/bba1c44e155e913e7108fa4c218915edd906e65a",
        "sha": "bba1c44e155e913e7108fa4c218915edd906e65a",
        "branchName": "delay",
        "date": "Oct 5, 2018 1:17:29 PM",
        "repoName": "vitorenesduarte/VCD-java-client"
      },
      "buggyBuild": {
        "url": "http://github.com/vitorenesduarte/VCD-java-client/commit/6fb2081e7bd5dab2569b51a6348bc52222871fc9",
        "sha": "6fb2081e7bd5dab2569b51a6348bc52222871fc9",
        "branchName": "delay",
        "date": "Oct 4, 2018 5:51:12 PM",
        "repoName": "vitorenesduarte/VCD-java-client"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/vitorenesduarte-VCD-java-client-437204853-437571024\n",
    "projectMetrics": {
      "numberSourceFiles": 22,
      "numberLibrariesFailingModule": 14,
      "numberTestFiles": 10,
      "numberModules": 1
    },
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 5,
        "numberDeleted": 1
      }
    },
    "diff": "diff --git a/src/main/java/org/imdea/vcd/queue/box/CommittedQueueBox.java b/src/main/java/org/imdea/vcd/queue/box/CommittedQueueBox.java\nindex 67a647e983..35af9af642 100644\n--- a/src/main/java/org/imdea/vcd/queue/box/CommittedQueueBox.java\n+++ b/src/main/java/org/imdea/vcd/queue/box/CommittedQueueBox.java\n@@ -35,7 +35,11 @@ public class CommittedQueueBox implements QueueBox<CommittedQueueBox> {\n \n     public CommittedQueueBox(CommittedQueueBox commitDepBox) {\n         this.dots = new Dots(commitDepBox.dots);\n-        this.dep = new Clock<>(commitDepBox.dep);\n+        if (commitDepBox.dep != null) {\n+            this.dep = new Clock<>(commitDepBox.dep);\n+        } else {\n+            this.dep = null;\n+        }\n         this.messageMap = new MessageMap(commitDepBox.messageMap);\n     }\n \n",
    "type": "passing_passing",
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 244135576,
        "hostName": "spirals-bears",
        "totalMemory": 370147328,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Oct 5, 2018 1:23:00 PM",
      "projectRootPomPath": "./workspace/vitorenesduarte/VCD-java-client/437204853/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            29
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 29
        },
        "testing": {
          "stepDurations": [
            35
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 35
        },
        "cloning": {
          "stepDurations": [
            2
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 2
        }
      },
      "reproductionDateBeginning": "Oct 5, 2018 1:20:35 PM",
      "totalDuration": 141
    }
  },
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 817,
        "numberRunning": 819,
        "numberFailing": 2,
        "numberErroring": 0,
        "failures": [
          {
            "failureName": "java.lang.AssertionError",
            "isError": false,
            "occurrences": 2
          }
        ],
        "numberSkipping": 0
      },
      "failingModule": "/root/workspace/vkostyukov/la4j/414793864",
      "failingClasses": [
        {
          "numberPassing": 64,
          "numberRunning": 65,
          "testClass": "org.la4j.vector.dense.BasicVectorTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        },
        {
          "numberPassing": 77,
          "numberRunning": 78,
          "testClass": "org.la4j.vector.sparse.CompressedVectorTest",
          "numberFailing": 1,
          "numberErroring": 0,
          "numberSkipping": 0
        }
      ],
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testFromMap_unordered",
          "testClass": "org.la4j.vector.sparse.CompressedVectorTest",
          "detail": "expected:<1.000 0.000 0.000 2.000 0.000 1.000 0.000> but was:<0.000 0.000 0.000 0.000 0.000 1.000 0.000>",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "testMethod": "testFromMap_unordered",
          "testClass": "org.la4j.vector.dense.BasicVectorTest",
          "detail": "expected:<1.000 0.000 0.000 2.000 0.000 1.000 0.000> but was:<0.000 0.000 0.000 0.000 0.000 1.000 0.000>",
          "isError": false
        }
      ]
    },
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/vkostyukov/la4j/builds/436911083",
        "date": "Oct 4, 2018 2:37:37 AM",
        "id": 436911083
      },
      "buggyBuild": {
        "url": "http://travis-ci.org/vkostyukov/la4j/builds/414793864",
        "date": "Aug 11, 2018 8:32:37 AM",
        "id": 414793864
      }
    },
    "repository": {
      "name": "vkostyukov-la4j",
      "url": "https://github.com/vkostyukov/la4j",
      "isFork": false,
      "pullRequestId": 0,
      "isPullRequest": false,
      "original": {
        "url": "",
        "name": "",
        "githubId": 0
      },
      "githubId": 7235555
    },
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/vkostyukov/la4j/commit/1229fcf1bec83b678ae8655fac893dc14b8e70ec",
        "sha": "1229fcf1bec83b678ae8655fac893dc14b8e70ec",
        "branchName": "master",
        "date": "Oct 4, 2018 2:34:43 AM",
        "repoName": "vkostyukov/la4j"
      },
      "buggyBuild": {
        "url": "http://github.com/vkostyukov/la4j/commit/c396addd2a046b7cc971750d592cf3a15eceb202",
        "sha": "c396addd2a046b7cc971750d592cf3a15eceb202",
        "branchName": "master",
        "date": "Aug 11, 2018 8:31:12 AM",
        "repoName": "vkostyukov/la4j"
      }
    },
    "branchUrl": "https://github.com/fermadeiral/bears-benchmark-fer/tree/vkostyukov-la4j-414793864-436911083\n",
    "patchDiff": {
      "files": {
        "numberAdded": 0,
        "numberChanged": 1,
        "numberDeleted": 0
      },
      "lines": {
        "numberAdded": 3,
        "numberDeleted": 2
      }
    },
    "type": "passing_passing",
    "diff": "diff --git a/src/main/java/org/la4j/vector/sparse/CompressedVector.java b/src/main/java/org/la4j/vector/sparse/CompressedVector.java\nindex 2e973e22ba..08383a748d 100644\n--- a/src/main/java/org/la4j/vector/sparse/CompressedVector.java\n+++ b/src/main/java/org/la4j/vector/sparse/CompressedVector.java\n@@ -207,11 +207,12 @@ public class CompressedVector extends SparseVector {\n      */\n     public static CompressedVector fromMap(Map<Integer, ? extends Number> map, int length) {\n         //TODO goto lambdas\n-        int cardinality = map.size();\n+        TreeMap<Integer, ? extends Number> sortedMap = new TreeMap<>(map);\n+        int cardinality = sortedMap.size();\n         int[] indices = new int[cardinality];\n         double[] values = new double[cardinality];\n         int i = 0;\n-        for (Map.Entry<Integer, ? extends Number> entry : map.entrySet()) {\n+        for (Map.Entry<Integer, ? extends Number> entry : sortedMap.entrySet()) {\n             int index = entry.getKey();\n             if (index < 0 || index >= length) {\n                 throw new IllegalArgumentException(\"Check your map: Index must be 0..n-1\");\n",
    "projectMetrics": {
      "numberSourceFiles": 86,
      "numberLibrariesFailingModule": 2,
      "numberTestFiles": 31,
      "numberModules": 1
    },
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 273899272,
        "hostName": "spirals-bears",
        "totalMemory": 379060224,
        "numberCPU": 16
      },
      "reproductionDateEnd": "Oct 4, 2018 2:39:44 AM",
      "projectRootPomPath": "./workspace/vkostyukov/la4j/414793864/pom.xml",
      "processDurations": {
        "building": {
          "stepDurations": [
            0,
            0,
            0,
            0,
            30
          ],
          "stepNames": [
            "CheckoutPatchedBuildCandidate",
            "ComputeSourceDir",
            "ComputeTestDir",
            "CheckoutBuggyBuildCandidateSourceCode",
            "BuildProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 5,
          "totalDuration": 30
        },
        "testing": {
          "stepDurations": [
            25
          ],
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ],
          "nbSteps": 1,
          "totalDuration": 25
        },
        "cloning": {
          "stepDurations": [
            4
          ],
          "stepNames": [
            "CloneRepository"
          ],
          "nbSteps": 1,
          "totalDuration": 4
        }
      },
      "reproductionDateBeginning": "Oct 4, 2018 2:37:51 AM",
      "totalDuration": 108
    }
  }
]