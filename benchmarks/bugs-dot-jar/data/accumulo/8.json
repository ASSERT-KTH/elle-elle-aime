{
    "bug_id": 8,
    "classification": {
        "singleLine": false
    },
    "commit": "13eb19c2",
    "failing_tests": [
        "org.apache.accumulo.core.client.mapreduce.AccumuloInputFormatTest"
    ],
    "files": 1,
    "jira_id": "1661",
    "linesAdd": 9,
    "linesRem": 2,
    "nb_error": 0,
    "nb_failure": 1,
    "nb_skipped": 0,
    "nb_test": 403,
    "patch": "diff --git a/core/src/main/java/org/apache/accumulo/core/client/mapreduce/lib/util/InputConfigurator.java b/core/src/main/java/org/apache/accumulo/core/client/mapreduce/lib/util/InputConfigurator.java\nindex ff1410704..b0e649b74 100644\n--- a/core/src/main/java/org/apache/accumulo/core/client/mapreduce/lib/util/InputConfigurator.java\n+++ b/core/src/main/java/org/apache/accumulo/core/client/mapreduce/lib/util/InputConfigurator.java\n@@ -238,8 +238,15 @@ public static void fetchColumns(Class<?> implementingClass, Configuration conf,\n    */\n   public static Set<Pair<Text,Text>> getFetchedColumns(Class<?> implementingClass, Configuration conf) {\n     ArgumentChecker.notNull(conf);\n-\n-    return deserializeFetchedColumns(conf.getStringCollection(enumToConfKey(implementingClass, ScanOpts.COLUMNS)));\n+    String confValue = conf.get(enumToConfKey(implementingClass, ScanOpts.COLUMNS));\n+    List<String> serialized = new ArrayList<String>();\n+    if (confValue != null) {\n+      // Split and include any trailing empty strings to allow empty column families\n+      for (String val : confValue.split(\",\", -1)) {\n+        serialized.add(val);\n+      }\n+    }\n+    return deserializeFetchedColumns(serialized);\n   }\n \n   public static Set<Pair<Text,Text>> deserializeFetchedColumns(Collection<String> serialized) {\n",
    "project": "accumulo",
    "buggy_compile_success": true,
    "buggy_test_success": false,
    "fixed_compile_success": true,
    "fixed_test_success": false
}