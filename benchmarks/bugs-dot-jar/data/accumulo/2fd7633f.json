{
  "files": 1, 
  "nb_test": 421, 
  "nb_error": 0, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "org.apache.accumulo.core.client.mapred.RangeInputSplitTest", 
    "org.apache.accumulo.core.client.mapreduce.RangeInputSplitTest"
  ], 
  "patch": "diff --git a/core/src/main/java/org/apache/accumulo/core/client/mapreduce/RangeInputSplit.java b/core/src/main/java/org/apache/accumulo/core/client/mapreduce/RangeInputSplit.java\nindex 73c9b59f3..05316a1ae 100644\n--- a/core/src/main/java/org/apache/accumulo/core/client/mapreduce/RangeInputSplit.java\n+++ b/core/src/main/java/org/apache/accumulo/core/client/mapreduce/RangeInputSplit.java\n@@ -204,6 +204,14 @@ public void readFields(DataInput in) throws IOException {\n       zooKeepers = in.readUTF();\n     }\n \n+    if (in.readBoolean()) {\n+      int numIterators = in.readInt();\n+      iterators = new ArrayList<IteratorSetting>(numIterators);\n+      for (int i = 0; i < numIterators; i++) {\n+        iterators.add(new IteratorSetting(in));\n+      }\n+    }\n+\n     if (in.readBoolean()) {\n       level = Level.toLevel(in.readInt());\n     }\n@@ -275,6 +283,14 @@ public void write(DataOutput out) throws IOException {\n       out.writeUTF(zooKeepers);\n     }\n \n+    out.writeBoolean(null != iterators);\n+    if (null != iterators) {\n+      out.writeInt(iterators.size());\n+      for (IteratorSetting iterator : iterators) {\n+        iterator.write(out);\n+      }\n+    }\n+\n     out.writeBoolean(null != level);\n     if (null != level) {\n       out.writeInt(level.toInt());\n", 
  "project": "accumulo", 
  "linesAdd": 16, 
  "jira_id": "2962", 
  "nb_skipped": 0, 
  "commit": "2fd7633f", 
  "nb_failure": 2, 
  "linesRem": 0
}