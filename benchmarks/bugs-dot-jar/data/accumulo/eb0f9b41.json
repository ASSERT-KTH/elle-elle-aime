{
  "files": 5, 
  "nb_test": 722, 
  "nb_error": 0, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "org.apache.accumulo.core.util.shell.commands.CompactCommandTest", 
    "org.apache.accumulo.core.util.shell.commands.MergeCommandTest", 
    "org.apache.accumulo.core.util.shell.commands.FlushCommandTest"
  ], 
  "patch": "diff --git a/core/src/main/java/org/apache/accumulo/core/client/admin/TableOperations.java b/core/src/main/java/org/apache/accumulo/core/client/admin/TableOperations.java\nindex 536d6e667..bcad3a30f 100644\n--- a/core/src/main/java/org/apache/accumulo/core/client/admin/TableOperations.java\n+++ b/core/src/main/java/org/apache/accumulo/core/client/admin/TableOperations.java\n@@ -260,7 +260,7 @@ Text getMaxRow(String tableName, Authorizations auths, Text startRow, boolean st\n    * @param start\n    *          first tablet to be compacted contains the row after this row, null means the first tablet in table\n    * @param end\n-   *          last tablet to be merged contains this row, null means the last tablet in table\n+   *          last tablet to be compacted contains this row, null means the last tablet in table\n    * @param flush\n    *          when true, table memory is flushed before compaction starts\n    * @param wait\n@@ -276,7 +276,7 @@ Text getMaxRow(String tableName, Authorizations auths, Text startRow, boolean st\n    * @param start\n    *          first tablet to be compacted contains the row after this row, null means the first tablet in table\n    * @param end\n-   *          last tablet to be merged contains this row, null means the last tablet in table\n+   *          last tablet to be compacted contains this row, null means the last tablet in table\n    * @param iterators\n    *          A set of iterators that will be applied to each tablet compacted\n    * @param flush\ndiff --git a/core/src/main/java/org/apache/accumulo/core/util/shell/commands/DeleteRowsCommand.java b/core/src/main/java/org/apache/accumulo/core/util/shell/commands/DeleteRowsCommand.java\nindex 64968f05e..6ffa3f40e 100644\n--- a/core/src/main/java/org/apache/accumulo/core/util/shell/commands/DeleteRowsCommand.java\n+++ b/core/src/main/java/org/apache/accumulo/core/util/shell/commands/DeleteRowsCommand.java\n@@ -54,9 +54,7 @@ public int numArgs() {\n   public Options getOptions() {\n     final Options o = new Options();\n     forceOpt = new Option(\"f\", \"force\", false, \"delete data even if start or end are not specified\");\n-    startRowOptExclusive = new Option(OptUtil.START_ROW_OPT, \"begin-row\", true, \"begin row (exclusive)\");\n-    startRowOptExclusive.setArgName(\"begin-row\");\n-    o.addOption(startRowOptExclusive);\n+    o.addOption(OptUtil.startRowOpt());\n     o.addOption(OptUtil.endRowOpt());\n     o.addOption(OptUtil.tableOpt(\"table to delete a row range from\"));\n     o.addOption(forceOpt);\ndiff --git a/core/src/main/java/org/apache/accumulo/core/util/shell/commands/MergeCommand.java b/core/src/main/java/org/apache/accumulo/core/util/shell/commands/MergeCommand.java\nindex 9213a06c8..18d519d36 100644\n--- a/core/src/main/java/org/apache/accumulo/core/util/shell/commands/MergeCommand.java\n+++ b/core/src/main/java/org/apache/accumulo/core/util/shell/commands/MergeCommand.java\n@@ -96,9 +96,7 @@ public Options getOptions() {\n     sizeOpt = new Option(\"s\", \"size\", true, \"merge tablets to the given size over the entire table\");\n     forceOpt = new Option(\"f\", \"force\", false, \"merge small tablets to large tablets, even if it goes over the given size\");\n     allOpt = new Option(\"\", \"all\", false, \"allow an entire table to be merged into one tablet without prompting the user for confirmation\");\n-    Option startRowOpt = OptUtil.startRowOpt();\n-    startRowOpt.setDescription(\"begin row (NOT inclusive)\");\n-    o.addOption(startRowOpt);\n+    o.addOption(OptUtil.startRowOpt());\n     o.addOption(OptUtil.endRowOpt());\n     o.addOption(OptUtil.tableOpt(\"table to be merged\"));\n     o.addOption(verboseOpt);\ndiff --git a/core/src/main/java/org/apache/accumulo/core/util/shell/commands/OptUtil.java b/core/src/main/java/org/apache/accumulo/core/util/shell/commands/OptUtil.java\nindex 9915bdf57..99e09e362 100644\n--- a/core/src/main/java/org/apache/accumulo/core/util/shell/commands/OptUtil.java\n+++ b/core/src/main/java/org/apache/accumulo/core/util/shell/commands/OptUtil.java\n@@ -117,7 +117,7 @@ public static OptionGroup addListDeleteGroup(final String name) {\n   }\n \n   public static Option startRowOpt() {\n-    final Option o = new Option(START_ROW_OPT, \"begin-row\", true, \"begin row (inclusive)\");\n+    final Option o = new Option(START_ROW_OPT, \"begin-row\", true, \"begin row (exclusive)\");\n     o.setArgName(\"begin-row\");\n     return o;\n   }\ndiff --git a/core/src/main/java/org/apache/accumulo/core/util/shell/commands/ScanCommand.java b/core/src/main/java/org/apache/accumulo/core/util/shell/commands/ScanCommand.java\nindex 9a0026af1..60ae0a7cc 100644\n--- a/core/src/main/java/org/apache/accumulo/core/util/shell/commands/ScanCommand.java\n+++ b/core/src/main/java/org/apache/accumulo/core/util/shell/commands/ScanCommand.java\n@@ -57,6 +57,7 @@\n \n   protected Option timestampOpt;\n   private Option optStartRowExclusive;\n+  private Option optStartRowInclusive;\n   private Option optEndRowExclusive;\n   private Option timeoutOption;\n   private Option profileOpt;\n@@ -318,7 +319,9 @@ public Options getOptions() {\n \n     o.addOption(scanOptAuths);\n     o.addOption(scanOptRow);\n-    o.addOption(OptUtil.startRowOpt());\n+    optStartRowInclusive = new Option(OptUtil.START_ROW_OPT, \"begin-row\", true, \"begin row (inclusive)\");\n+    optStartRowInclusive.setArgName(\"begin-row\");\n+    o.addOption(optStartRowInclusive);\n     o.addOption(OptUtil.endRowOpt());\n     o.addOption(optStartRowExclusive);\n     o.addOption(optEndRowExclusive);\n", 
  "project": "accumulo", 
  "linesAdd": 9, 
  "jira_id": "4138", 
  "nb_skipped": 2, 
  "commit": "eb0f9b41", 
  "nb_failure": 3, 
  "linesRem": 10
}