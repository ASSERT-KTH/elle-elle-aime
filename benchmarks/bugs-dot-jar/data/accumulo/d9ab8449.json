{
  "files": 5, 
  "nb_test": 434, 
  "nb_error": 1, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "org.apache.accumulo.core.security.CredentialsTest"
  ], 
  "patch": "diff --git a/core/src/main/java/org/apache/accumulo/core/client/impl/ConnectorImpl.java b/core/src/main/java/org/apache/accumulo/core/client/impl/ConnectorImpl.java\nindex 14df55f61..bd1156912 100644\n--- a/core/src/main/java/org/apache/accumulo/core/client/impl/ConnectorImpl.java\n+++ b/core/src/main/java/org/apache/accumulo/core/client/impl/ConnectorImpl.java\n@@ -55,6 +55,9 @@\n   \n   public ConnectorImpl(final Instance instance, Credentials cred) throws AccumuloException, AccumuloSecurityException {\n     ArgumentChecker.notNull(instance, cred);\n+    if (cred.getToken().isDestroyed())\n+      throw new AccumuloSecurityException(cred.getPrincipal(), SecurityErrorCode.TOKEN_EXPIRED);\n+    \n     this.instance = instance;\n     \n     this.credentials = cred;\ndiff --git a/core/src/main/java/org/apache/accumulo/core/client/mock/MockConnector.java b/core/src/main/java/org/apache/accumulo/core/client/mock/MockConnector.java\nindex 4af2ea516..80ec51333 100644\n--- a/core/src/main/java/org/apache/accumulo/core/client/mock/MockConnector.java\n+++ b/core/src/main/java/org/apache/accumulo/core/client/mock/MockConnector.java\n@@ -18,6 +18,7 @@\n \n import java.util.concurrent.TimeUnit;\n \n+import org.apache.accumulo.core.client.AccumuloSecurityException;\n import org.apache.accumulo.core.client.BatchDeleter;\n import org.apache.accumulo.core.client.BatchScanner;\n import org.apache.accumulo.core.client.BatchWriter;\n@@ -32,7 +33,10 @@\n import org.apache.accumulo.core.client.admin.InstanceOperations;\n import org.apache.accumulo.core.client.admin.SecurityOperations;\n import org.apache.accumulo.core.client.admin.TableOperations;\n+import org.apache.accumulo.core.client.impl.thrift.SecurityErrorCode;\n+import org.apache.accumulo.core.client.security.tokens.NullToken;\n import org.apache.accumulo.core.security.Authorizations;\n+import org.apache.accumulo.core.security.Credentials;\n \n public class MockConnector extends Connector {\n   \n@@ -40,12 +44,14 @@\n   private final MockAccumulo acu;\n   private final Instance instance;\n   \n-  MockConnector(String username, MockInstance instance) {\n-    this(username, new MockAccumulo(MockInstance.getDefaultFileSystem()), instance);\n+  MockConnector(String username, MockInstance instance) throws AccumuloSecurityException {\n+    this(new Credentials(username, new NullToken()), new MockAccumulo(MockInstance.getDefaultFileSystem()), instance);\n   }\n   \n-  MockConnector(String username, MockAccumulo acu, MockInstance instance) {\n-    this.username = username;\n+  MockConnector(Credentials credentials, MockAccumulo acu, MockInstance instance) throws AccumuloSecurityException {\n+    if (credentials.getToken().isDestroyed())\n+      throw new AccumuloSecurityException(credentials.getPrincipal(), SecurityErrorCode.TOKEN_EXPIRED);\n+    this.username = credentials.getPrincipal();\n     this.acu = acu;\n     this.instance = instance;\n   }\ndiff --git a/core/src/main/java/org/apache/accumulo/core/client/mock/MockInstance.java b/core/src/main/java/org/apache/accumulo/core/client/mock/MockInstance.java\nindex f37994d3f..2ba8c674a 100644\n--- a/core/src/main/java/org/apache/accumulo/core/client/mock/MockInstance.java\n+++ b/core/src/main/java/org/apache/accumulo/core/client/mock/MockInstance.java\n@@ -31,6 +31,7 @@\n import org.apache.accumulo.core.client.security.tokens.AuthenticationToken;\n import org.apache.accumulo.core.client.security.tokens.PasswordToken;\n import org.apache.accumulo.core.conf.AccumuloConfiguration;\n+import org.apache.accumulo.core.security.Credentials;\n import org.apache.accumulo.core.util.ByteBufferUtil;\n import org.apache.accumulo.core.util.CachedConfiguration;\n import org.apache.accumulo.core.util.TextUtil;\n@@ -150,7 +151,7 @@ public void setConfiguration(AccumuloConfiguration conf) {\n   \n   @Override\n   public Connector getConnector(String principal, AuthenticationToken token) throws AccumuloException, AccumuloSecurityException {\n-    Connector conn = new MockConnector(principal, acu, this);\n+    Connector conn = new MockConnector(new Credentials(principal, token), acu, this);\n     if (!acu.users.containsKey(principal))\n       conn.securityOperations().createLocalUser(principal, (PasswordToken) token);\n     else if (!acu.users.get(principal).token.equals(token))\ndiff --git a/core/src/main/java/org/apache/accumulo/core/client/security/tokens/PasswordToken.java b/core/src/main/java/org/apache/accumulo/core/client/security/tokens/PasswordToken.java\nindex c39fb8d9a..11bbf49c6 100644\n--- a/core/src/main/java/org/apache/accumulo/core/client/security/tokens/PasswordToken.java\n+++ b/core/src/main/java/org/apache/accumulo/core/client/security/tokens/PasswordToken.java\n@@ -46,7 +46,9 @@\n   /**\n    * Constructor for use with {@link Writable}. Call {@link #readFields(DataInput)}.\n    */\n-  public PasswordToken() {}\n+  public PasswordToken() {\n+    password = new byte[0];\n+  }\n   \n   /**\n    * Constructs a token from a copy of the password. Destroying the argument after construction will not destroy the copy in this token, and destroying this\ndiff --git a/core/src/main/java/org/apache/accumulo/core/security/Credentials.java b/core/src/main/java/org/apache/accumulo/core/security/Credentials.java\nindex 71a09f6de..0552e7e6e 100644\n--- a/core/src/main/java/org/apache/accumulo/core/security/Credentials.java\n+++ b/core/src/main/java/org/apache/accumulo/core/security/Credentials.java\n@@ -22,6 +22,7 @@\n import org.apache.accumulo.core.client.AccumuloSecurityException;\n import org.apache.accumulo.core.client.Connector;\n import org.apache.accumulo.core.client.Instance;\n+import org.apache.accumulo.core.client.impl.thrift.SecurityErrorCode;\n import org.apache.accumulo.core.client.security.tokens.AuthenticationToken;\n import org.apache.accumulo.core.client.security.tokens.AuthenticationToken.AuthenticationTokenSerializer;\n import org.apache.accumulo.core.security.thrift.TCredentials;\n@@ -58,7 +59,11 @@ public AuthenticationToken getToken() {\n    * {@link AuthenticationToken}, so this should be used just before placing on the wire, and references to it should be tightly controlled.\n    */\n   public TCredentials toThrift(Instance instance) {\n-    return new TCredentials(principal, token.getClass().getName(), ByteBuffer.wrap(AuthenticationTokenSerializer.serialize(token)), instance.getInstanceID());\n+    TCredentials tCreds = new TCredentials(getPrincipal(), getToken().getClass().getName(),\n+        ByteBuffer.wrap(AuthenticationTokenSerializer.serialize(getToken())), instance.getInstanceID());\n+    if (getToken().isDestroyed())\n+      throw new RuntimeException(\"Token has been destroyed\", new AccumuloSecurityException(getPrincipal(), SecurityErrorCode.TOKEN_EXPIRED));\n+    return tCreds;\n   }\n   \n   /**\n", 
  "project": "accumulo", 
  "linesAdd": 24, 
  "jira_id": "1312", 
  "nb_skipped": 0, 
  "commit": "d9ab8449", 
  "nb_failure": 1, 
  "linesRem": 7
}