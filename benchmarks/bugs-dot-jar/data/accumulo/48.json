{
    "bug_id": 48,
    "classification": {
        "singleLine": false
    },
    "commit": "ef0f6ddc",
    "failing_tests": [
        "org.apache.accumulo.core.util.shell.ShellTest"
    ],
    "files": 2,
    "jira_id": "1348",
    "linesAdd": 12,
    "linesRem": 2,
    "nb_error": 0,
    "nb_failure": 1,
    "nb_skipped": 0,
    "nb_test": 362,
    "patch": "diff --git a/core/src/main/java/org/apache/accumulo/core/client/mock/MockShell.java b/core/src/main/java/org/apache/accumulo/core/client/mock/MockShell.java\nindex 1a3c51887..4469d5c3d 100644\n--- a/core/src/main/java/org/apache/accumulo/core/client/mock/MockShell.java\n+++ b/core/src/main/java/org/apache/accumulo/core/client/mock/MockShell.java\n@@ -78,8 +78,13 @@ public int start() throws IOException {\n     \n     if (execFile != null) {\n       java.util.Scanner scanner = new java.util.Scanner(new File(execFile));\n-      while (scanner.hasNextLine())\n+      try {\n+        while (scanner.hasNextLine() && !hasExited()) {\n           execCommand(scanner.nextLine(), true, isVerbose());\n+        }\n+      } finally {\n+        scanner.close();\n+      }\n     } else if (execCommand != null) {\n       for (String command : execCommand.split(\"\\n\")) {\n         execCommand(command, true, isVerbose());\ndiff --git a/core/src/main/java/org/apache/accumulo/core/util/shell/Shell.java b/core/src/main/java/org/apache/accumulo/core/util/shell/Shell.java\nindex abb324ee1..7efe5e607 100644\n--- a/core/src/main/java/org/apache/accumulo/core/util/shell/Shell.java\n+++ b/core/src/main/java/org/apache/accumulo/core/util/shell/Shell.java\n@@ -438,8 +438,13 @@ public int start() throws IOException {\n     \n     if (execFile != null) {\n       java.util.Scanner scanner = new java.util.Scanner(new File(execFile));\n-      while (scanner.hasNextLine())\n+      try {\n+        while (scanner.hasNextLine() && !hasExited()) {\n           execCommand(scanner.nextLine(), true, isVerbose());\n+        }\n+      } finally {\n+        scanner.close();\n+      }\n     } else if (execCommand != null) {\n       for (String command : execCommand.split(\"\\n\")) {\n         execCommand(command, true, isVerbose());\n",
    "project": "accumulo",
    "buggy_compile_success": true,
    "buggy_test_success": false,
    "fixed_compile_success": true,
    "fixed_test_success": false
}