{
  "files": 2, 
  "nb_test": 158, 
  "nb_error": 0, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "org.apache.accumulo.server.fs.VolumeManagerImplTest"
  ], 
  "patch": "diff --git a/server/base/src/main/java/org/apache/accumulo/server/fs/VolumeManagerImpl.java b/server/base/src/main/java/org/apache/accumulo/server/fs/VolumeManagerImpl.java\nindex 9ebdef481..2cdd3fe6f 100644\n--- a/server/base/src/main/java/org/apache/accumulo/server/fs/VolumeManagerImpl.java\n+++ b/server/base/src/main/java/org/apache/accumulo/server/fs/VolumeManagerImpl.java\n@@ -37,6 +37,7 @@\n import org.apache.accumulo.core.conf.Property;\n import org.apache.accumulo.core.data.Key;\n import org.apache.accumulo.core.data.KeyExtent;\n+import org.apache.accumulo.core.file.rfile.RFile;\n import org.apache.accumulo.core.util.CachedConfiguration;\n import org.apache.accumulo.core.volume.NonConfiguredVolume;\n import org.apache.accumulo.core.volume.Volume;\n@@ -55,6 +56,7 @@\n import org.apache.hadoop.hdfs.DFSConfigKeys;\n import org.apache.hadoop.hdfs.DistributedFileSystem;\n import org.apache.hadoop.util.Progressable;\n+import org.apache.hadoop.util.StringUtils;\n import org.apache.log4j.Logger;\n \n import com.google.common.collect.HashMultimap;\n@@ -538,10 +540,30 @@ public Path getFullPath(FileType fileType, String path) {\n       }\n     }\n \n-    // normalize the path\n-    Path fullPath = new Path(defaultVolume.getBasePath(), fileType.getDirectory());\n     if (path.startsWith(\"/\"))\n       path = path.substring(1);\n+\n+    // ACCUMULO-2974 To ensure that a proper absolute path is created, the caller needs to include the table ID\n+    // in the relative path. Fail when this doesn't appear to happen.\n+    if (FileType.TABLE == fileType) {\n+      // Trailing slash doesn't create an additional element\n+      String[] pathComponents = StringUtils.split(path, Path.SEPARATOR_CHAR);\n+\n+      // Is an rfile\n+      if (path.endsWith(RFile.EXTENSION)) {\n+        if (pathComponents.length < 3) {\n+          throw new IllegalArgumentException(\"Fewer components in file path than expected\");\n+        }\n+      } else {\n+        // is a directory\n+        if (pathComponents.length < 2) {\n+          throw new IllegalArgumentException(\"Fewer components in directory path than expected\");\n+        }\n+      }\n+    }\n+\n+    // normalize the path\n+    Path fullPath = new Path(defaultVolume.getBasePath(), fileType.getDirectory());\n     fullPath = new Path(fullPath, path);\n \n     FileSystem fs = getVolumeByPath(fullPath).getFileSystem();\ndiff --git a/server/master/src/main/java/org/apache/accumulo/master/TabletGroupWatcher.java b/server/master/src/main/java/org/apache/accumulo/master/TabletGroupWatcher.java\nindex d72abd29d..fbc97381f 100644\n--- a/server/master/src/main/java/org/apache/accumulo/master/TabletGroupWatcher.java\n+++ b/server/master/src/main/java/org/apache/accumulo/master/TabletGroupWatcher.java\n@@ -80,6 +80,7 @@\n import org.apache.accumulo.server.tables.TableManager;\n import org.apache.accumulo.server.tablets.TabletTime;\n import org.apache.accumulo.server.util.MetadataTableUtil;\n+import org.apache.hadoop.fs.Path;\n import org.apache.hadoop.io.Text;\n import org.apache.thrift.TException;\n \n@@ -512,7 +513,10 @@ private void deleteTablets(MergeInfo info) throws AccumuloException {\n         } else if (key.compareColumnFamily(TabletsSection.CurrentLocationColumnFamily.NAME) == 0) {\n           throw new IllegalStateException(\"Tablet \" + key.getRow() + \" is assigned during a merge!\");\n         } else if (TabletsSection.ServerColumnFamily.DIRECTORY_COLUMN.hasColumns(key)) {\n-          datafiles.add(new FileRef(entry.getValue().toString(), this.master.fs.getFullPath(FileType.TABLE, entry.getValue().toString())));\n+          // ACCUMULO-2974 Need to include the TableID when converting a relative path to an absolute path.\n+          // The value has the leading path separator already included so it doesn't need it included.\n+          datafiles.add(new FileRef(entry.getValue().toString(), this.master.fs.getFullPath(FileType.TABLE, Path.SEPARATOR + extent.getTableId()\n+              + entry.getValue().toString())));\n           if (datafiles.size() > 1000) {\n             MetadataTableUtil.addDeleteEntries(extent, datafiles, SystemCredentials.get());\n             datafiles.clear();\n", 
  "project": "accumulo", 
  "linesAdd": 29, 
  "jira_id": "2974", 
  "nb_skipped": 2, 
  "commit": "5eceb10e", 
  "nb_failure": 4, 
  "linesRem": 3
}