{
  "files": 2, 
  "nb_test": 285, 
  "nb_error": 1, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "org.apache.accumulo.core.client.mock.MockTableOperationsTest"
  ], 
  "patch": "diff --git a/src/core/src/main/java/org/apache/accumulo/core/client/admin/TableOperationsHelper.java b/src/core/src/main/java/org/apache/accumulo/core/client/admin/TableOperationsHelper.java\nindex b533beb04..dfb75baa2 100644\n--- a/src/core/src/main/java/org/apache/accumulo/core/client/admin/TableOperationsHelper.java\n+++ b/src/core/src/main/java/org/apache/accumulo/core/client/admin/TableOperationsHelper.java\n@@ -48,6 +48,8 @@ public void attachIterator(String tableName, IteratorSetting setting) throws Acc\n   @Override\n   public void removeIterator(String tableName, String name, EnumSet<IteratorScope> scopes) throws AccumuloSecurityException, AccumuloException,\n       TableNotFoundException {\n+    if (!exists(tableName))\n+      throw new TableNotFoundException(null, tableName, null);\n     Map<String,String> copy = new HashMap<String,String>();\n     for (Entry<String,String> property : this.getProperties(tableName)) {\n       copy.put(property.getKey(), property.getValue());\n@@ -64,6 +66,8 @@ public void removeIterator(String tableName, String name, EnumSet<IteratorScope>\n   @Override\n   public IteratorSetting getIteratorSetting(String tableName, String name, IteratorScope scope) throws AccumuloSecurityException, AccumuloException,\n       TableNotFoundException {\n+    if (!exists(tableName))\n+      throw new TableNotFoundException(null, tableName, null);\n     int priority = -1;\n     String classname = null;\n     Map<String,String> settings = new HashMap<String,String>();\n@@ -90,6 +94,8 @@ public IteratorSetting getIteratorSetting(String tableName, String name, Iterato\n   \n   @Override\n   public Set<String> listIterators(String tableName) throws AccumuloSecurityException, AccumuloException, TableNotFoundException {\n+    if (!exists(tableName))\n+      throw new TableNotFoundException(null, tableName, null);\n     Set<String> result = new HashSet<String>();\n     Set<String> lifecycles = new HashSet<String>();\n     for (IteratorScope scope : IteratorScope.values())\n@@ -107,6 +113,8 @@ public IteratorSetting getIteratorSetting(String tableName, String name, Iterato\n   \n   @Override\n   public void checkIteratorConflicts(String tableName, IteratorSetting setting) throws AccumuloException, TableNotFoundException {\n+    if (!exists(tableName))\n+      throw new TableNotFoundException(null, tableName, null);\n     for (IteratorScope scope : setting.getScopes()) {\n       String scopeStr = String.format(\"%s%s\", Property.TABLE_ITERATOR_PREFIX, scope.name().toLowerCase());\n       String nameStr = String.format(\"%s.%s\", scopeStr, setting.getName());\ndiff --git a/src/core/src/main/java/org/apache/accumulo/core/client/mock/MockTableOperations.java b/src/core/src/main/java/org/apache/accumulo/core/client/mock/MockTableOperations.java\nindex 4353ab17d..f2f32dfe5 100644\n--- a/src/core/src/main/java/org/apache/accumulo/core/client/mock/MockTableOperations.java\n+++ b/src/core/src/main/java/org/apache/accumulo/core/client/mock/MockTableOperations.java\n@@ -82,6 +82,8 @@ public void create(String tableName, boolean versioningIter, TimeType timeType)\n     if (!tableName.matches(Constants.VALID_TABLE_NAME_REGEX)) {\n       throw new IllegalArgumentException();\n     }\n+    if (exists(tableName))\n+      throw new TableExistsException(tableName, tableName, \"\");\n     acu.createTable(username, tableName, versioningIter, timeType);\n   }\n   \n@@ -91,30 +93,42 @@ public void create(String tableName, boolean versioningIter, TimeType timeType)\n   @Override\n   public void addAggregators(String tableName, List<? extends PerColumnIteratorConfig> aggregators) throws AccumuloSecurityException, TableNotFoundException,\n       AccumuloException {\n+    if (!exists(tableName))\n+      throw new TableNotFoundException(tableName, tableName, \"\");\n     acu.addAggregators(tableName, aggregators);\n   }\n   \n   @Override\n-  public void addSplits(String tableName, SortedSet<Text> partitionKeys) throws TableNotFoundException, AccumuloException, AccumuloSecurityException {}\n+  public void addSplits(String tableName, SortedSet<Text> partitionKeys) throws TableNotFoundException, AccumuloException, AccumuloSecurityException {\n+    throw new NotImplementedException();\n+  }\n   \n   @Override\n-  public Collection<Text> getSplits(String tableName) {\n+  public Collection<Text> getSplits(String tableName) throws TableNotFoundException {\n+    if (!exists(tableName))\n+      throw new TableNotFoundException(tableName, tableName, \"\");\n     return Collections.emptyList();\n   }\n   \n   @Override\n-  public Collection<Text> getSplits(String tableName, int maxSplits) {\n-    return Collections.emptyList();\n+  public Collection<Text> getSplits(String tableName, int maxSplits) throws TableNotFoundException {\n+    return getSplits(tableName);\n   }\n   \n   @Override\n   public void delete(String tableName) throws AccumuloException, AccumuloSecurityException, TableNotFoundException {\n+    if (!exists(tableName))\n+      throw new TableNotFoundException(tableName, tableName, \"\");\n     acu.tables.remove(tableName);\n   }\n   \n   @Override\n   public void rename(String oldTableName, String newTableName) throws AccumuloSecurityException, TableNotFoundException, AccumuloException,\n       TableExistsException {\n+    if (!exists(oldTableName))\n+      throw new TableNotFoundException(oldTableName, oldTableName, \"\");\n+    if (exists(newTableName))\n+      throw new TableExistsException(newTableName, newTableName, \"\");\n     MockTable t = acu.tables.remove(oldTableName);\n     acu.tables.put(newTableName, t);\n   }\n@@ -134,15 +148,19 @@ public void removeProperty(String tableName, String property) throws AccumuloExc\n   \n   @Override\n   public Iterable<Entry<String,String>> getProperties(String tableName) throws TableNotFoundException {\n+    if (!exists(tableName))\n+      throw new TableNotFoundException(tableName, tableName, \"\");\n     return acu.tables.get(tableName).settings.entrySet();\n   }\n   \n   @Override\n-  public void setLocalityGroups(String tableName, Map<String,Set<Text>> groups) throws AccumuloException, AccumuloSecurityException, TableNotFoundException {}\n+  public void setLocalityGroups(String tableName, Map<String,Set<Text>> groups) throws AccumuloException, AccumuloSecurityException, TableNotFoundException {\n+    throw new NotImplementedException();\n+  }\n   \n   @Override\n   public Map<String,Set<Text>> getLocalityGroups(String tableName) throws AccumuloException, TableNotFoundException {\n-    return null;\n+    throw new NotImplementedException();\n   }\n   \n   @Override\n@@ -164,13 +182,17 @@ public void importDirectory(String tableName, String dir, String failureDir, boo\n   }\n   \n   @Override\n-  public void offline(String tableName) throws AccumuloSecurityException, AccumuloException {}\n+  public void offline(String tableName) throws AccumuloSecurityException, AccumuloException {\n+    throw new NotImplementedException();\n+  }\n   \n   @Override\n   public void online(String tableName) throws AccumuloSecurityException, AccumuloException {}\n   \n   @Override\n-  public void clearLocatorCache(String tableName) throws TableNotFoundException {}\n+  public void clearLocatorCache(String tableName) throws TableNotFoundException {\n+    throw new NotImplementedException();\n+  }\n   \n   @Override\n   public Map<String,String> tableIdMap() {\n", 
  "project": "accumulo", 
  "linesAdd": 38, 
  "jira_id": "217", 
  "nb_skipped": 0, 
  "commit": "add180fb", 
  "nb_failure": 0, 
  "linesRem": 8
}