{
  "files": 1, 
  "nb_test": 1107, 
  "nb_error": 0, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "org.apache.wicket.protocol.http.BufferedWebResponseTest"
  ], 
  "patch": "diff --git a/wicket-core/src/main/java/org/apache/wicket/protocol/http/BufferedWebResponse.java b/wicket-core/src/main/java/org/apache/wicket/protocol/http/BufferedWebResponse.java\nindex 2ec9997bbd..83c05561e4 100644\n--- a/wicket-core/src/main/java/org/apache/wicket/protocol/http/BufferedWebResponse.java\n+++ b/wicket-core/src/main/java/org/apache/wicket/protocol/http/BufferedWebResponse.java\n@@ -20,6 +20,7 @@\n import java.io.IOException;\n import java.io.OutputStream;\n import java.util.ArrayList;\n+import java.util.Collections;\n import java.util.List;\n \n import javax.servlet.http.Cookie;\n@@ -88,9 +89,14 @@ public String encodeURL(CharSequence url)\n \t\t}\n \t}\n \n-\tprivate static abstract class Action\n+\tprivate static abstract class Action implements Comparable<Action>\n \t{\n \t\tprotected abstract void invoke(WebResponse response);\n+\n+\t\tpublic int compareTo(Action o)\n+\t\t{\n+\t\t\treturn 0;\n+\t\t}\n \t}\n \n \t/**\n@@ -100,6 +106,12 @@ public String encodeURL(CharSequence url)\n \t */\n \tprivate static abstract class MetaDataAction extends Action\n \t{\n+\t\t@Override\n+\t\tpublic int compareTo(Action o)\n+\t\t{\n+\t\t\t// write first in response\n+\t\t\treturn Integer.MIN_VALUE;\n+\t\t}\n \t}\n \n \tprivate static class WriteCharSequenceAction extends Action\n@@ -135,6 +147,13 @@ protected void invoke(WebResponse response)\n \t\t\t}\n \t\t\tresponse.write(builder);\n \t\t}\n+\n+\t\t@Override\n+\t\tpublic int compareTo(Action o)\n+\t\t{\n+\t\t\t// needs to be invoked after set header actions\n+\t\t\treturn Integer.MAX_VALUE;\n+\t\t}\n \t}\n \n \tprivate static class WriteDataAction extends Action\n@@ -163,6 +182,13 @@ protected void invoke(WebResponse response)\n \t\t{\n \t\t\twriteStream(response, stream);\n \t\t}\n+\n+\t\t@Override\n+\t\tpublic int compareTo(Action o)\n+\t\t{\n+\t\t\t// needs to be invoked after set header actions\n+\t\t\treturn Integer.MAX_VALUE;\n+\t\t}\n \t}\n \n \tprivate static class CloseAction extends Action\n@@ -242,7 +268,7 @@ protected void invoke(WebResponse response)\n \t\t}\n \t}\n \n-\tprivate static class SetContentLengthAction extends Action\n+\tprivate static class SetContentLengthAction extends MetaDataAction\n \t{\n \t\tprivate final long contentLength;\n \n@@ -258,7 +284,7 @@ protected void invoke(WebResponse response)\n \t\t}\n \t}\n \n-\tprivate static class SetContentTypeAction extends Action\n+\tprivate static class SetContentTypeAction extends MetaDataAction\n \t{\n \t\tprivate final String contentType;\n \n@@ -482,6 +508,8 @@ public void writeTo(final WebResponse response)\n \t{\n \t\tArgs.notNull(response, \"response\");\n \n+\t\tCollections.sort(actions);\n+\n \t\tfor (Action action : actions)\n \t\t{\n \t\t\taction.invoke(response);\n", 
  "project": "wicket", 
  "linesAdd": 31, 
  "jira_id": "3618", 
  "nb_skipped": 0, 
  "commit": "fbfd17e6", 
  "nb_failure": 1, 
  "linesRem": 3
}