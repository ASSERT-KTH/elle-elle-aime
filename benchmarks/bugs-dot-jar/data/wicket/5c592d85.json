{
  "files": 2, 
  "nb_test": 408, 
  "nb_error": 1, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "wicket.request.target.coding.PackageRequestTargetUrlCodingStrategyTest"
  ], 
  "patch": "diff --git a/jdk-1.4/wicket/src/main/java/wicket/protocol/http/request/WebRequestCodingStrategy.java b/jdk-1.4/wicket/src/main/java/wicket/protocol/http/request/WebRequestCodingStrategy.java\nindex e8b827210c..958029633f 100644\n--- a/jdk-1.4/wicket/src/main/java/wicket/protocol/http/request/WebRequestCodingStrategy.java\n+++ b/jdk-1.4/wicket/src/main/java/wicket/protocol/http/request/WebRequestCodingStrategy.java\n@@ -968,6 +968,12 @@ public IRequestTargetUrlCodingStrategy strategyForPath(String path)\n \t\t\t\tfinal String key = (String)entry.getKey();\n \t\t\t\tif (path.startsWith(key))\n \t\t\t\t{\n+\t\t\t\t\t/*\n+\t\t\t\t\t * We need to match /mount/point or\n+\t\t\t\t\t * /mount/point/with/extra/path, but not /mount/pointXXX\n+\t\t\t\t\t */\n+\t\t\t\t\tString remainder = path.substring(key.length());\n+\t\t\t\t\tif (remainder.length() == 0 || remainder.startsWith(\"/\"))\n \t\t\t\t\t\treturn (IRequestTargetUrlCodingStrategy)entry.getValue();\n \t\t\t\t}\n \t\t\t}\ndiff --git a/jdk-1.4/wicket/src/main/java/wicket/request/target/coding/PackageRequestTargetUrlCodingStrategy.java b/jdk-1.4/wicket/src/main/java/wicket/request/target/coding/PackageRequestTargetUrlCodingStrategy.java\nindex eaa6fd3133..f18bf62833 100644\n--- a/jdk-1.4/wicket/src/main/java/wicket/request/target/coding/PackageRequestTargetUrlCodingStrategy.java\n+++ b/jdk-1.4/wicket/src/main/java/wicket/request/target/coding/PackageRequestTargetUrlCodingStrategy.java\n@@ -16,6 +16,9 @@\n  */\n package wicket.request.target.coding;\n \n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+\n import wicket.IRequestTarget;\n import wicket.PageParameters;\n import wicket.Session;\n@@ -35,6 +38,7 @@\n  */\n public class PackageRequestTargetUrlCodingStrategy extends AbstractRequestTargetUrlCodingStrategy\n {\n+\tprivate static final Log log = LogFactory.getLog(PackageRequestTargetUrlCodingStrategy.class);\n \t/** package for this mount. */\n \tprivate final PackageName packageName;\n \n@@ -57,7 +61,9 @@ public PackageRequestTargetUrlCodingStrategy(final String path, PackageName pack\n \t */\n \tpublic IRequestTarget decode(RequestParameters requestParameters)\n \t{\n+\t\tlog.debug(\"path=\"+requestParameters.getPath());\n \t\tString remainder = requestParameters.getPath().substring(getMountPath().length());\n+\t\tlog.debug(\"remainder=\"+remainder);\n \t\tfinal String parametersFragment;\n \t\tint ix = remainder.indexOf('/', 1);\n \t\tif (ix == -1)\n@@ -75,7 +81,14 @@ public IRequestTarget decode(RequestParameters requestParameters)\n \t\t\tremainder = remainder.substring(1);\n \t\t\tix--;\n \t\t}\n+\t\telse\n+\t\t{\n+\t\t\t// There is nothing after the mount path!\n+\t\t\treturn null;\n+\t\t}\n \n+\t\tlog.debug(\"remainder=\"+remainder);\n+\t\tlog.debug(\"parametersFragment=\"+parametersFragment);\n \t\tfinal String bookmarkablePageClassName = packageName + \".\" + remainder.substring(0, ix);\n \t\tClass bookmarkablePageClass = Session.get().getClassResolver().resolveClass(\n \t\t\t\tbookmarkablePageClassName);\n", 
  "project": "wicket", 
  "linesAdd": 19, 
  "jira_id": "294", 
  "nb_skipped": 0, 
  "commit": "5c592d85", 
  "nb_failure": 1, 
  "linesRem": 0
}