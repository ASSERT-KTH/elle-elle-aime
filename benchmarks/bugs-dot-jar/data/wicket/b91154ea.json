{
  "files": 4, 
  "nb_test": 1332, 
  "nb_error": 0, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "org.apache.wicket.markup.html.internal.InlineEnclosureTest"
  ], 
  "patch": "diff --git a/wicket-core/src/main/java/org/apache/wicket/Application.java b/wicket-core/src/main/java/org/apache/wicket/Application.java\nindex 6cd4445911..98078ea2ce 100644\n--- a/wicket-core/src/main/java/org/apache/wicket/Application.java\n+++ b/wicket-core/src/main/java/org/apache/wicket/Application.java\n@@ -685,11 +685,11 @@ protected void internalInit()\n \t\tpageSettings.addComponentResolver(new HtmlHeaderResolver());\n \t\tpageSettings.addComponentResolver(new WicketLinkTagHandler());\n \t\tpageSettings.addComponentResolver(new WicketMessageResolver());\n-\t\tpageSettings.addComponentResolver(new WicketMessageTagHandler());\n \t\tpageSettings.addComponentResolver(new FragmentResolver());\n \t\tpageSettings.addComponentResolver(new RelativePathPrefixHandler());\n \t\tpageSettings.addComponentResolver(new EnclosureHandler());\n \t\tpageSettings.addComponentResolver(new InlineEnclosureHandler());\n+\t\tpageSettings.addComponentResolver(new WicketMessageTagHandler());\n \t\tpageSettings.addComponentResolver(new WicketContainerResolver());\n \n \t\t// Install button image resource factory\ndiff --git a/wicket-core/src/main/java/org/apache/wicket/markup/MarkupParser.java b/wicket-core/src/main/java/org/apache/wicket/markup/MarkupParser.java\nindex d84383f03c..47203147f8 100644\n--- a/wicket-core/src/main/java/org/apache/wicket/markup/MarkupParser.java\n+++ b/wicket-core/src/main/java/org/apache/wicket/markup/MarkupParser.java\n@@ -150,6 +150,7 @@ protected MarkupFilterList initializeMarkupFilters(final Markup markup)\n \t\tfilters.add(new WicketLinkTagHandler());\n \t\tfilters.add(new AutoLabelTagHandler());\n \t\tfilters.add(new WicketNamespaceHandler(markupResourceStream));\n+\t\tfilters.add(new WicketMessageTagHandler(markupResourceStream));\n \n \t\t// Provided the wicket component requesting the markup is known ...\n \t\tif ((markupResourceStream != null) && (markupResourceStream.getResource() != null))\n@@ -157,8 +158,6 @@ protected MarkupFilterList initializeMarkupFilters(final Markup markup)\n \t\t\tfinal ContainerInfo containerInfo = markupResourceStream.getContainerInfo();\n \t\t\tif (containerInfo != null)\n \t\t\t{\n-\t\t\t\tfilters.add(new WicketMessageTagHandler(markupResourceStream));\n-\n \t\t\t\t// Pages require additional handlers\n \t\t\t\tif (Page.class.isAssignableFrom(containerInfo.getContainerClass()))\n \t\t\t\t{\ndiff --git a/wicket-core/src/main/java/org/apache/wicket/markup/parser/filter/InlineEnclosureHandler.java b/wicket-core/src/main/java/org/apache/wicket/markup/parser/filter/InlineEnclosureHandler.java\nindex ab7e609003..06a193aaa6 100644\n--- a/wicket-core/src/main/java/org/apache/wicket/markup/parser/filter/InlineEnclosureHandler.java\n+++ b/wicket-core/src/main/java/org/apache/wicket/markup/parser/filter/InlineEnclosureHandler.java\n@@ -43,7 +43,6 @@\n  * enclosure is identified by the 'child' attribute value which must be equal to the relative child\r\n  * id path.\r\n  * \r\n- * @see EnclosureResolver\r\n  * @see InlineEnclosure\r\n  * \r\n  * @author Joonas Hamalainen\r\n@@ -96,7 +95,7 @@ protected MarkupElement onComponentTag(final ComponentTag tag) throws ParseExcep\n \t\t\t\t\t\t\ttag.toString(), tag.getPos());\r\n \t\t\t\t}\r\n \r\n-\t\t\t\t// if it doesn't have a wicket-id already, than assign one now.\r\n+\t\t\t\t// if it doesn't have a wicket-id already, then assign one now.\r\n \t\t\t\tif (Strings.isEmpty(tag.getId()))\r\n \t\t\t\t{\r\n \t\t\t\t\tif (Strings.isEmpty(htmlId))\r\n@@ -129,7 +128,7 @@ protected MarkupElement onComponentTag(final ComponentTag tag) throws ParseExcep\n \t\t// Are we within an enclosure?\r\n \t\telse if ((enclosures != null) && (enclosures.size() > 0))\r\n \t\t{\r\n-\t\t\t// In case the enclosure tag did not provide a child component id, than assign the\r\n+\t\t\t// In case the enclosure tag did not provide a child component id, then assign the\r\n \t\t\t// first ComponentTag's id found as the controlling child to the enclosure.\r\n \t\t\tif (tag.isOpen() && (tag.getId() != null) && !(tag instanceof WicketTag) &&\r\n \t\t\t\t!tag.isAutoComponentTag())\r\ndiff --git a/wicket-core/src/main/java/org/apache/wicket/markup/parser/filter/WicketMessageTagHandler.java b/wicket-core/src/main/java/org/apache/wicket/markup/parser/filter/WicketMessageTagHandler.java\nindex acda0a6b9e..504412848e 100644\n--- a/wicket-core/src/main/java/org/apache/wicket/markup/parser/filter/WicketMessageTagHandler.java\n+++ b/wicket-core/src/main/java/org/apache/wicket/markup/parser/filter/WicketMessageTagHandler.java\n@@ -83,7 +83,7 @@ protected final MarkupElement onComponentTag(ComponentTag tag) throws ParseExcep\n \t\tfinal String wicketMessageAttribute = tag.getAttributes().getString(\n \t\t\tgetWicketMessageAttrName());\n \n-\t\tif ((wicketMessageAttribute != null) && (wicketMessageAttribute.trim().length() > 0))\n+\t\tif (Strings.isEmpty(wicketMessageAttribute) == false)\n \t\t{\n \t\t\t// check if this tag is raw markup\n \t\t\tif (tag.getId() == null)\n@@ -165,7 +165,7 @@ public Component resolve(MarkupContainer container, MarkupStream markupStream, C\n \t\t// localize any raw markup that has wicket:message attrs\n \t\tif ((tag != null) && (tag.getId().startsWith(WICKET_MESSAGE_CONTAINER_ID)))\n \t\t{\n-\t\t\tComponent wc = null;\n+\t\t\tComponent wc;\n \t\t\tint autoIndex = container.getPage().getAutoIndex();\n \t\t\tString id = WICKET_MESSAGE_CONTAINER_ID + autoIndex;\n \n", 
  "project": "wicket", 
  "linesAdd": 6, 
  "jira_id": "4520", 
  "nb_skipped": 8, 
  "commit": "b91154ea", 
  "nb_failure": 2, 
  "linesRem": 8
}