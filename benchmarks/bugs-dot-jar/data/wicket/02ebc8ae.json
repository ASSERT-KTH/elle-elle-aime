{
  "files": 1, 
  "nb_test": 1379, 
  "nb_error": 0, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "org.apache.wicket.response.PreserveCookieForTheNextHandlerTest"
  ], 
  "patch": "diff --git a/wicket-core/src/main/java/org/apache/wicket/request/handler/render/WebPageRenderer.java b/wicket-core/src/main/java/org/apache/wicket/request/handler/render/WebPageRenderer.java\nindex b92f3e378a..a0dbfeb8c1 100644\n--- a/wicket-core/src/main/java/org/apache/wicket/request/handler/render/WebPageRenderer.java\n+++ b/wicket-core/src/main/java/org/apache/wicket/request/handler/render/WebPageRenderer.java\n@@ -20,7 +20,6 @@\n import org.apache.wicket.protocol.http.WebApplication;\n import org.apache.wicket.request.IRequestHandler;\n import org.apache.wicket.request.Request;\n-import org.apache.wicket.request.Response;\n import org.apache.wicket.request.Url;\n import org.apache.wicket.request.cycle.RequestCycle;\n import org.apache.wicket.core.request.handler.RenderPageRequestHandler;\n@@ -91,10 +90,10 @@ protected BufferedWebResponse renderPage(Url targetUrl, RequestCycle requestCycl\n \t\tIRequestHandler scheduled = requestCycle.getRequestHandlerScheduledAfterCurrent();\n \n \t\t// keep the original response\n-\t\tfinal Response originalResponse = requestCycle.getResponse();\n+\t\tfinal WebResponse originalResponse = (WebResponse) requestCycle.getResponse();\n \n \t\t// buffered web response for page\n-\t\tBufferedWebResponse response = new BufferedWebResponse((WebResponse)originalResponse);\n+\t\tBufferedWebResponse response = new BufferedWebResponse(originalResponse);\n \n \t\t// keep the original base URL\n \t\tUrl originalBaseUrl = requestCycle.getUrlRenderer().setBaseUrl(targetUrl);\n@@ -106,9 +105,12 @@ protected BufferedWebResponse renderPage(Url targetUrl, RequestCycle requestCycl\n \n \t\t\tif (scheduled == null && requestCycle.getRequestHandlerScheduledAfterCurrent() != null)\n \t\t\t{\n-\t\t\t\t// This is a special case. During page render another request handler got scheduled.\n-\t\t\t\t// The handler\n-\t\t\t\t// will want to overwrite the response, so we need to let it\n+\t\t\t\t// This is a special case.\n+\t\t\t\t// During page render another request handler got scheduled and will want to overwrite\n+\t\t\t\t// the response, so we need to let it.\n+\t\t\t\t// Just preserve the meta data headers\n+\t\t\t\toriginalResponse.reset(); // clear the initial actions because they are already copied into the new response's actions\n+\t\t\t\tresponse.writeMetaData(originalResponse);\n \t\t\t\treturn null;\n \t\t\t}\n \t\t\telse\n", 
  "project": "wicket", 
  "linesAdd": 8, 
  "jira_id": "4358", 
  "nb_skipped": 5, 
  "commit": "02ebc8ae", 
  "nb_failure": 1, 
  "linesRem": 6
}