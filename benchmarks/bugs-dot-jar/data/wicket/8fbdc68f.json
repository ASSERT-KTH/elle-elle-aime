{
  "files": 2, 
  "nb_test": 1147, 
  "nb_error": 0, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "org.apache.wicket.markup.MarkupVariationTest"
  ], 
  "patch": "diff --git a/wicket-core/src/main/java/org/apache/wicket/Component.java b/wicket-core/src/main/java/org/apache/wicket/Component.java\nindex 956df8804b..94bef50709 100644\n--- a/wicket-core/src/main/java/org/apache/wicket/Component.java\n+++ b/wicket-core/src/main/java/org/apache/wicket/Component.java\n@@ -36,6 +36,7 @@\n import org.apache.wicket.feedback.IFeedback;\n import org.apache.wicket.markup.ComponentTag;\n import org.apache.wicket.markup.IMarkupFragment;\n+import org.apache.wicket.markup.MarkupCache;\n import org.apache.wicket.markup.MarkupElement;\n import org.apache.wicket.markup.MarkupException;\n import org.apache.wicket.markup.MarkupNotFoundException;\n@@ -1170,6 +1171,8 @@ public final void detach()\n \n \t\trequestFlags = 0;\n \n+\t\tinternalDetach();\n+\n \t\t// notify any detach listener\n \t\tIDetachListener detachListener = getApplication().getFrameworkSettings()\n \t\t\t.getDetachListener();\n@@ -1179,6 +1182,15 @@ public final void detach()\n \t\t}\n \t}\n \n+\t/**\n+\t * Removes the cached markup at the end of the request. For the next request it will be get\n+\t * either from the parent's markup or from {@link MarkupCache}.\n+\t */\n+\tprivate void internalDetach()\n+\t{\n+\t\tmarkup = null;\n+\t}\n+\n \t/**\n \t * Detaches all models\n \t */\n@@ -3065,7 +3077,7 @@ public final Component setOutputMarkupPlaceholderTag(final boolean outputTag)\n \t\t\t{\n \t\t\t\tsetFlag(FLAG_PLACEHOLDER, false);\n \t\t\t\t// I think it's better to not setOutputMarkupId to false...\n-\t\t\t\t// user can do it if we want\n+\t\t\t\t// user can do it if she want\n \t\t\t}\n \t\t}\n \t\treturn this;\ndiff --git a/wicket-core/src/main/java/org/apache/wicket/markup/html/internal/InlineEnclosure.java b/wicket-core/src/main/java/org/apache/wicket/markup/html/internal/InlineEnclosure.java\nindex 614ccb6beb..9caac6d5ec 100644\n--- a/wicket-core/src/main/java/org/apache/wicket/markup/html/internal/InlineEnclosure.java\n+++ b/wicket-core/src/main/java/org/apache/wicket/markup/html/internal/InlineEnclosure.java\n@@ -17,6 +17,8 @@\n package org.apache.wicket.markup.html.internal;\r\n \r\n import org.apache.wicket.markup.ComponentTag;\r\n+import org.apache.wicket.markup.IMarkupFragment;\r\n+import org.apache.wicket.markup.Markup;\r\n import org.apache.wicket.markup.parser.filter.InlineEnclosureHandler;\r\n import org.slf4j.Logger;\r\n import org.slf4j.LoggerFactory;\r\n@@ -42,6 +44,8 @@\n \r\n \tprivate static final Logger log = LoggerFactory.getLogger(InlineEnclosure.class);\r\n \r\n+\tprivate String enclosureMarkupAsString;\r\n+\r\n \t/**\r\n \t * Construct.\r\n \t * \r\n@@ -53,8 +57,9 @@ public InlineEnclosure(final String id, final String childId)\n \t{\r\n \t\tsuper(id, childId);\r\n \r\n+\t\tenclosureMarkupAsString = null;\r\n+\r\n \t\t// ensure that the Enclosure is ready for ajax updates\r\n-\t\tsetOutputMarkupId(true);\r\n \t\tsetOutputMarkupPlaceholderTag(true);\r\n \t\tsetMarkupId(getId());\r\n \t}\r\n@@ -79,4 +84,32 @@ public boolean updateVisibility()\n \t\tsetVisible(visible);\r\n \t\treturn visible;\r\n \t}\r\n+\r\n+\t/**\r\n+\t * {@link InlineEnclosure}s keep their own cache of their markup because Component#markup is\r\n+\t * detached and later during Ajax request it is hard to re-lookup {@link InlineEnclosure}'s\r\n+\t * markup from its parent.\r\n+\t * \r\n+\t * @see org.apache.wicket.Component#getMarkup()\r\n+\t */\r\n+\t@Override\r\n+\tpublic IMarkupFragment getMarkup()\r\n+\t{\r\n+\t\tIMarkupFragment enclosureMarkup = null;\r\n+\t\tif (enclosureMarkupAsString == null)\r\n+\t\t{\r\n+\t\t\tIMarkupFragment markup = super.getMarkup();\r\n+\t\t\tif (markup != null && markup != Markup.NO_MARKUP)\r\n+\t\t\t{\r\n+\t\t\t\tenclosureMarkup = markup;\r\n+\t\t\t\tenclosureMarkupAsString = markup.toString(true);\r\n+\t\t\t}\r\n+\t\t}\r\n+\t\telse\r\n+\t\t{\r\n+\t\t\tenclosureMarkup = Markup.of(enclosureMarkupAsString);\r\n+\t\t}\r\n+\r\n+\t\treturn enclosureMarkup;\r\n+\t}\r\n }\r\n", 
  "project": "wicket", 
  "linesAdd": 47, 
  "jira_id": "3931", 
  "nb_skipped": 2, 
  "commit": "8fbdc68f", 
  "nb_failure": 1, 
  "linesRem": 2
}