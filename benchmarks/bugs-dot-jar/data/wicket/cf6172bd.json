{
  "files": 1, 
  "nb_test": 105, 
  "nb_error": 1, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "org.apache.wicket.request.mapper.parameter.PageParametersEncoderTest"
  ], 
  "patch": "diff --git a/wicket-request/src/main/java/org/apache/wicket/request/mapper/parameter/PageParametersEncoder.java b/wicket-request/src/main/java/org/apache/wicket/request/mapper/parameter/PageParametersEncoder.java\nindex 13e45ec64b..aa095deea2 100644\n--- a/wicket-request/src/main/java/org/apache/wicket/request/mapper/parameter/PageParametersEncoder.java\n+++ b/wicket-request/src/main/java/org/apache/wicket/request/mapper/parameter/PageParametersEncoder.java\n@@ -18,6 +18,7 @@\n \n import org.apache.wicket.request.Url;\n import org.apache.wicket.request.Url.QueryParameter;\n+import org.apache.wicket.util.string.Strings;\n \n /**\n  * Simple encoder with direct indexed/named parameters mapping.\n@@ -47,7 +48,11 @@ public PageParameters decodePageParameters(final Url url)\n \n \t\tfor (QueryParameter p : url.getQueryParameters())\n \t\t{\n-\t\t\tparameters.add(p.getName(), p.getValue(), INamedParameters.Type.QUERY_STRING);\n+\t\t\tString parameterName = p.getName();\n+\t\t\tif (Strings.isEmpty(parameterName) == false)\n+\t\t\t{\n+\t\t\t\tparameters.add(parameterName, p.getValue(), INamedParameters.Type.QUERY_STRING);\n+\t\t\t}\n \t\t}\n \n \t\treturn parameters.isEmpty() ? null : parameters;\n", 
  "project": "wicket", 
  "linesAdd": 6, 
  "jira_id": "5770", 
  "nb_skipped": 0, 
  "commit": "cf6172bd", 
  "nb_failure": 0, 
  "linesRem": 1
}