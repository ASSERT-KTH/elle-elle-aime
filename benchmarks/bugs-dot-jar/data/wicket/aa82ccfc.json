{
  "files": 2, 
  "nb_test": 1639, 
  "nb_error": 0, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "org.apache.wicket.settings.ISecuritySettingsTest"
  ], 
  "patch": "diff --git a/wicket-core/src/main/java/org/apache/wicket/core/request/mapper/BookmarkableMapper.java b/wicket-core/src/main/java/org/apache/wicket/core/request/mapper/BookmarkableMapper.java\nindex 60764fa1a3..bf7e64bf16 100644\n--- a/wicket-core/src/main/java/org/apache/wicket/core/request/mapper/BookmarkableMapper.java\n+++ b/wicket-core/src/main/java/org/apache/wicket/core/request/mapper/BookmarkableMapper.java\n@@ -19,11 +19,11 @@\n import java.util.List;\n \n import org.apache.wicket.Application;\n-import org.apache.wicket.core.request.handler.PageProvider;\n-import org.apache.wicket.core.request.handler.RenderPageRequestHandler;\n+import org.apache.wicket.request.IRequestMapper;\n import org.apache.wicket.request.Request;\n import org.apache.wicket.request.Url;\n import org.apache.wicket.request.component.IRequestablePage;\n+import org.apache.wicket.request.mapper.ICompoundRequestMapper;\n import org.apache.wicket.request.mapper.info.PageComponentInfo;\n import org.apache.wicket.request.mapper.parameter.IPageParametersEncoder;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n@@ -118,9 +118,7 @@ protected UrlInfo parseRequest(Request request)\n \t\t\t\t\t\tif (!pageClass.equals(application.getHomePage()))\n \t\t\t\t\t\t{\n \t\t\t\t\t\t\t// WICKET-5094 only enforce mount if page is mounted\n-\t\t\t\t\t\t\tUrl reverseUrl = application.getRootRequestMapper().mapHandler(\n-\t\t\t\t\t\t\t\tnew RenderPageRequestHandler(new PageProvider(pageClass)));\n-\t\t\t\t\t\t\tif (!matches(request.cloneWithUrl(reverseUrl)))\n+\t\t\t\t\t\t\tif (isPageMounted(pageClass, application))\n \t\t\t\t\t\t\t{\n \t\t\t\t\t\t\t\treturn null;\n \t\t\t\t\t\t\t}\n@@ -138,6 +136,27 @@ protected UrlInfo parseRequest(Request request)\n \t\treturn null;\n \t}\n \n+\tprivate boolean isPageMounted(Class<? extends IRequestablePage> pageClass,\n+\t\tApplication application)\n+\t{\n+\t    ICompoundRequestMapper applicationMappers = application.getRootRequestMapperAsCompound();\n+\t    \n+\t    for (IRequestMapper requestMapper : applicationMappers)\n+\t    {\n+\t\tif(requestMapper instanceof AbstractBookmarkableMapper  && requestMapper != this)\n+\t\t{\n+\t\t    AbstractBookmarkableMapper mapper = (AbstractBookmarkableMapper) requestMapper;  \n+\t\t    \n+\t\t    if(mapper.checkPageClass(pageClass))\n+\t\t    {\n+\t\t\treturn true;\n+\t\t    }\n+\t\t}\n+\t    }\n+\t    \n+\t    return false;\n+\t}\n+\n \t@Override\n \tprotected boolean pageMustHaveBeenCreatedBookmarkable()\n \t{\ndiff --git a/wicket-core/src/main/java/org/apache/wicket/core/request/mapper/PackageMapper.java b/wicket-core/src/main/java/org/apache/wicket/core/request/mapper/PackageMapper.java\nindex 4f0f10795a..ff13a62efc 100644\n--- a/wicket-core/src/main/java/org/apache/wicket/core/request/mapper/PackageMapper.java\n+++ b/wicket-core/src/main/java/org/apache/wicket/core/request/mapper/PackageMapper.java\n@@ -221,4 +221,11 @@ protected boolean pageMustHaveBeenCreatedBookmarkable()\n \t{\n \t\treturn false;\n \t}\n+\t\n+\t@Override\n+\tprotected boolean checkPageClass(Class<? extends IRequestablePage> pageClass)\n+\t{\n+\t\tPackageName pageClassPackageName = PackageName.forClass(pageClass);\n+\t\treturn packageName.equals(pageClassPackageName);\n+\t}\n }\n", 
  "project": "wicket", 
  "linesAdd": 31, 
  "jira_id": "5560", 
  "nb_skipped": 2, 
  "commit": "aa82ccfc", 
  "nb_failure": 1, 
  "linesRem": 5
}