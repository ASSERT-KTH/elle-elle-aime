{
  "files": 5, 
  "nb_test": 1472, 
  "nb_error": 0, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "org.apache.wicket.markup.html.panel.PanelTest", 
    "org.apache.wicket.ajax.markup.html.ajaxLink.AjaxLinkTest", 
    "org.apache.wicket.markup.html.basic.SimplePageTest", 
    "org.apache.wicket.markup.html.border.ComponentBorderTest"
  ], 
  "patch": "diff --git a/wicket-core/src/main/java/org/apache/wicket/DefaultExceptionMapper.java b/wicket-core/src/main/java/org/apache/wicket/DefaultExceptionMapper.java\nindex eea361d6d5..81829d0483 100644\n--- a/wicket-core/src/main/java/org/apache/wicket/DefaultExceptionMapper.java\n+++ b/wicket-core/src/main/java/org/apache/wicket/DefaultExceptionMapper.java\n@@ -56,7 +56,7 @@ public IRequestHandler map(Exception e)\n \t\t\tResponse response = RequestCycle.get().getResponse();\n \t\t\tif (response instanceof WebResponse)\n \t\t\t{\n-\t\t\t\t// we don't wan't to cache an exceptional reply in the browser\n+\t\t\t\t// we don't want to cache an exceptional reply in the browser\n \t\t\t\t((WebResponse)response).disableCaching();\n \t\t\t}\n \t\t\treturn internalMap(e);\n@@ -92,7 +92,7 @@ private IRequestHandler internalMap(Exception e)\n \n \t\tif (e instanceof StalePageException)\n \t\t{\n-\t\t\t// If the page was stale, just rerender it\n+\t\t\t// If the page was stale, just re-render it\n \t\t\t// (the url should always be updated by an redirect in that case)\n \t\t\treturn new RenderPageRequestHandler(new PageProvider(((StalePageException)e).getPage()));\n \t\t}\ndiff --git a/wicket-core/src/main/java/org/apache/wicket/Page.java b/wicket-core/src/main/java/org/apache/wicket/Page.java\nindex 1467798dcb..86c0472eda 100644\n--- a/wicket-core/src/main/java/org/apache/wicket/Page.java\n+++ b/wicket-core/src/main/java/org/apache/wicket/Page.java\n@@ -450,6 +450,8 @@ public final boolean isPageStateless()\n \n \t\tif (stateless == null)\n \t\t{\n+\t\t\tinternalInitialize();\n+\n \t\t\tif (isStateless() == false)\n \t\t\t{\n \t\t\t\tstateless = Boolean.FALSE;\ndiff --git a/wicket-core/src/main/java/org/apache/wicket/page/AbstractPageManager.java b/wicket-core/src/main/java/org/apache/wicket/page/AbstractPageManager.java\nindex 263bb62b94..da259e4b75 100644\n--- a/wicket-core/src/main/java/org/apache/wicket/page/AbstractPageManager.java\n+++ b/wicket-core/src/main/java/org/apache/wicket/page/AbstractPageManager.java\n@@ -127,10 +127,6 @@ public void newSessionCreated()\n \t@Override\n \tpublic void touchPage(IManageablePage page)\n \t{\n-\t\tif (!page.isPageStateless())\n-\t\t{\n-\t\t\tgetContext().bind();\n-\t\t}\n \t\tgetRequestAdapter().touch(page);\n \t}\n }\ndiff --git a/wicket-core/src/main/java/org/apache/wicket/protocol/http/WicketFilter.java b/wicket-core/src/main/java/org/apache/wicket/protocol/http/WicketFilter.java\nindex be577f3338..f40a0c955d 100644\n--- a/wicket-core/src/main/java/org/apache/wicket/protocol/http/WicketFilter.java\n+++ b/wicket-core/src/main/java/org/apache/wicket/protocol/http/WicketFilter.java\n@@ -431,6 +431,23 @@ public void init(final boolean isServlet, final FilterConfig filterConfig)\n \t\t\t\tThreadContext.detach();\n \t\t\t}\n \t\t}\n+\t\tcatch (Exception e)\n+\t\t{\n+\t\t\t// #destroy() might not be called by the web container when #init() fails,\n+\t\t\t// so destroy now\n+\t\t\tlog.warn(\"initialization failed, destroying now\");\n+\n+\t\t\ttry\n+\t\t\t{\n+\t\t\t\tdestroy();\n+\t\t\t}\n+\t\t\tcatch (Exception destroyException)\n+\t\t\t{\n+\t\t\t\tlog.warn(\"Unable to destroy after initialization failure\", destroyException);\n+\t\t\t}\n+\n+\t\t\tthrow new ServletException(e);\n+\t\t}\n \t\tfinally\n \t\t{\n \t\t\tif (newClassLoader != previousClassLoader)\n@@ -577,9 +594,16 @@ public void destroy()\n \t\t}\n \n \t\tif (applicationFactory != null)\n+\t\t{\n+\t\t\ttry\n \t\t\t{\n \t\t\t\tapplicationFactory.destroy(this);\n \t\t\t}\n+\t\t\tfinally\n+\t\t\t{\n+\t\t\t\tapplicationFactory = null;\n+\t\t\t}\n+\t\t}\n \t}\n \n \t/**\n@@ -781,7 +805,7 @@ private void initIgnorePaths(final FilterConfig filterConfig)\n \t * level \"/\" then an empty string should be used instead.\n \t * \n \t * @param filterPath\n-\t * @return\n+\t * @return canonic filter path\n \t */\n \tstatic String canonicaliseFilterPath(String filterPath)\n \t{\ndiff --git a/wicket-core/src/main/java/org/apache/wicket/request/cycle/PageRequestHandlerTracker.java b/wicket-core/src/main/java/org/apache/wicket/request/cycle/PageRequestHandlerTracker.java\nindex caa5a6d748..b2390a6580 100644\n--- a/wicket-core/src/main/java/org/apache/wicket/request/cycle/PageRequestHandlerTracker.java\n+++ b/wicket-core/src/main/java/org/apache/wicket/request/cycle/PageRequestHandlerTracker.java\n@@ -59,6 +59,13 @@ public void onRequestHandlerScheduled(RequestCycle cycle, IRequestHandler handle\n \t\tregisterLastHandler(cycle,handler);\n \t}\n \n+\t@Override\n+\tpublic void onExceptionRequestHandlerResolved(RequestCycle cycle, IRequestHandler handler, Exception exception)\n+\t{\n+\t\tsuper.onExceptionRequestHandlerResolved(cycle, handler, exception);\n+\t\tregisterLastHandler(cycle,handler);\n+\t}\n+\n \t/**\n \t * Registers pagerequesthandler when it's resolved ,keeps up with the most recent handler resolved\n \t *\n", 
  "project": "wicket", 
  "linesAdd": 36, 
  "jira_id": "5147", 
  "nb_skipped": 3, 
  "commit": "184e51e9", 
  "nb_failure": 7, 
  "linesRem": 7
}