{
  "files": 1, 
  "nb_test": 1473, 
  "nb_error": 0, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "org.apache.wicket.core.request.mapper.BookmarkableMapperTest"
  ], 
  "patch": "diff --git a/wicket-core/src/main/java/org/apache/wicket/core/request/mapper/BookmarkableMapper.java b/wicket-core/src/main/java/org/apache/wicket/core/request/mapper/BookmarkableMapper.java\nindex b1418bf730..1fd71d630a 100644\n--- a/wicket-core/src/main/java/org/apache/wicket/core/request/mapper/BookmarkableMapper.java\n+++ b/wicket-core/src/main/java/org/apache/wicket/core/request/mapper/BookmarkableMapper.java\n@@ -16,6 +16,8 @@\n  */\n package org.apache.wicket.core.request.mapper;\n \n+import java.util.List;\n+\n import org.apache.wicket.Application;\n import org.apache.wicket.core.request.handler.PageProvider;\n import org.apache.wicket.core.request.handler.RenderPageRequestHandler;\n@@ -93,14 +95,26 @@ protected Url buildUrl(UrlInfo info)\n \t@Override\n \tprotected UrlInfo parseRequest(Request request)\n \t{\n-\t\tUrl url = request.getUrl();\n-\t\tif (matches(url))\n+\t\tif (matches(request))\n \t\t{\n+\t\t\tUrl url = request.getUrl();\n+\n \t\t\t// try to extract page and component information from URL\n \t\t\tPageComponentInfo info = getPageComponentInfo(url);\n \n+\t\t\tList<String> segments = url.getSegments();\n+\n \t\t\t// load the page class\n-\t\t\tString className = url.getSegments().get(2);\n+\t\t\tString className;\n+\t\t\tif (segments.size() >= 3)\n+\t\t\t{\n+\t\t\t\tclassName = segments.get(2);\n+\t\t\t}\n+\t\t\telse\n+\t\t\t{\n+\t\t\t\tclassName = segments.get(1);\n+\t\t\t}\n+\n \t\t\tClass<? extends IRequestablePage> pageClass = getPageClass(className);\n \n \t\t\tif (pageClass != null && IRequestablePage.class.isAssignableFrom(pageClass))\n@@ -111,13 +125,13 @@ protected UrlInfo parseRequest(Request request)\n \n \t\t\t\t\tif (application.getSecuritySettings().getEnforceMounts())\n \t\t\t\t\t{\n-\t\t\t\t\t\t// we make an excepion if the homepage itself was mounted, see WICKET-1898\n+\t\t\t\t\t\t// we make an exception if the homepage itself was mounted, see WICKET-1898\n \t\t\t\t\t\tif (!pageClass.equals(application.getHomePage()))\n \t\t\t\t\t\t{\n \t\t\t\t\t\t\t// WICKET-5094 only enforce mount if page is mounted\n \t\t\t\t\t\t\tUrl reverseUrl = application.getRootRequestMapper().mapHandler(\n \t\t\t\t\t\t\t\tnew RenderPageRequestHandler(new PageProvider(pageClass)));\n-\t\t\t\t\t\t\tif (!matches(reverseUrl))\n+\t\t\t\t\t\t\tif (!matches(request.cloneWithUrl(reverseUrl)))\n \t\t\t\t\t\t\t{\n \t\t\t\t\t\t\t\treturn null;\n \t\t\t\t\t\t\t}\n@@ -151,17 +165,37 @@ protected boolean pageMustHaveBeenCreatedBookmarkable()\n \tpublic int getCompatibilityScore(Request request)\n \t{\n \t\tint score = 0;\n-\t\tUrl url = request.getUrl();\n-\t\tif (matches(url))\n+\t\tif (matches(request))\n \t\t{\n \t\t\tscore = Integer.MAX_VALUE;\n \t\t}\n \t\treturn score;\n \t}\n \n-\tprivate boolean matches(final Url url)\n+\tprivate boolean matches(final Request request)\n+\t{\n+\t\tboolean matches = false;\n+\t\tUrl url = request.getUrl();\n+\t\tUrl baseUrl = request.getClientUrl();\n+\t\tString namespace = getContext().getNamespace();\n+\t\tString bookmarkableIdentifier = getContext().getBookmarkableIdentifier();\n+\t\tString pageIdentifier = getContext().getPageIdentifier();\n+\n+\t\tif (url.getSegments().size() >= 3 && urlStartsWith(url, namespace, bookmarkableIdentifier))\n+\t\t{\n+\t\t\tmatches = true;\n+\t\t}\n+\t\t// baseUrl = 'wicket/bookmarkable/com.example.SomePage[?...]', requestUrl = 'bookmarkable/com.example.SomePage'\n+\t\telse if (baseUrl.getSegments().size() == 3 && urlStartsWith(baseUrl, namespace, bookmarkableIdentifier) && url.getSegments().size() >= 2 && urlStartsWith(url, bookmarkableIdentifier))\n+\t\t{\n+\t\t\tmatches = true;\n+\t\t}\n+\t\t// baseUrl = 'wicket/page[?...]', requestUrl = 'bookmarkable/com.example.SomePage'\n+\t\telse if (baseUrl.getSegments().size() == 2 && urlStartsWith(baseUrl, namespace, pageIdentifier) && url.getSegments().size() >= 2 && urlStartsWith(url, bookmarkableIdentifier))\n \t\t{\n-\t\treturn (url.getSegments().size() >= 3 && urlStartsWith(url, getContext().getNamespace(),\n-\t\t\tgetContext().getBookmarkableIdentifier()));\n+\t\t\tmatches = true;\n+\t\t}\n+\n+\t\treturn matches;\n \t}\n }\n", 
  "project": "wicket", 
  "linesAdd": 44, 
  "jira_id": "5071", 
  "nb_skipped": 4, 
  "commit": "6e794ad0", 
  "nb_failure": 2, 
  "linesRem": 10
}