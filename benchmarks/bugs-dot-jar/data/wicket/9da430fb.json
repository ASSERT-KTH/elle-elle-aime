{
  "files": 5, 
  "nb_test": 763, 
  "nb_error": 0, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "org.apache.wicket.request.target.coding.IndexParamWithStatelessIFrameTest", 
    "org.apache.wicket.request.target.coding.MixedParamUrlCodingStrategyTest", 
    "org.apache.wicket.request.target.coding.StatelessStatefullUrlCodingStrategyTest", 
    "org.apache.wicket.markup.html.link.IndexedParamUrlCodingTest", 
    "org.apache.wicket.stateless.StatelessComponentTest", 
    "org.apache.wicket.util.parse.metapattern.parsers.IndexedParamTest"
  ], 
  "patch": "diff --git a/wicket/src/main/java/org/apache/wicket/request/target/coding/AbstractRequestTargetUrlCodingStrategy.java b/wicket/src/main/java/org/apache/wicket/request/target/coding/AbstractRequestTargetUrlCodingStrategy.java\nindex b1d26e9be0..5631502eee 100644\n--- a/wicket/src/main/java/org/apache/wicket/request/target/coding/AbstractRequestTargetUrlCodingStrategy.java\n+++ b/wicket/src/main/java/org/apache/wicket/request/target/coding/AbstractRequestTargetUrlCodingStrategy.java\n@@ -99,9 +99,11 @@ protected void appendParameters(AppendingStringBuffer url, Map<?,?> parameters)\n \t\t\t\t\t\t{\n \t\t\t\t\t\t\tappendValue(url, ((Entry<?, ?>)entry1).getKey().toString(), value1);\n \t\t\t\t\t\t}\n-\t\t\t\t\t} else\n+\t\t\t\t\t}\n+\t\t\t\t\telse\n \t\t\t\t\t{\n-\t\t\t\t\t\tappendValue(url, ((Entry<?, ?>) entry1).getKey().toString(), value.toString());\n+\t\t\t\t\t\tappendValue(url, ((Entry<?, ?>)entry1).getKey().toString(),\n+\t\t\t\t\t\t\tvalue.toString());\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n@@ -117,7 +119,7 @@ private void appendValue(AppendingStringBuffer url, String key, String value)\n \t\t\t{\n \t\t\t\turl.append(\"/\");\n \t\t\t}\n-\t\t\turl.append(key).append(\"/\").append(escapedValue).append(\"/\");\n+\t\t\turl.append(key).append(\"/\").append(escapedValue);\n \t\t}\n \t}\n \ndiff --git a/wicket/src/main/java/org/apache/wicket/request/target/coding/IndexedHybridUrlCodingStrategy.java b/wicket/src/main/java/org/apache/wicket/request/target/coding/IndexedHybridUrlCodingStrategy.java\nindex 4a46b34c7c..2f3ae49056 100644\n--- a/wicket/src/main/java/org/apache/wicket/request/target/coding/IndexedHybridUrlCodingStrategy.java\n+++ b/wicket/src/main/java/org/apache/wicket/request/target/coding/IndexedHybridUrlCodingStrategy.java\n@@ -45,6 +45,7 @@ public IndexedHybridUrlCodingStrategy(String mountPath, Class pageClass)\n \t\tsuper(mountPath, pageClass);\r\n \t}\r\n \r\n+\t@Override\r\n \tprotected void appendParameters(AppendingStringBuffer url, Map parameters)\r\n \t{\r\n \t\tint i = 0;\r\n@@ -55,7 +56,7 @@ protected void appendParameters(AppendingStringBuffer url, Map parameters)\n \t\t\t{\r\n \t\t\t\turl.append(\"/\");\r\n \t\t\t}\r\n-\t\t\turl.append(urlEncodePathComponent(value)).append(\"/\");\r\n+\t\t\turl.append(urlEncodePathComponent(value));\r\n \t\t\ti++;\r\n \t\t}\r\n \r\n@@ -68,8 +69,8 @@ protected void appendParameters(AppendingStringBuffer url, Map parameters)\n \t\t\t{\r\n \t\t\t\turl.append(\"/\");\r\n \t\t\t}\r\n-\t\t\turl.append(WebRequestCodingStrategy.PAGEMAP).append(\"/\").append(urlEncodePathComponent(pageMap))\r\n-\t\t\t\t\t.append(\"/\");\r\n+\t\t\turl.append(WebRequestCodingStrategy.PAGEMAP).append(\"/\").append(\r\n+\t\t\t\turlEncodePathComponent(pageMap));\r\n \t\t}\r\n \r\n \t\tif (i != parameters.size())\r\n@@ -80,6 +81,7 @@ protected void appendParameters(AppendingStringBuffer url, Map parameters)\n \t\t}\r\n \t}\r\n \r\n+\t@Override\r\n \tprotected ValueMap decodeParameters(String urlFragment, Map urlParameters)\r\n \t{\r\n \t\tPageParameters params = new PageParameters();\r\n@@ -102,8 +104,8 @@ protected ValueMap decodeParameters(String urlFragment, Map urlParameters)\n \t\t\tif (WebRequestCodingStrategy.PAGEMAP.equals(parts[i]))\r\n \t\t\t{\r\n \t\t\t\ti++;\r\n-\t\t\t\tparams.put(WebRequestCodingStrategy.PAGEMAP, WebRequestCodingStrategy\r\n-\t\t\t\t\t\t.decodePageMapName(urlDecodePathComponent(parts[i])));\r\n+\t\t\t\tparams.put(WebRequestCodingStrategy.PAGEMAP,\r\n+\t\t\t\t\tWebRequestCodingStrategy.decodePageMapName(urlDecodePathComponent(parts[i])));\r\n \t\t\t}\r\n \t\t\telse\r\n \t\t\t{\r\ndiff --git a/wicket/src/main/java/org/apache/wicket/request/target/coding/IndexedParamUrlCodingStrategy.java b/wicket/src/main/java/org/apache/wicket/request/target/coding/IndexedParamUrlCodingStrategy.java\nindex 5c97510a8b..d6c5c1bc3a 100644\n--- a/wicket/src/main/java/org/apache/wicket/request/target/coding/IndexedParamUrlCodingStrategy.java\n+++ b/wicket/src/main/java/org/apache/wicket/request/target/coding/IndexedParamUrlCodingStrategy.java\n@@ -90,7 +90,7 @@ protected void appendParameters(AppendingStringBuffer url, Map parameters)\n \t\t\t{\n \t\t\t\turl.append(\"/\");\n \t\t\t}\n-\t\t\turl.append(urlEncodePathComponent(value)).append(\"/\");\n+\t\t\turl.append(urlEncodePathComponent(value));\n \t\t\ti++;\n \t\t}\n \n@@ -104,7 +104,7 @@ protected void appendParameters(AppendingStringBuffer url, Map parameters)\n \t\t\t\turl.append(\"/\");\n \t\t\t}\n \t\t\turl.append(WebRequestCodingStrategy.PAGEMAP).append(\"/\").append(\n-\t\t\t\turlEncodePathComponent(pageMap)).append(\"/\");\n+\t\t\t\turlEncodePathComponent(pageMap));\n \t\t}\n \n \t\tString intface = (String)parameters.get(WebRequestCodingStrategy.INTERFACE_PARAMETER_NAME);\n@@ -116,7 +116,7 @@ protected void appendParameters(AppendingStringBuffer url, Map parameters)\n \t\t\t\turl.append(\"/\");\n \t\t\t}\n \t\t\turl.append(WebRequestCodingStrategy.INTERFACE_PARAMETER_NAME).append(\"/\").append(\n-\t\t\t\turlEncodePathComponent(intface)).append(\"/\");\n+\t\t\t\turlEncodePathComponent(intface));\n \t\t}\n \t\tif (i != parameters.size())\n \t\t{\ndiff --git a/wicket/src/main/java/org/apache/wicket/request/target/coding/MixedParamUrlCodingStrategy.java b/wicket/src/main/java/org/apache/wicket/request/target/coding/MixedParamUrlCodingStrategy.java\nindex 97881969ea..388a0df2b5 100644\n--- a/wicket/src/main/java/org/apache/wicket/request/target/coding/MixedParamUrlCodingStrategy.java\n+++ b/wicket/src/main/java/org/apache/wicket/request/target/coding/MixedParamUrlCodingStrategy.java\n@@ -129,7 +129,11 @@ protected void appendParameters(AppendingStringBuffer url, Map parameters)\n \t\t\t\t{\r\n \t\t\t\t\tvalue = \"\";\r\n \t\t\t\t}\r\n-\t\t\t\turl.append(urlEncodePathComponent(value)).append(\"/\");\r\n+\t\t\t\tif (!url.endsWith(\"/\"))\r\n+\t\t\t\t{\r\n+\t\t\t\t\turl.append(\"/\");\r\n+\t\t\t\t}\r\n+\t\t\t\turl.append(urlEncodePathComponent(value));\r\n \t\t\t\tparameterNamesToAdd.remove(parameterName);\r\n \t\t\t}\r\n \t\t}\r\ndiff --git a/wicket/src/main/java/org/apache/wicket/request/target/coding/PackageRequestTargetUrlCodingStrategy.java b/wicket/src/main/java/org/apache/wicket/request/target/coding/PackageRequestTargetUrlCodingStrategy.java\nindex 9519fe8337..1808f3a253 100644\n--- a/wicket/src/main/java/org/apache/wicket/request/target/coding/PackageRequestTargetUrlCodingStrategy.java\n+++ b/wicket/src/main/java/org/apache/wicket/request/target/coding/PackageRequestTargetUrlCodingStrategy.java\n@@ -39,8 +39,7 @@\n  */\n public class PackageRequestTargetUrlCodingStrategy extends AbstractRequestTargetUrlCodingStrategy\n {\n-\tprivate static final Logger log = LoggerFactory\n-\t\t\t.getLogger(PackageRequestTargetUrlCodingStrategy.class);\n+\tprivate static final Logger log = LoggerFactory.getLogger(PackageRequestTargetUrlCodingStrategy.class);\n \n \t/** package for this mount. */\n \tprivate final PackageName packageName;\n@@ -110,8 +109,7 @@ public IRequestTarget decode(RequestParameters requestParameters)\n \t\t// do some extra work for checking whether this is a normal request to a\n \t\t// bookmarkable page, or a request to a stateless page (in which case a\n \t\t// wicket:interface parameter should be available\n-\t\tfinal String interfaceParameter = (String)parameters\n-\t\t\t\t.remove(WebRequestCodingStrategy.INTERFACE_PARAMETER_NAME);\n+\t\tfinal String interfaceParameter = (String)parameters.remove(WebRequestCodingStrategy.INTERFACE_PARAMETER_NAME);\n \n \t\tif (interfaceParameter != null)\n \t\t{\n@@ -139,13 +137,13 @@ public final CharSequence encode(IRequestTarget requestTarget)\n \t\tAppendingStringBuffer url = new AppendingStringBuffer(40);\n \t\turl.append(getMountPath());\n \t\tIBookmarkablePageRequestTarget target = (IBookmarkablePageRequestTarget)requestTarget;\n-\t\turl.append(\"/\").append(Classes.simpleName(target.getPageClass())).append(\"/\");\n+\t\turl.append(\"/\").append(Classes.simpleName(target.getPageClass()));\n \n \t\tPageParameters pageParameters = target.getPageParameters();\n \t\tif (target.getPageMapName() != null)\n \t\t{\n-\t\t\tpageParameters.put(WebRequestCodingStrategy.PAGEMAP, WebRequestCodingStrategy\n-\t\t\t\t\t.encodePageMapName(target.getPageMapName()));\n+\t\t\tpageParameters.put(WebRequestCodingStrategy.PAGEMAP,\n+\t\t\t\tWebRequestCodingStrategy.encodePageMapName(target.getPageMapName()));\n \t\t}\n \n \t\tappendParameters(url, pageParameters);\n@@ -171,6 +169,7 @@ public boolean matches(IRequestTarget requestTarget)\n \t/**\n \t * @see java.lang.Object#toString()\n \t */\n+\t@Override\n \tpublic String toString()\n \t{\n \t\treturn \"PackageEncoder[package=\" + packageName + \"]\";\n", 
  "project": "wicket", 
  "linesAdd": 26, 
  "jira_id": "2065", 
  "nb_skipped": 0, 
  "commit": "9da430fb", 
  "nb_failure": 16, 
  "linesRem": 19
}