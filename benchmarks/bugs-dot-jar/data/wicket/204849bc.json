{
  "files": 3, 
  "nb_test": 1637, 
  "nb_error": 0, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "org.apache.wicket.core.request.mapper.PackageMapperTest"
  ], 
  "patch": "diff --git a/wicket-core/src/main/java/org/apache/wicket/core/request/mapper/AbstractBookmarkableMapper.java b/wicket-core/src/main/java/org/apache/wicket/core/request/mapper/AbstractBookmarkableMapper.java\nindex e9ad89cf0a..e38d956d4d 100644\n--- a/wicket-core/src/main/java/org/apache/wicket/core/request/mapper/AbstractBookmarkableMapper.java\n+++ b/wicket-core/src/main/java/org/apache/wicket/core/request/mapper/AbstractBookmarkableMapper.java\n@@ -204,7 +204,25 @@ public AbstractBookmarkableMapper(String mountPath, IPageParametersEncoder pageP\n \t * @see IRequestMapper#getCompatibilityScore(Request)\n \t */\n \t@Override\n-\tpublic abstract int getCompatibilityScore(Request request);\n+\tpublic int getCompatibilityScore(Request request)\n+\t{\n+\t\tif (urlStartsWith(request.getUrl(), mountSegments))\n+\t\t{\n+\t\t\t/* see WICKET-5056 - alter score with pathSegment type */\n+\t\t\tint countOptional = 0;\n+\t\t\tint fixedSegments = 0;\n+\t\t\tfor (MountPathSegment pathSegment : pathSegments)\n+\t\t\t{\n+\t\t\t\tfixedSegments += pathSegment.getFixedPartSize();\n+\t\t\t\tcountOptional += pathSegment.getOptionalParameters();\n+\t\t\t}\n+\t\t\treturn mountSegments.length - countOptional + fixedSegments;\n+\t\t}\n+\t\telse\n+\t\t{\n+\t\t\treturn 0;\n+\t\t}\n+\t}\n \n \t/**\n \t * Creates a {@code IRequestHandler} that processes a bookmarkable request.\ndiff --git a/wicket-core/src/main/java/org/apache/wicket/core/request/mapper/MountedMapper.java b/wicket-core/src/main/java/org/apache/wicket/core/request/mapper/MountedMapper.java\nindex da6c4c46fd..fdf1dc26da 100644\n--- a/wicket-core/src/main/java/org/apache/wicket/core/request/mapper/MountedMapper.java\n+++ b/wicket-core/src/main/java/org/apache/wicket/core/request/mapper/MountedMapper.java\n@@ -267,30 +267,6 @@ protected boolean pageMustHaveBeenCreatedBookmarkable()\n \t\treturn false;\n \t}\n \n-\t/**\n-\t * @see AbstractBookmarkableMapper#getCompatibilityScore(org.apache.wicket.request.Request)\n-\t */\n-\t@Override\n-\tpublic int getCompatibilityScore(Request request)\n-\t{\n-\t\tif (urlStartsWith(request.getUrl(), mountSegments))\n-\t\t{\n-\t\t\t/* see WICKET-5056 - alter score with pathSegment type */\n-\t\t\tint countOptional = 0;\n-\t\t\tint fixedSegments = 0;\n-\t\t\tfor (MountPathSegment pathSegment : pathSegments)\n-\t\t\t{\n-\t\t\t\tfixedSegments += pathSegment.getFixedPartSize();\n-\t\t\t\tcountOptional += pathSegment.getOptionalParameters();\n-\t\t\t}\n-\t\t\treturn mountSegments.length - countOptional + fixedSegments;\n-\t\t}\n-\t\telse\n-\t\t{\n-\t\t\treturn 0;\n-\t\t}\n-\t}\n-\n \t/**\n \t * @see AbstractBookmarkableMapper#checkPageClass(java.lang.Class)\n \t */\ndiff --git a/wicket-core/src/main/java/org/apache/wicket/core/request/mapper/PackageMapper.java b/wicket-core/src/main/java/org/apache/wicket/core/request/mapper/PackageMapper.java\nindex 2037356c10..ff8b81a74e 100644\n--- a/wicket-core/src/main/java/org/apache/wicket/core/request/mapper/PackageMapper.java\n+++ b/wicket-core/src/main/java/org/apache/wicket/core/request/mapper/PackageMapper.java\n@@ -221,17 +221,4 @@ protected boolean pageMustHaveBeenCreatedBookmarkable()\n \t{\n \t\treturn false;\n \t}\n-\n-\t@Override\n-\tpublic int getCompatibilityScore(Request request)\n-\t{\n-\t\tif (urlStartsWith(request.getUrl(), mountSegments))\n-\t\t{\n-\t\t    return mountSegments.length;\n-\t\t}\n-\t\telse\n-\t\t{\n-\t\t    return 0;\n-\t\t}\n-\t}\n }\n", 
  "project": "wicket", 
  "linesAdd": 19, 
  "jira_id": "5565", 
  "nb_skipped": 2, 
  "commit": "204849bc", 
  "nb_failure": 1, 
  "linesRem": 38
}