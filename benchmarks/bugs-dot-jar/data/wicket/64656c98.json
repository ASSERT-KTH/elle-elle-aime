{
  "files": 1, 
  "nb_test": 1200, 
  "nb_error": 1, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "org.apache.wicket.markup.transformer.AbstractTransformerBehaviorTest"
  ], 
  "patch": "diff --git a/wicket-core/src/main/java/org/apache/wicket/markup/transformer/AbstractTransformerBehavior.java b/wicket-core/src/main/java/org/apache/wicket/markup/transformer/AbstractTransformerBehavior.java\nindex be0490b983..f752e10ebc 100644\n--- a/wicket-core/src/main/java/org/apache/wicket/markup/transformer/AbstractTransformerBehavior.java\n+++ b/wicket-core/src/main/java/org/apache/wicket/markup/transformer/AbstractTransformerBehavior.java\n@@ -20,12 +20,13 @@\n import org.apache.wicket.WicketRuntimeException;\n import org.apache.wicket.behavior.Behavior;\n import org.apache.wicket.protocol.http.BufferedWebResponse;\n+import org.apache.wicket.request.Response;\n import org.apache.wicket.request.cycle.RequestCycle;\n import org.apache.wicket.request.http.WebResponse;\n \n /**\n- * A IBehavior which can be added to any component. It allows to post-process (transform) the markup\n- * generated by the component.\n+ * A {@link Behavior} which can be added to any component. It allows to post-process (transform) the\n+ * markup generated by the component.\n  * \n  * @see org.apache.wicket.markup.transformer.AbstractOutputTransformerContainer\n  * \n@@ -35,20 +36,17 @@\n {\n \tprivate static final long serialVersionUID = 1L;\n \n-\tprivate WebResponse webResponse;\n-\n \t/**\n-\t * Construct.\n+\t * The request cycle's response before the transformation.\n \t */\n-\tpublic AbstractTransformerBehavior()\n-\t{\n-\t}\n+\tprivate Response originalResponse;\n \n \t/**\n \t * Create a new response object which is used to store the markup generated by the child\n \t * objects.\n \t * \n \t * @param originalResponse\n+\t *            the original web response or {@code null} if it isn't a {@link WebResponse}\n \t * \n \t * @return Response object. Must not be null\n \t */\n@@ -65,17 +63,14 @@ public void beforeRender(Component component)\n \t\tfinal RequestCycle requestCycle = RequestCycle.get();\n \n \t\t// Temporarily replace the web response with a String response\n-\t\twebResponse = (WebResponse)requestCycle.getResponse();\n+\t\toriginalResponse = requestCycle.getResponse();\n \n-\t\t// Create a new response object\n-\t\tfinal BufferedWebResponse response = newResponse(webResponse);\n-\t\tif (response == null)\n-\t\t{\n-\t\t\tthrow new IllegalStateException(\"newResponse() must not return null\");\n-\t\t}\n+\t\tWebResponse origResponse = (WebResponse)((originalResponse instanceof WebResponse)\n+\t\t\t? originalResponse : null);\n+\t\tBufferedWebResponse tempResponse = newResponse(origResponse);\n \n-\t\t// and make it the current one\n-\t\trequestCycle.setResponse(response);\n+\t\t// temporarily set StringResponse to collect the transformed output\n+\t\trequestCycle.setResponse(tempResponse);\n \t}\n \n \t@Override\n@@ -85,28 +80,28 @@ public void afterRender(final Component component)\n \n \t\ttry\n \t\t{\n-\t\t\tBufferedWebResponse response = (BufferedWebResponse)requestCycle.getResponse();\n+\t\t\tBufferedWebResponse tempResponse = (BufferedWebResponse)requestCycle.getResponse();\n \n \t\t\t// Transform the data\n-\t\t\tCharSequence output = transform(component, response.getText());\n-\t\t\tresponse.setText(output);\n-\t\t\tresponse.writeTo(webResponse);\n+\t\t\tCharSequence output = transform(component, tempResponse.getText());\n+\t\t\toriginalResponse.write(output);\n \t\t}\n \t\tcatch (Exception ex)\n \t\t{\n-\t\t\tthrow new WicketRuntimeException(\"Error while transforming the output: \" + this, ex);\n+\t\t\tthrow new WicketRuntimeException(\"Error while transforming the output of component: \" +\n+\t\t\t\tcomponent, ex);\n \t\t}\n \t\tfinally\n \t\t{\n \t\t\t// Restore the original response object\n-\t\t\trequestCycle.setResponse(webResponse);\n+\t\t\trequestCycle.setResponse(originalResponse);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void detach(Component component)\n \t{\n-\t\twebResponse = null;\n+\t\toriginalResponse = null;\n \t\tsuper.detach(component);\n \t}\n \n", 
  "project": "wicket", 
  "linesAdd": 19, 
  "jira_id": "4105", 
  "nb_skipped": 2, 
  "commit": "64656c98", 
  "nb_failure": 0, 
  "linesRem": 24
}