{
  "files": 1, 
  "nb_test": 1372, 
  "nb_error": 0, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "org.apache.wicket.markup.html.form.FormSubmitTest"
  ], 
  "patch": "diff --git a/wicket-core/src/main/java/org/apache/wicket/markup/html/form/Form.java b/wicket-core/src/main/java/org/apache/wicket/markup/html/form/Form.java\nindex 35ac561cab..53898a60a8 100644\n--- a/wicket-core/src/main/java/org/apache/wicket/markup/html/form/Form.java\n+++ b/wicket-core/src/main/java/org/apache/wicket/markup/html/form/Form.java\n@@ -928,18 +928,19 @@ public void process(IFormSubmitter submittingComponent)\n \t */\n \tprotected void callOnError(IFormSubmitter submitter)\n \t{\n+\t\tfinal Form<?> processingForm = findFormToProcess(submitter);\n+\n \t\tif (submitter != null)\n \t\t{\n \t\t\tsubmitter.onError();\n \t\t}\n-\t\tonError();\n-\t\t// call onError on nested forms\n-\t\tvisitChildren(Form.class, new IVisitor<Component, Void>()\n+\n+\t\t// invoke Form#onSubmit(..) going from innermost to outermost\n+\t\tVisits.visitPostOrder(processingForm, new IVisitor<Form<?>, Void>()\n \t\t{\n \t\t\t@Override\n-\t\t\tpublic void component(final Component component, final IVisit<Void> visit)\n+\t\t\tpublic void component(Form<?> form, IVisit<Void> visit)\n \t\t\t{\n-\t\t\t\tfinal Form<?> form = (Form<?>)component;\n \t\t\t\tif (!form.isEnabledInHierarchy() || !form.isVisibleInHierarchy())\n \t\t\t\t{\n \t\t\t\t\tvisit.dontGoDeeper();\n@@ -950,7 +951,7 @@ public void component(final Component component, final IVisit<Void> visit)\n \t\t\t\t\tform.onError();\n \t\t\t\t}\n \t\t\t}\n-\t\t});\n+\t\t}, new ClassVisitFilter(Form.class));\n \t}\n \n \n@@ -1208,8 +1209,8 @@ protected void beforeUpdateFormComponentModels()\n \t * processing to clients.\n \t * <p>\n \t * This implementation first finds out whether the form processing was triggered by a nested\n-\t * IFormSubmittingComponent of this form. If that is the case, that component's onSubmit is\n-\t * called first.\n+\t * IFormSubmittingComponent of this form. If that is the case, that component's\n+\t * onSubmitBefore/AfterForm methods are called appropriately..\n \t * </p>\n \t * <p>\n \t * Regardless of whether a submitting component was found, the form's onSubmit method is called\n", 
  "project": "wicket", 
  "linesAdd": 9, 
  "jira_id": "4616", 
  "nb_skipped": 5, 
  "commit": "dd1df04b", 
  "nb_failure": 3, 
  "linesRem": 8
}