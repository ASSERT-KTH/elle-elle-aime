{
  "files": 1, 
  "nb_test": 1367, 
  "nb_error": 0, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "org.apache.wicket.page.persistent.disk.PageWindowManagerTest"
  ], 
  "patch": "diff --git a/wicket-core/src/main/java/org/apache/wicket/pageStore/PageWindowManager.java b/wicket-core/src/main/java/org/apache/wicket/pageStore/PageWindowManager.java\nindex 0f2faa6fd1..03887bb0dd 100644\n--- a/wicket-core/src/main/java/org/apache/wicket/pageStore/PageWindowManager.java\n+++ b/wicket-core/src/main/java/org/apache/wicket/pageStore/PageWindowManager.java\n@@ -64,6 +64,11 @@\n \t */\n \tprivate IntHashMap<Integer> idToWindowIndex = null;\n \n+\t/**\n+\t * Inversed index of #idToWindowIndex\n+\t */\n+\tprivate IntHashMap<Integer> windowIndexToPageId = null;\n+\n \t/** index of last added page */\n \tprivate int indexPointer = -1;\n \n@@ -84,7 +89,13 @@ private void putWindowIndex(int pageId, int windowIndex)\n \t{\n \t\tif (idToWindowIndex != null && pageId != -1 && windowIndex != -1)\n \t\t{\n+\t\t\tInteger oldPageId = windowIndexToPageId.remove(windowIndex);\n+\t\t\tif (oldPageId != null)\n+\t\t\t{\n+\t\t\t\tidToWindowIndex.remove(oldPageId);\n+\t\t\t}\n \t\t\tidToWindowIndex.put(pageId, windowIndex);\n+\t\t\twindowIndexToPageId.put(windowIndex, pageId);\n \t\t}\n \t}\n \n@@ -94,7 +105,11 @@ private void putWindowIndex(int pageId, int windowIndex)\n \t */\n \tprivate void removeWindowIndex(int pageId)\n \t{\n-\t\tidToWindowIndex.remove(pageId);\n+\t\tInteger windowIndex = idToWindowIndex.remove(pageId);\n+\t\tif (windowIndex != null)\n+\t\t{\n+\t\t\twindowIndexToPageId.remove(windowIndex);\n+\t\t}\n \t}\n \n \t/**\n@@ -104,6 +119,8 @@ private void rebuildIndices()\n \t{\n \t\tidToWindowIndex = null;\n \t\tidToWindowIndex = new IntHashMap<Integer>();\n+\t\twindowIndexToPageId = null;\n+\t\twindowIndexToPageId = new IntHashMap<Integer>();\n \t\tfor (int i = 0; i < windows.size(); ++i)\n \t\t{\n \t\t\tPageWindowInternal window = windows.get(i);\n@@ -195,6 +212,7 @@ else if (window.filePartSize != size)\n \t\t}\n \n \t\tidToWindowIndex = null;\n+\t\twindowIndexToPageId = null;\n \t}\n \n \t/**\n@@ -213,6 +231,7 @@ private void mergeWindowWithNext(int index)\n \n \t\t\twindows.remove(index + 1);\n \t\t\tidToWindowIndex = null; // reset index\n+\t\t\twindowIndexToPageId = null;\n \t\t}\n \t}\n \n@@ -364,7 +383,7 @@ public PageWindow createPageWindow(int pageId, int size)\n \t\t}\n \n \t\t// if we are not going to reuse a page window (because it's not on\n-\t\t// indexPointor position or because we didn't find it), increment the\n+\t\t// indexPointer position or because we didn't find it), increment the\n \t\t// indexPointer\n \t\tif (index == -1 || index != indexPointer)\n \t\t{\n", 
  "project": "wicket", 
  "linesAdd": 21, 
  "jira_id": "4572", 
  "nb_skipped": 8, 
  "commit": "dfc56674", 
  "nb_failure": 1, 
  "linesRem": 2
}