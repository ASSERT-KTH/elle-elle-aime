{
  "files": 1, 
  "nb_test": 764, 
  "nb_error": 1, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "org.apache.wicket.markup.html.border.ComponentBorderTest"
  ], 
  "patch": "diff --git a/wicket/src/main/java/org/apache/wicket/Page.java b/wicket/src/main/java/org/apache/wicket/Page.java\nindex eaf188d430..b6f0290810 100644\n--- a/wicket/src/main/java/org/apache/wicket/Page.java\n+++ b/wicket/src/main/java/org/apache/wicket/Page.java\n@@ -33,6 +33,7 @@\n import org.apache.wicket.markup.MarkupException;\n import org.apache.wicket.markup.MarkupStream;\n import org.apache.wicket.markup.html.WebPage;\n+import org.apache.wicket.markup.html.border.Border;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.resolver.IComponentResolver;\n import org.apache.wicket.model.IModel;\n@@ -1133,6 +1134,29 @@ public Object component(final Component component)\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n+\n+\t\t\t\t\t// Check if this component is a child of a border whose body is invisible and if\n+\t\t\t\t\t// so ignore it\n+\t\t\t\t\tBorder border = component.findParent(Border.class);\n+\t\t\t\t\tif (border != null && !border.getBodyContainer().isVisibleInHierarchy())\n+\t\t\t\t\t{\n+\n+\t\t\t\t\t\t// Suppose:\n+\t\t\t\t\t\t//\t\t\t\t\t\t  \n+\t\t\t\t\t\t// <div wicket:id=\"border\"><div wicket:id=\"label\"></div> suppose\n+\t\t\t\t\t\t// border->label and border's body is hidden.\n+\t\t\t\t\t\t//\t\t\t\t\t\t  \n+\t\t\t\t\t\t// The label is added to border not to its hidden body so as far as wicket\n+\t\t\t\t\t\t// is concerned label is visible in hierarchy, but when rendering label wont\n+\t\t\t\t\t\t// be rendered because in the markup it is inside the border's hidden body.\n+\t\t\t\t\t\t// Thus component use check will fail even though it shouldnt - make sure it\n+\t\t\t\t\t\t// doesnt.\n+\t\t\t\t\t\t//\t\t\t\t\t\t \n+\n+\t\t\t\t\t\t// TODO it would be more accurate to determine that this component is inside\n+\t\t\t\t\t\t// the border parent's markup not the border's itself\n+\t\t\t\t\t\titerator.remove();\n+\t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\t// if still > 0\n \t\t\t\tif (unrenderedComponents.size() > 0)\n", 
  "project": "wicket", 
  "linesAdd": 24, 
  "jira_id": "2079", 
  "nb_skipped": 0, 
  "commit": "ceac38b1", 
  "nb_failure": 0, 
  "linesRem": 0
}