{
  "files": 5, 
  "nb_test": 763, 
  "nb_error": 0, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "org.apache.wicket.markup.html.form.CheckGroupTest", 
    "org.apache.wicket.markup.html.form.RadioGroupTest"
  ], 
  "patch": "diff --git a/wicket/src/main/java/org/apache/wicket/ajax/form/AjaxFormChoiceComponentUpdatingBehavior.java b/wicket/src/main/java/org/apache/wicket/ajax/form/AjaxFormChoiceComponentUpdatingBehavior.java\nindex ce38a7c66d..f8f2e50810 100644\n--- a/wicket/src/main/java/org/apache/wicket/ajax/form/AjaxFormChoiceComponentUpdatingBehavior.java\n+++ b/wicket/src/main/java/org/apache/wicket/ajax/form/AjaxFormChoiceComponentUpdatingBehavior.java\n@@ -33,6 +33,9 @@\n  * <p>\n  * Use the normal {@link AjaxFormChoiceComponentUpdatingBehavior} for the normal single component\n  * fields\n+ * <p>\n+ * In order to be supported by this behavior the group components must output children with markup\n+ * id in format of 'groupId-childId'\n  * \n  * @author jcompagner\n  * \n@@ -67,6 +70,7 @@ public void renderHead(IHeaderResponse response)\n \t\tasb.append(\" for (var i = 0 ; i < inputNodes.length ; i ++) {\\n\");\n \t\tasb.append(\" var inputNode = inputNodes[i];\\n\");\n \t\tasb.append(\" if (!inputNode.type) continue;\\n\");\n+\t\tasb.append(\" if (!(inputNode.id.indexOf(markupId+'-')===0)) continue;\\n\");\n \t\tasb.append(\" var inputType = inputNode.type.toLowerCase();\\n\");\n \t\tasb.append(\" if (inputType == 'checkbox' || inputType == 'radio') {\\n\");\n \t\tasb.append(\" Wicket.Event.add(inputNode, 'click', callbackScript);\\n\");\ndiff --git a/wicket/src/main/java/org/apache/wicket/markup/html/form/Check.java b/wicket/src/main/java/org/apache/wicket/markup/html/form/Check.java\nindex 7ebf5c333a..c74b293dc3 100644\n--- a/wicket/src/main/java/org/apache/wicket/markup/html/form/Check.java\n+++ b/wicket/src/main/java/org/apache/wicket/markup/html/form/Check.java\n@@ -94,6 +94,7 @@ public Check(String id, IModel<T> model, CheckGroup<T> group)\n \t{\n \t\tsuper(id, model);\n \t\tthis.group = group;\n+\t\tsetOutputMarkupId(true);\n \t}\n \n \n@@ -112,6 +113,32 @@ public final String getValue()\n \t\treturn \"check\" + uuid;\n \t}\n \n+\t@SuppressWarnings(\"unchecked\")\n+\tprivate CheckGroup<T> getGroup()\n+\t{\n+\t\tCheckGroup<T> group = this.group;\n+\t\tif (group == null)\n+\t\t{\n+\t\t\tgroup = findParent(CheckGroup.class);\n+\t\t\tif (group == null)\n+\t\t\t{\n+\t\t\t\tthrow new WicketRuntimeException(\"Check component [\" + getPath() +\n+\t\t\t\t\t\"] cannot find its parent CheckGroup\");\n+\t\t\t}\n+\t\t}\n+\t\treturn group;\n+\t}\n+\n+\t/** {@inheritDoc} */\n+\t@Override\n+\tprotected void onBeforeRender()\n+\t{\n+\t\t// prefix markup id of this radio with its group's id\n+\t\t// this will make it easier to identify all radios that belong to a specific group\n+\t\tsetMarkupId(getGroup().getMarkupId() + \"-\" + getMarkupId());\n+\t\tsuper.onBeforeRender();\n+\t}\n+\n \n \t/**\n \t * @see Component#onComponentTag(ComponentTag)\n@@ -128,16 +155,7 @@ protected void onComponentTag(final ComponentTag tag)\n \t\tcheckComponentTag(tag, \"input\");\n \t\tcheckComponentTagAttribute(tag, \"type\", \"checkbox\");\n \n-\t\tCheckGroup<?> group = this.group;\n-\t\tif (group == null)\n-\t\t{\n-\t\t\tgroup = findParent(CheckGroup.class);\n-\t\t\tif (group == null)\n-\t\t\t{\n-\t\t\t\tthrow new WicketRuntimeException(\"Check component [\" + getPath() +\n-\t\t\t\t\t\"] cannot find its parent CheckGroup\");\n-\t\t\t}\n-\t\t}\n+\t\tCheckGroup<?> group = getGroup();\n \n \t\tfinal String uuid = getValue();\n \ndiff --git a/wicket/src/main/java/org/apache/wicket/markup/html/form/CheckBoxMultipleChoice.java b/wicket/src/main/java/org/apache/wicket/markup/html/form/CheckBoxMultipleChoice.java\nindex e52fe46d95..65dab2f7e4 100644\n--- a/wicket/src/main/java/org/apache/wicket/markup/html/form/CheckBoxMultipleChoice.java\n+++ b/wicket/src/main/java/org/apache/wicket/markup/html/form/CheckBoxMultipleChoice.java\n@@ -411,7 +411,7 @@ else if (displayValue != null)\n \t\t\t\tbuffer.append(getPrefix());\n \n \t\t\t\tString id = getChoiceRenderer().getIdValue(choice, index);\n-\t\t\t\tfinal String idAttr = getInputName() + \"_\" + id;\n+\t\t\t\tfinal String idAttr = getMarkupId() + \"-\" + getInputName() + \"_\" + id;\n \n \t\t\t\t// Add checkbox element\n \t\t\t\tbuffer.append(\"<input name=\\\"\")\ndiff --git a/wicket/src/main/java/org/apache/wicket/markup/html/form/Radio.java b/wicket/src/main/java/org/apache/wicket/markup/html/form/Radio.java\nindex 130c2d970a..0788018cb0 100644\n--- a/wicket/src/main/java/org/apache/wicket/markup/html/form/Radio.java\n+++ b/wicket/src/main/java/org/apache/wicket/markup/html/form/Radio.java\n@@ -91,6 +91,7 @@ public Radio(String id, IModel<T> model, RadioGroup<T> group)\n \t{\n \t\tsuper(id, model);\n \t\tthis.group = group;\n+\t\tsetOutputMarkupId(true);\n \t}\n \n \n@@ -109,6 +110,34 @@ public final String getValue()\n \t\treturn \"radio\" + uuid;\n \t}\n \n+\t/** {@inheritDoc} */\n+\t@Override\n+\tprotected void onBeforeRender()\n+\t{\n+\t\t// prefix markup id of this radio with its group's id\n+\t\t// this will make it easier to identify all radios that belong to a specific group\n+\t\tsetMarkupId(getGroup().getMarkupId() + \"-\" + getMarkupId());\n+\t\tsuper.onBeforeRender();\n+\t}\n+\n+\n+\t@SuppressWarnings(\"unchecked\")\n+\tprivate RadioGroup<T> getGroup()\n+\t{\n+\t\tRadioGroup<T> group = this.group;\n+\t\tif (group == null)\n+\t\t{\n+\t\t\tgroup = findParent(RadioGroup.class);\n+\t\t\tif (group == null)\n+\t\t\t{\n+\t\t\t\tthrow new WicketRuntimeException(\n+\t\t\t\t\t\"Radio component [\" +\n+\t\t\t\t\t\tgetPath() +\n+\t\t\t\t\t\t\"] cannot find its parent RadioGroup. All Radio components must be a child of or below in the hierarchy of a RadioGroup component.\");\n+\t\t\t}\n+\t\t}\n+\t\treturn group;\n+\t}\n \n \t/**\n \t * @see Component#onComponentTag(ComponentTag)\n@@ -127,19 +156,7 @@ protected void onComponentTag(final ComponentTag tag)\n \n \t\tfinal String value = getValue();\n \n-\t\tRadioGroup<?> group = this.group;\n-\t\tif (group == null)\n-\t\t{\n-\t\t\tgroup = findParent(RadioGroup.class);\n-\t\t\tif (group == null)\n-\t\t\t{\n-\t\t\t\tthrow new WicketRuntimeException(\n-\t\t\t\t\t\"Radio component [\" +\n-\t\t\t\t\t\tgetPath() +\n-\t\t\t\t\t\t\"] cannot find its parent RadioGroup. All Radio components must be a child of or below in the hierarchy of a RadioGroup component.\");\n-\t\t\t}\n-\t\t}\n-\n+\t\tRadioGroup<?> group = getGroup();\n \n \t\t// assign name and value\n \t\ttag.put(\"name\", group.getInputName());\ndiff --git a/wicket/src/main/java/org/apache/wicket/markup/html/form/RadioChoice.java b/wicket/src/main/java/org/apache/wicket/markup/html/form/RadioChoice.java\nindex 2b762e2cf3..cf1d86756e 100644\n--- a/wicket/src/main/java/org/apache/wicket/markup/html/form/RadioChoice.java\n+++ b/wicket/src/main/java/org/apache/wicket/markup/html/form/RadioChoice.java\n@@ -450,7 +450,7 @@ else if (displayValue != null)\n \t\t\t\tbuffer.append(getPrefix());\n \n \t\t\t\tString id = getChoiceRenderer().getIdValue(choice, index);\n-\t\t\t\tfinal String idAttr = getMarkupId() + \"_\" + id;\n+\t\t\t\tfinal String idAttr = getMarkupId() + \"-\" + id;\n \n \t\t\t\tboolean enabled = isEnabledInHierarchy() && !isDisabled(choice, index, selected);\n \n", 
  "project": "wicket", 
  "linesAdd": 64, 
  "jira_id": "1677", 
  "nb_skipped": 0, 
  "commit": "01a3dd66", 
  "nb_failure": 5, 
  "linesRem": 25
}