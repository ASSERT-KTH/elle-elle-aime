{
  "files": 3, 
  "nb_test": 2438, 
  "nb_error": 0, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "org.apache.jackrabbit.oak.plugins.document.JournalTest"
  ], 
  "patch": "diff --git a/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore.java b/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore.java\nindex b4aae75506..2c72ff48cc 100644\n--- a/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore.java\n+++ b/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore.java\n@@ -2084,9 +2084,9 @@ private void backgroundSplit() {\n     BackgroundWriteStats backgroundWrite() {\n         return unsavedLastRevisions.persist(this, new UnsavedModifications.Snapshot() {\n             @Override\n-            public void acquiring() {\n+            public void acquiring(Revision mostRecent) {\n                 if (store.create(JOURNAL,\n-                        singletonList(changes.asUpdateOp(getHeadRevision())))) {\n+                        singletonList(changes.asUpdateOp(mostRecent)))) {\n                     changes = JOURNAL.newDocument(getDocumentStore());\n                 }\n             }\ndiff --git a/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/document/LastRevRecoveryAgent.java b/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/document/LastRevRecoveryAgent.java\nindex 69e8fe7a6a..25f0390949 100644\n--- a/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/document/LastRevRecoveryAgent.java\n+++ b/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/document/LastRevRecoveryAgent.java\n@@ -235,7 +235,7 @@ public int recover(Iterator<NodeDocument> suspects,\n             unsaved.persist(nodeStore, new UnsavedModifications.Snapshot() {\n \n                 @Override\n-                public void acquiring() {\n+                public void acquiring(Revision mostRecent) {\n                     if (lastRootRev == null) {\n                         // this should never happen - when unsaved has no changes\n                         // that is reflected in the 'map' to be empty - in that\ndiff --git a/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/document/UnsavedModifications.java b/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/document/UnsavedModifications.java\nindex d5f6c1edd9..1d06fa73b4 100644\n--- a/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/document/UnsavedModifications.java\n+++ b/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/document/UnsavedModifications.java\n@@ -159,7 +159,7 @@ public BackgroundWriteStats persist(@Nonnull DocumentNodeStore store,\n         time = clock.getTime();\n         Map<String, Revision> pending;\n         try {\n-            snapshot.acquiring();\n+            snapshot.acquiring(getMostRecentRevision());\n             pending = Maps.newTreeMap(PathComparator.INSTANCE);\n             pending.putAll(map);\n         } finally {\n@@ -234,14 +234,26 @@ public String toString() {\n         return map.toString();\n     }\n \n+    private Revision getMostRecentRevision() {\n+        // use revision of root document\n+        Revision rev = map.get(\"/\");\n+        // otherwise find most recent\n+        if (rev == null) {\n+            for (Revision r : map.values()) {\n+                rev = Utils.max(rev, r);\n+            }\n+        }\n+        return rev;\n+    }\n+\n     public interface Snapshot {\n \n         Snapshot IGNORE = new Snapshot() {\n             @Override\n-            public void acquiring() {\n+            public void acquiring(Revision mostRecent) {\n             }\n         };\n \n-        void acquiring();\n+        void acquiring(Revision mostRecent);\n     }\n }\n", 
  "project": "jackrabbit-oak", 
  "linesAdd": 18, 
  "jira_id": "3433", 
  "nb_skipped": 1, 
  "commit": "b76b31f7", 
  "nb_failure": 1, 
  "linesRem": 6
}