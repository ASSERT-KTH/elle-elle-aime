{
  "files": 1, 
  "nb_test": 6, 
  "nb_error": 0, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "org.apache.jackrabbit.oak.commons.PathTest"
  ], 
  "patch": "diff --git a/oak-commons/src/main/java/org/apache/jackrabbit/oak/commons/PathUtils.java b/oak-commons/src/main/java/org/apache/jackrabbit/oak/commons/PathUtils.java\nindex 62018046c9..883f197b4b 100644\n--- a/oak-commons/src/main/java/org/apache/jackrabbit/oak/commons/PathUtils.java\n+++ b/oak-commons/src/main/java/org/apache/jackrabbit/oak/commons/PathUtils.java\n@@ -16,10 +16,11 @@\n  */\n package org.apache.jackrabbit.oak.commons;\n \n-import javax.annotation.Nonnull;\n import java.util.Iterator;\n import java.util.NoSuchElementException;\n \n+import javax.annotation.Nonnull;\n+\n /**\n  * Utility methods to parse a path.\n  * <p/>\n@@ -288,7 +289,12 @@ public static boolean isAncestor(String ancestor, String path) {\n         if (ancestor.isEmpty() || path.isEmpty()) {\n             return false;\n         }\n-        if (!denotesRoot(ancestor)) {\n+        if (denotesRoot(ancestor)) {\n+            if (denotesRoot(path)) {\n+                return false;\n+            }\n+        }\n+        else {\n             ancestor += \"/\";\n         }\n         return path.startsWith(ancestor);\n", 
  "project": "jackrabbit-oak", 
  "linesAdd": 8, 
  "jira_id": "296", 
  "nb_skipped": 0, 
  "commit": "5449bf39", 
  "nb_failure": 1, 
  "linesRem": 2
}