{
  "files": 2, 
  "nb_test": 14, 
  "nb_error": 0, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "org.apache.jackrabbit.oak.upgrade.RepositoryUpgradeTest"
  ], 
  "patch": "diff --git a/oak-upgrade/src/main/java/org/apache/jackrabbit/oak/upgrade/JackrabbitNodeState.java b/oak-upgrade/src/main/java/org/apache/jackrabbit/oak/upgrade/JackrabbitNodeState.java\nindex 3752b91f31..fded86c6ad 100644\n--- a/oak-upgrade/src/main/java/org/apache/jackrabbit/oak/upgrade/JackrabbitNodeState.java\n+++ b/oak-upgrade/src/main/java/org/apache/jackrabbit/oak/upgrade/JackrabbitNodeState.java\n@@ -332,13 +332,15 @@ private void fixFrozenUuid() {\n             }\n \n             if (!isReferenceable.apply(frozenPrimary, frozenMixins)) {\n+                String parentFrozenUuid = parent.getString(JCR_FROZENUUID);\n+                if (parentFrozenUuid != null) {\n                     frozenUuid = PropertyStates.createProperty(\n-                        JCR_FROZENUUID,\n-                        parent.getString(JCR_FROZENUUID) + \"/\" + name);\n+                            JCR_FROZENUUID, parentFrozenUuid + \"/\" + name);\n                     properties.put(JCR_FROZENUUID, frozenUuid);\n                 }\n             }\n         }\n+    }\n \n     private org.apache.jackrabbit.oak.api.PropertyState createProperty(\n             String name, int type, InternalValue value)\ndiff --git a/oak-upgrade/src/main/java/org/apache/jackrabbit/oak/upgrade/RepositoryUpgrade.java b/oak-upgrade/src/main/java/org/apache/jackrabbit/oak/upgrade/RepositoryUpgrade.java\nindex 5dff050ff4..ce8b0194d0 100644\n--- a/oak-upgrade/src/main/java/org/apache/jackrabbit/oak/upgrade/RepositoryUpgrade.java\n+++ b/oak-upgrade/src/main/java/org/apache/jackrabbit/oak/upgrade/RepositoryUpgrade.java\n@@ -238,7 +238,8 @@ public void copy(RepositoryInitializer initializer) throws RepositoryException {\n         logger.info(\n                 \"Copying repository content from {} to Oak\", config.getHomeDir());\n         try {\n-            NodeBuilder builder = target.getRoot().builder();\n+            NodeState base = target.getRoot();\n+            NodeBuilder builder = base.builder();\n \n             String workspace =\n                     source.getRepositoryConfig().getDefaultWorkspaceName();\n@@ -260,6 +261,11 @@ public void copy(RepositoryInitializer initializer) throws RepositoryException {\n             copyNodeTypes(builder, uriToPrefix.inverse());\n             copyPrivileges(builder);\n \n+            // Triggers compilation of type information, which we need for\n+            // the type predicates used by the bulk  copy operations below.\n+            new TypeEditorProvider(false).getRootEditor(\n+                    base, builder.getNodeState(), builder, null);\n+\n             NodeState root = builder.getNodeState();\n             copyVersionStore(builder, root, uriToPrefix, idxToPrefix);\n             copyWorkspace(builder, root, workspace, uriToPrefix, idxToPrefix);\n", 
  "project": "jackrabbit-oak", 
  "linesAdd": 11, 
  "jira_id": "1789", 
  "nb_skipped": 0, 
  "commit": "07646fba", 
  "nb_failure": 1, 
  "linesRem": 3
}