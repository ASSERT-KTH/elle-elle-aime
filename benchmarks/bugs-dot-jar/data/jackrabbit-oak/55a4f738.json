{
  "files": 2, 
  "nb_test": 649, 
  "nb_error": 2, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "org.apache.jackrabbit.oak.security.authorization.AccessControlManagerImplTest"
  ], 
  "patch": "diff --git a/oak-core/src/main/java/org/apache/jackrabbit/oak/security/authorization/AccessControlConfigurationImpl.java b/oak-core/src/main/java/org/apache/jackrabbit/oak/security/authorization/AccessControlConfigurationImpl.java\nindex aa7b8d8e21..753158070a 100644\n--- a/oak-core/src/main/java/org/apache/jackrabbit/oak/security/authorization/AccessControlConfigurationImpl.java\n+++ b/oak-core/src/main/java/org/apache/jackrabbit/oak/security/authorization/AccessControlConfigurationImpl.java\n@@ -70,7 +70,8 @@ public CommitHookProvider getSecurityHooks() {\n         return new CommitHookProvider() {\n             @Override\n             public CommitHook getCommitHook(String workspaceName) {\n-                return new CompositeHook(new PermissionHook(workspaceName), new VersionablePathHook(workspaceName));\n+                //FIXME return new CompositeHook(new PermissionHook(workspaceName), new VersionablePathHook(workspaceName));\n+                return new CompositeHook(new VersionablePathHook(workspaceName));\n             }\n         };\n     }\ndiff --git a/oak-core/src/main/java/org/apache/jackrabbit/oak/security/privilege/PrivilegeDefinitionStore.java b/oak-core/src/main/java/org/apache/jackrabbit/oak/security/privilege/PrivilegeDefinitionStore.java\nindex 6ae510c2ca..2fa44f7bc2 100644\n--- a/oak-core/src/main/java/org/apache/jackrabbit/oak/security/privilege/PrivilegeDefinitionStore.java\n+++ b/oak-core/src/main/java/org/apache/jackrabbit/oak/security/privilege/PrivilegeDefinitionStore.java\n@@ -38,6 +38,8 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+import static com.google.common.base.Preconditions.checkNotNull;\n+\n /**\n  * Reads and writes privilege definitions from and to the repository content\n  * without applying any validation.\n@@ -110,7 +112,7 @@ public PrivilegeBits getBits(@Nonnull String... privilegeNames) {\n         }\n         PrivilegeBits bits = PrivilegeBits.getInstance();\n         for (String privilegeName : privilegeNames) {\n-            Tree defTree = privilegesTree.getChild(privilegeName);\n+            Tree defTree = privilegesTree.getChild(checkNotNull(privilegeName));\n             if (defTree != null) {\n                 bits.add(PrivilegeBits.getInstance(defTree));\n             }\n", 
  "project": "jackrabbit-oak", 
  "linesAdd": 5, 
  "jira_id": "644", 
  "nb_skipped": 1, 
  "commit": "55a4f738", 
  "nb_failure": 0, 
  "linesRem": 2
}