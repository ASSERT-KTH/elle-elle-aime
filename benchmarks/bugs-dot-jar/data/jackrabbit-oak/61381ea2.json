{
  "files": 1, 
  "nb_test": 404, 
  "nb_error": 3, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "org.apache.jackrabbit.oak.plugins.index.property.PropertyIndexQueryTest", 
    "org.apache.jackrabbit.oak.query.index.TraversingIndexQueryTest", 
    "org.apache.jackrabbit.oak.plugins.index.old.QueryTest"
  ], 
  "patch": "diff --git a/oak-core/src/main/java/org/apache/jackrabbit/oak/query/SQL2Parser.java b/oak-core/src/main/java/org/apache/jackrabbit/oak/query/SQL2Parser.java\nindex a31fd0a714..4f70f1e5d8 100644\n--- a/oak-core/src/main/java/org/apache/jackrabbit/oak/query/SQL2Parser.java\n+++ b/oak-core/src/main/java/org/apache/jackrabbit/oak/query/SQL2Parser.java\n@@ -525,6 +525,23 @@ private PropertyValueImpl parsePropertyValue(String name) throws ParseException\n     private StaticOperandImpl parseStaticOperand() throws ParseException {\n         if (currentTokenType == PLUS) {\n             read();\n+            if (currentTokenType != VALUE) {\n+                throw getSyntaxError(\"number\");\n+            }\n+            int valueType = currentValue.getType().tag();\n+            switch (valueType) {\n+            case PropertyType.LONG:\n+                currentValue = PropertyValues.newLong(currentValue.getValue(Type.LONG));\n+                break;\n+            case PropertyType.DOUBLE:\n+                currentValue = PropertyValues.newDouble(currentValue.getValue(Type.DOUBLE));\n+                break;\n+            case PropertyType.DECIMAL:\n+                currentValue = PropertyValues.newDecimal(currentValue.getValue(Type.DECIMAL).negate());\n+                break;\n+            default:\n+                throw getSyntaxError(\"Illegal operation: + \" + currentValue);\n+            }\n         } else if (currentTokenType == MINUS) {\n             read();\n             if (currentTokenType != VALUE) {\n@@ -923,7 +940,10 @@ private void read() throws ParseException {\n             if (types[i] == CHAR_SPECIAL_2) {\n                 i++;\n             }\n-            // fall through\n+            currentToken = statement.substring(start, i);\n+            currentTokenType = KEYWORD;\n+            parseIndex = i;\n+            return;\n         case CHAR_SPECIAL_1:\n             currentToken = statement.substring(start, i);\n             switch (c) {\n", 
  "project": "jackrabbit-oak", 
  "linesAdd": 21, 
  "jira_id": "499", 
  "nb_skipped": 0, 
  "commit": "61381ea2", 
  "nb_failure": 0, 
  "linesRem": 1
}