{
  "files": 1, 
  "nb_test": 468, 
  "nb_error": 0, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "org.apache.jackrabbit.oak.plugins.index.lucene.IndexPlannerTest", 
    "org.apache.jackrabbit.oak.plugins.index.lucene.LucenePropertyIndexTest"
  ], 
  "patch": "diff --git a/oak-lucene/src/main/java/org/apache/jackrabbit/oak/plugins/index/lucene/IndexPlanner.java b/oak-lucene/src/main/java/org/apache/jackrabbit/oak/plugins/index/lucene/IndexPlanner.java\nindex 522aa66d4b..19ad3cf7b5 100644\n--- a/oak-lucene/src/main/java/org/apache/jackrabbit/oak/plugins/index/lucene/IndexPlanner.java\n+++ b/oak-lucene/src/main/java/org/apache/jackrabbit/oak/plugins/index/lucene/IndexPlanner.java\n@@ -315,7 +315,12 @@ private void visitTerm(String propertyName) {\n     }\n \n     private boolean canEvalPathRestrictions(IndexingRule rule) {\n-        if (filter.getPathRestriction() == Filter.PathRestriction.NO_RESTRICTION){\n+        //Opt out if one is looking for all children for '/' as its equivalent to\n+        //NO_RESTRICTION\n+        if (filter.getPathRestriction() == Filter.PathRestriction.NO_RESTRICTION\n+                || (filter.getPathRestriction() == Filter.PathRestriction.ALL_CHILDREN\n+                        && PathUtils.denotesRoot(filter.getPath()))\n+                ){\n             return false;\n         }\n         //If no other restrictions is provided and query is pure\n", 
  "project": "jackrabbit-oak", 
  "linesAdd": 6, 
  "jira_id": "3137", 
  "nb_skipped": 4, 
  "commit": "c65b07c3", 
  "nb_failure": 2, 
  "linesRem": 1
}