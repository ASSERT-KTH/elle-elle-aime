{
  "files": 1, 
  "nb_test": 2232, 
  "nb_error": 1, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "org.apache.jackrabbit.oak.plugins.segment.RecordIdMapTest"
  ], 
  "patch": "diff --git a/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/segment/RecordIdMap.java b/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/segment/RecordIdMap.java\nindex 0b6660cac4..fe62ffdc3c 100644\n--- a/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/segment/RecordIdMap.java\n+++ b/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/segment/RecordIdMap.java\n@@ -29,8 +29,11 @@\n  * A memory optimised map of {@code short} key to {@link RecordId} values.\n  */\n public class RecordIdMap {\n-    private short[] keys;\n-    private RecordId[] values;\n+    private static final short[] NO_KEYS = new short[0];\n+    private static final RecordId[] NO_VALUES = new RecordId[0];\n+\n+    private short[] keys = NO_KEYS;\n+    private RecordId[] values = NO_VALUES;\n \n     /**\n      * Associates {@code key} with {@code value} if not already present\n@@ -39,7 +42,7 @@\n      * @return  {@code true} if added, {@code false} if already present\n      */\n     public boolean put(short key, @Nonnull RecordId value) {\n-        if (keys == null) {\n+        if (keys.length == 0) {\n             keys = new short[1];\n             values = new RecordId[1];\n             keys[0] = key;\n@@ -90,7 +93,7 @@ public RecordId get(short key) {\n      * @return  {@code true} iff {@code key} is present.\n      */\n     public boolean containsKey(short key) {\n-        return keys != null && binarySearch(keys, key) >= 0;\n+        return binarySearch(keys, key) >= 0;\n     }\n \n     /**\n@@ -105,6 +108,7 @@ public int size() {\n      * the natural ordering of shorts.\n      * @param index\n      * @return the key at {@code index}\n+     * @throws ArrayIndexOutOfBoundsException if not {@code 0 <= index < size()}\n      */\n     public short getKey(int index) {\n         return keys[index];\n@@ -115,6 +119,7 @@ public short getKey(int index) {\n      * the natural ordering of shorts.\n      * @param index\n      * @return the value at {@code index}\n+     * @throws ArrayIndexOutOfBoundsException if not {@code 0 <= index < size()}\n      */\n     @Nonnull\n     public RecordId getRecordId(int index) {\n", 
  "project": "jackrabbit-oak", 
  "linesAdd": 9, 
  "jira_id": "3123", 
  "nb_skipped": 1, 
  "commit": "f3c9c818", 
  "nb_failure": 0, 
  "linesRem": 4
}