{
    "bug_id": 69,
    "classification": {
        "singleLine": false
    },
    "commit": "f63d745a",
    "failing_tests": [
        "org.apache.jackrabbit.oak.jcr.RepositoryTest"
    ],
    "files": 1,
    "jira_id": "510",
    "linesAdd": 5,
    "linesRem": 1,
    "nb_error": 1,
    "nb_failure": 0,
    "nb_skipped": 7,
    "nb_test": 702,
    "patch": "diff --git a/oak-jcr/src/main/java/org/apache/jackrabbit/oak/jcr/ItemImpl.java b/oak-jcr/src/main/java/org/apache/jackrabbit/oak/jcr/ItemImpl.java\nindex d59feb587f..ba16709b8f 100644\n--- a/oak-jcr/src/main/java/org/apache/jackrabbit/oak/jcr/ItemImpl.java\n+++ b/oak-jcr/src/main/java/org/apache/jackrabbit/oak/jcr/ItemImpl.java\n@@ -430,8 +430,12 @@ PropertyState createMultiState(String name, int type, Value[] values, PropertyDe\n         Value[] nonNullValues = compact(values);\n         int targetType = getType(definition, type);\n         if (nonNullValues.length == 0) {\n+            if (targetType == PropertyType.UNDEFINED) {\n+                // default to string when no other type hints are available\n+                targetType = PropertyType.STRING;\n+            }\n             return MemoryPropertyBuilder\n-                    .array(Type.fromTag(type, false), name)\n+                    .array(Type.fromTag(targetType, false), name)\n                     .getPropertyState();\n         } else if (targetType == type) {\n             return PropertyStates.createProperty(name, Arrays.asList(nonNullValues));\n",
    "project": "jackrabbit-oak",
    "buggy_compile_success": true,
    "buggy_test_success": false,
    "fixed_compile_success": true,
    "fixed_test_success": false
}