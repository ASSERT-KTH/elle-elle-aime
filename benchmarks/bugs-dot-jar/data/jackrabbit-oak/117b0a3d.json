{
  "files": 1, 
  "nb_test": 1963, 
  "nb_error": 4, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "org.apache.jackrabbit.oak.jcr.RepositoryTest"
  ], 
  "patch": "diff --git a/oak-jcr/src/main/java/org/apache/jackrabbit/oak/jcr/session/NodeImpl.java b/oak-jcr/src/main/java/org/apache/jackrabbit/oak/jcr/session/NodeImpl.java\nindex 2dbd284919..21a32d0671 100644\n--- a/oak-jcr/src/main/java/org/apache/jackrabbit/oak/jcr/session/NodeImpl.java\n+++ b/oak-jcr/src/main/java/org/apache/jackrabbit/oak/jcr/session/NodeImpl.java\n@@ -797,6 +797,7 @@ public PropertyIterator getWeakReferences(String name) throws RepositoryExceptio\n \n     @Override\n     public boolean hasNode(String relPath) throws RepositoryException {\n+        try {\n             final String oakPath = getOakPathOrThrow(relPath);\n             return perform(new NodeOperation<Boolean>(dlg) {\n                 @Override\n@@ -804,10 +805,14 @@ public Boolean perform() throws RepositoryException {\n                     return node.getChild(oakPath) != null;\n                 }\n             });\n+        } catch (PathNotFoundException e) {\n+            return false;\n+        }\n     }\n \n     @Override\n     public boolean hasProperty(String relPath) throws RepositoryException {\n+        try {\n             final String oakPath = getOakPathOrThrow(relPath);\n             return perform(new NodeOperation<Boolean>(dlg) {\n                 @Override\n@@ -815,6 +820,9 @@ public Boolean perform() throws RepositoryException {\n                     return node.getPropertyOrNull(oakPath) != null;\n                 }\n             });\n+        } catch (PathNotFoundException e) {\n+            return false;\n+        }\n     }\n \n     @Override\n", 
  "project": "jackrabbit-oak", 
  "linesAdd": 8, 
  "jira_id": "1227", 
  "nb_skipped": 5, 
  "commit": "117b0a3d", 
  "nb_failure": 0, 
  "linesRem": 0
}