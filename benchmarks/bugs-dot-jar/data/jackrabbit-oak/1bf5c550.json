{
  "files": 4, 
  "nb_test": 72, 
  "nb_error": 1, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "org.apache.jackrabbit.mk.MicroKernelImplTest"
  ], 
  "patch": "diff --git a/oak-mk/src/main/java/org/apache/jackrabbit/mk/persistence/H2Persistence.java b/oak-mk/src/main/java/org/apache/jackrabbit/mk/persistence/H2Persistence.java\nindex d6cb3b5fcc..76030dbd23 100644\n--- a/oak-mk/src/main/java/org/apache/jackrabbit/mk/persistence/H2Persistence.java\n+++ b/oak-mk/src/main/java/org/apache/jackrabbit/mk/persistence/H2Persistence.java\n@@ -70,6 +70,7 @@ public void initialize(File homeDir) throws Exception {\n         try {\n             Statement stmt = con.createStatement();\n             stmt.execute(\"create table if not exists REVS(ID binary primary key, DATA binary, TIME timestamp)\");\n+            stmt.execute(\"create table if not exists NODES(ID binary primary key, DATA binary, TIME timestamp)\");\n             stmt.execute(\"create table if not exists HEAD(ID binary) as select null\");\n             stmt.execute(\"create sequence if not exists DATASTORE_ID\");\n /*\n@@ -86,7 +87,16 @@ public void close() {\n         cp.dispose();\n     }\n \n-    public Id readHead() throws Exception {\n+    public Id[] readIds() throws Exception {\n+        Id lastCommitId = null;\n+        Id headId = readHead();\n+        if (headId != null) {\n+            lastCommitId = readLastCommitId();\n+        }\n+        return new Id[] { headId, lastCommitId };\n+    }\n+    \n+    private Id readHead() throws Exception {\n         Connection con = cp.getConnection();\n         try {\n             PreparedStatement stmt = con.prepareStatement(\"select * from HEAD\");\n@@ -102,6 +112,22 @@ public Id readHead() throws Exception {\n         }\n     }\n \n+    private Id readLastCommitId() throws Exception {\n+        Connection con = cp.getConnection();\n+        try {\n+            PreparedStatement stmt = con.prepareStatement(\"select MAX(ID) from REVS\");\n+            ResultSet rs = stmt.executeQuery();\n+            byte[] rawId = null;\n+            if (rs.next()) {\n+                rawId = rs.getBytes(1);\n+            }\n+            stmt.close();\n+            return rawId == null ? null : new Id(rawId); \n+        } finally {\n+            con.close();\n+        }\n+    }\n+\n     public void writeHead(Id id) throws Exception {\n         Connection con = cp.getConnection();\n         try {\n@@ -118,7 +144,7 @@ public void readNode(StoredNode node) throws NotFoundException, Exception {\n         Id id = node.getId();\n         Connection con = cp.getConnection();\n         try {\n-            PreparedStatement stmt = con.prepareStatement(\"select DATA from REVS where ID = ?\");\n+            PreparedStatement stmt = con.prepareStatement(\"select DATA from NODES where ID = ?\");\n             try {\n                 stmt.setBytes(1, id.getBytes());\n                 ResultSet rs = stmt.executeQuery();\n@@ -148,7 +174,7 @@ public Id writeNode(Node node) throws Exception {\n         try {\n             PreparedStatement stmt = con\n                     .prepareStatement(\n-                            \"insert into REVS (ID, DATA, TIME) select ?, ?, ? where not exists (select 1 from REVS where ID = ?)\");\n+                            \"insert into NODES (ID, DATA, TIME) select ?, ?, ? where not exists (select 1 from NODES where ID = ?)\");\n             try {\n                 stmt.setBytes(1, rawId);\n                 stmt.setBytes(2, bytes);\n@@ -212,7 +238,7 @@ public void writeCommit(Id id, Commit commit) throws Exception {\n     public ChildNodeEntriesMap readCNEMap(Id id) throws NotFoundException, Exception {\n         Connection con = cp.getConnection();\n         try {\n-            PreparedStatement stmt = con.prepareStatement(\"select DATA from REVS where ID = ?\");\n+            PreparedStatement stmt = con.prepareStatement(\"select DATA from NODES where ID = ?\");\n             try {\n                 stmt.setBytes(1, id.getBytes());\n                 ResultSet rs = stmt.executeQuery();\n@@ -241,7 +267,7 @@ public Id writeCNEMap(ChildNodeEntries map) throws Exception {\n         try {\n             PreparedStatement stmt = con\n                     .prepareStatement(\n-                            \"insert into REVS (ID, DATA, TIME) select ?, ?, ? where not exists (select 1 from REVS where ID = ?)\");\n+                            \"insert into NODES (ID, DATA, TIME) select ?, ?, ? where not exists (select 1 from NODES where ID = ?)\");\n             try {\n                 stmt.setBytes(1, rawId);\n                 stmt.setBytes(2, bytes);\n@@ -264,7 +290,7 @@ public void start() {\n     \n     @Override\n     public boolean markCommit(Id id) throws Exception {\n-        return touch(id, gcStart);\n+        return touch(\"REVS\", id, gcStart);\n     }\n \n     @Override\n@@ -292,22 +318,23 @@ public void replaceCommit(Id id, Commit commit) throws Exception {\n     \n     @Override\n     public boolean markNode(Id id) throws Exception {\n-        return touch(id, gcStart);\n+        return touch(\"NODES\", id, gcStart);\n     }\n \n     @Override\n     public boolean markCNEMap(Id id) throws Exception {\n-        return touch(id, gcStart);\n+        return touch(\"NODES\", id, gcStart);\n     }\n     \n-    private boolean touch(Id id, long timeMillis) throws Exception {\n+    private boolean touch(String table, Id id, long timeMillis) throws Exception {\n         Timestamp ts = new Timestamp(timeMillis);\n \n         Connection con = cp.getConnection();\n         try {\n-            PreparedStatement stmt = con\n-                    .prepareStatement(\n-                            \"update REVS set TIME = ? where ID = ? and TIME < ?\");\n+            PreparedStatement stmt = con.prepareStatement(\n+                    String.format(\"update %s set TIME = ? where ID = ? and TIME < ?\",\n+                            table));\n+                                    \n             try {\n                 stmt.setTimestamp(1, ts);\n                 stmt.setBytes(2, id.getBytes());\n@@ -324,20 +351,29 @@ private boolean touch(Id id, long timeMillis) throws Exception {\n     @Override\n     public int sweep() throws Exception {\n         Timestamp ts = new Timestamp(gcStart);\n+        int swept = 0;\n \n         Connection con = cp.getConnection();\n         try {\n-            PreparedStatement stmt = con\n-                    .prepareStatement(\n-                            \"delete REVS where TIME < ?\");\n+            PreparedStatement stmt = con.prepareStatement(\"delete REVS where TIME < ?\");\n+            try {\n+                stmt.setTimestamp(1, ts);\n+                swept += stmt.executeUpdate();\n+            } finally {\n+                stmt.close();\n+            }\n+\n+            stmt = con.prepareStatement(\"delete NODES where TIME < ?\");\n+            \n             try {\n                 stmt.setTimestamp(1, ts);\n-                return stmt.executeUpdate();\n+                swept += stmt.executeUpdate();\n             } finally {\n                 stmt.close();\n             }\n         } finally {\n             con.close();\n         }\n+        return swept;\n      }\n }\n\\ No newline at end of file\ndiff --git a/oak-mk/src/main/java/org/apache/jackrabbit/mk/persistence/InMemPersistence.java b/oak-mk/src/main/java/org/apache/jackrabbit/mk/persistence/InMemPersistence.java\nindex bba95fc1e0..f8ddafe006 100644\n--- a/oak-mk/src/main/java/org/apache/jackrabbit/mk/persistence/InMemPersistence.java\n+++ b/oak-mk/src/main/java/org/apache/jackrabbit/mk/persistence/InMemPersistence.java\n@@ -42,7 +42,6 @@\n     private final Map<Id, byte[]> objects = Collections.synchronizedMap(new HashMap<Id, byte[]>());\n     private final Map<Id, byte[]> marked = Collections.synchronizedMap(new HashMap<Id, byte[]>());\n \n-    private Id head;\n     private long gcStart;\n \n     // TODO: make this configurable\n@@ -53,12 +52,13 @@ public void initialize(File homeDir) {\n         // nothing to initialize\n     }\n     \n-    public Id readHead() {\n-        return head;\n+    @Override\n+    public Id[] readIds() throws Exception {\n+        return new Id[2];\n     }\n \n     public void writeHead(Id id) {\n-        head = id;\n+        \n     }\n \n     public void readNode(StoredNode node) throws NotFoundException, Exception {\ndiff --git a/oak-mk/src/main/java/org/apache/jackrabbit/mk/persistence/Persistence.java b/oak-mk/src/main/java/org/apache/jackrabbit/mk/persistence/Persistence.java\nindex dbb425344d..45ca883800 100644\n--- a/oak-mk/src/main/java/org/apache/jackrabbit/mk/persistence/Persistence.java\n+++ b/oak-mk/src/main/java/org/apache/jackrabbit/mk/persistence/Persistence.java\n@@ -36,7 +36,19 @@\n \n     public void initialize(File homeDir) throws Exception;\n     \n-    Id readHead() throws Exception;\n+    /**\n+     * Return an array of ids, where the first is the head id (as stored\n+     * with {@link #writeHead(Id)}) and the second is the highest commit\n+     * id found or {@code null}.\n+     * <p/>\n+     * This method is not guaranteed to deliver \"live\" results, after\n+     * something is written to the storage, so it should better be used\n+     * once after initialization. \n+     * \n+     * @return array of ids\n+     * @throws Exception if an error occurs\n+     */\n+    Id[] readIds() throws Exception;\n \n     void writeHead(Id id) throws Exception;\n \ndiff --git a/oak-mk/src/main/java/org/apache/jackrabbit/mk/store/DefaultRevisionStore.java b/oak-mk/src/main/java/org/apache/jackrabbit/mk/store/DefaultRevisionStore.java\nindex 1d71ff8236..42b50a52c8 100644\n--- a/oak-mk/src/main/java/org/apache/jackrabbit/mk/store/DefaultRevisionStore.java\n+++ b/oak-mk/src/main/java/org/apache/jackrabbit/mk/store/DefaultRevisionStore.java\n@@ -134,7 +134,8 @@ public void initialize() throws Exception {\n         cache = Collections.synchronizedMap(SimpleLRUCache.<Id, Object> newInstance(initialCacheSize));\n \n         // make sure we've got a HEAD commit\n-        head = pm.readHead();\n+        Id[] ids = pm.readIds();\n+        head = ids[0];\n         if (head == null || head.getBytes().length == 0) {\n             // assume virgin repository\n             byte[] rawHead = Id.fromLong(commitCounter.incrementAndGet())\n@@ -148,7 +149,11 @@ public void initialize() throws Exception {\n             pm.writeCommit(head, initialCommit);\n             pm.writeHead(head);\n         } else {\n-            commitCounter.set(Long.parseLong(head.toString(), 16));\n+            Id lastCommitId = head;\n+            if (ids[1] != null && ids[1].compareTo(lastCommitId) > 0) {\n+                lastCommitId = ids[1];\n+            }\n+            commitCounter.set(Long.parseLong(lastCommitId.toString(), 16));\n         }\n \n         if (gcpm != null) {\n", 
  "project": "jackrabbit-oak", 
  "linesAdd": 76, 
  "jira_id": "276", 
  "nb_skipped": 1, 
  "commit": "1bf5c550", 
  "nb_failure": 0, 
  "linesRem": 23
}