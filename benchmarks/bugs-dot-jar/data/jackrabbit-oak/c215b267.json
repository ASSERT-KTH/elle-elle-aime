{
  "files": 1, 
  "nb_test": 1819, 
  "nb_error": 0, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "org.apache.jackrabbit.oak.plugins.segment.CompactorTest"
  ], 
  "patch": "diff --git a/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/segment/Compactor.java b/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/segment/Compactor.java\nindex 14278ca97e..18cb0687a1 100644\n--- a/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/segment/Compactor.java\n+++ b/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/segment/Compactor.java\n@@ -20,7 +20,6 @@\n import static com.google.common.collect.Maps.newHashMap;\n import static org.apache.jackrabbit.oak.api.Type.BINARIES;\n import static org.apache.jackrabbit.oak.api.Type.BINARY;\n-import static org.apache.jackrabbit.oak.plugins.memory.EmptyNodeState.EMPTY_NODE;\n \n import java.io.IOException;\n import java.io.InputStream;\n@@ -62,8 +61,6 @@\n \n     private final SegmentWriter writer;\n \n-    private final SegmentNodeBuilder builder;\n-\n     private CompactionMap map = new CompactionMap(100000);\n \n     /**\n@@ -75,11 +72,11 @@\n \n     public Compactor(SegmentWriter writer) {\n         this.writer = writer;\n-        this.builder =\n-                new SegmentNodeBuilder(writer.writeNode(EMPTY_NODE), writer);\n     }\n \n     public SegmentNodeState compact(NodeState before, NodeState after) {\n+        SegmentNodeBuilder builder = new SegmentNodeBuilder(\n+                writer.writeNode(before), writer);\n         after.compareAgainstBaseState(before, new CompactDiff(builder));\n         return builder.getNodeState();\n     }\n", 
  "project": "jackrabbit-oak", 
  "linesAdd": 2, 
  "jira_id": "1932", 
  "nb_skipped": 9, 
  "commit": "c215b267", 
  "nb_failure": 1, 
  "linesRem": 5
}