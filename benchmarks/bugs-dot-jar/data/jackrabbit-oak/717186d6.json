{
  "files": 1, 
  "nb_test": 79, 
  "nb_error": 0, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "org.apache.jackrabbit.mk.MicroKernelImplTest"
  ], 
  "patch": "diff --git a/oak-mk/src/main/java/org/apache/jackrabbit/mk/model/tree/DiffBuilder.java b/oak-mk/src/main/java/org/apache/jackrabbit/mk/model/tree/DiffBuilder.java\nindex f023fb37a2..d450b4f93e 100644\n--- a/oak-mk/src/main/java/org/apache/jackrabbit/mk/model/tree/DiffBuilder.java\n+++ b/oak-mk/src/main/java/org/apache/jackrabbit/mk/model/tree/DiffBuilder.java\n@@ -60,7 +60,7 @@ public String build() throws Exception {\n         if (before == null) {\n             if (after != null) {\n                 buff.tag('+').key(path).object();\n-                toJson(buff, after);\n+                toJson(buff, after, depth);\n                 return buff.endObject().newline().toString();\n             } else {\n                 // path doesn't exist in the specified revisions\n@@ -117,7 +117,7 @@ public void childNodeAdded(String name, NodeState after) {\n                     addedNodes.put(after, p);\n                     buff.tag('+').\n                             key(p).object();\n-                    toJson(buff, after);\n+                    toJson(buff, after, depth);\n                     buff.endObject().newline();\n                 }\n             }\n@@ -215,7 +215,7 @@ public void childNodeAdded(String name, NodeState after) {\n                     if (p.startsWith(pathFilter)) {\n                         buff.tag('+').\n                                 key(p).object();\n-                        toJson(buff, after);\n+                        toJson(buff, after, depth);\n                         buff.endObject().newline();\n                     }\n                 }\n@@ -267,14 +267,16 @@ public void childNodeChanged(String name, NodeState before, NodeState after) {\n         return buff.toString();\n     }\n \n-    private void toJson(JsopBuilder builder, NodeState node) {\n+    private void toJson(JsopBuilder builder, NodeState node, int depth) {\n         for (PropertyState property : node.getProperties()) {\n             builder.key(property.getName()).encodedValue(property.getEncodedValue());\n         }\n+        if (depth != 0) {\n             for (ChildNode entry : node.getChildNodeEntries(0, -1)) {\n                 builder.key(entry.getName()).object();\n-            toJson(builder, entry.getNode());\n+                toJson(builder, entry.getNode(), depth < 0 ? depth : depth - 1);\n                 builder.endObject();\n             }\n         }\n     }\n+}\n", 
  "project": "jackrabbit-oak", 
  "linesAdd": 7, 
  "jira_id": "548", 
  "nb_skipped": 2, 
  "commit": "717186d6", 
  "nb_failure": 1, 
  "linesRem": 5
}