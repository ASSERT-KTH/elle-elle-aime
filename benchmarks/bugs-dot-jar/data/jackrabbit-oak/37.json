{
    "bug_id": 37,
    "classification": {
        "singleLine": false
    },
    "commit": "df9e6913",
    "failing_tests": [
        "org.apache.jackrabbit.oak.jcr.OrderableNodesTest"
    ],
    "files": 1,
    "jira_id": "612",
    "linesAdd": 16,
    "linesRem": 0,
    "nb_error": 0,
    "nb_failure": 4,
    "nb_skipped": 1,
    "nb_test": 395,
    "patch": "diff --git a/oak-jcr/src/main/java/org/apache/jackrabbit/oak/jcr/NodeImpl.java b/oak-jcr/src/main/java/org/apache/jackrabbit/oak/jcr/NodeImpl.java\nindex 79e0eb30a1..c84f6251e0 100644\n--- a/oak-jcr/src/main/java/org/apache/jackrabbit/oak/jcr/NodeImpl.java\n+++ b/oak-jcr/src/main/java/org/apache/jackrabbit/oak/jcr/NodeImpl.java\n@@ -274,6 +274,10 @@ public Node perform() throws RepositoryException {\n                     throw new ItemExistsException();\n                 }\n \n+                if (getPrimaryNodeType().hasOrderableChildNodes()) {\n+                    dlg.orderBefore(oakName, null);\n+                }\n+\n                 NodeImpl<?> childNode = new NodeImpl<NodeDelegate>(added);\n                 childNode.internalSetPrimaryType(ntName);\n                 childNode.autoCreateItems();\n@@ -1431,6 +1435,18 @@ public Void perform() throws RepositoryException {\n                 String jcrPrimaryType = sessionDelegate.getOakPath(Property.JCR_PRIMARY_TYPE);\n                 Value value = sessionDelegate.getValueFactory().createValue(nodeTypeName, PropertyType.NAME);\n                 dlg.setProperty(jcrPrimaryType, value);\n+\n+                if (nt.hasOrderableChildNodes()) {\n+                    // freeze child order with a call to orderBefore()\n+                    // only makes sense with a least two child nodes\n+                    Iterator<NodeDelegate> children = dlg.getChildren();\n+                    NodeDelegate child1 = children.hasNext() ? children.next() : null;\n+                    NodeDelegate child2 = children.hasNext() ? children.next() : null;\n+                    if (child1 != null && child2 != null) {\n+                        dlg.orderBefore(child1.getName(), child2.getName());\n+                    }\n+                }\n+\n                 return null;\n             }\n         });\n",
    "project": "jackrabbit-oak",
    "buggy_compile_success": true,
    "buggy_test_success": false,
    "fixed_compile_success": true,
    "fixed_test_success": false
}