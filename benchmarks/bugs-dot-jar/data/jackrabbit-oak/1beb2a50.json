{
  "files": 1, 
  "nb_test": 12, 
  "nb_error": 0, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "org.apache.jackrabbit.oak.upgrade.RepositoryGroupMemberSplitUpgradeTest", 
    "org.apache.jackrabbit.oak.upgrade.RepositoryGroupMemberUpgradeTest", 
    "org.apache.jackrabbit.oak.upgrade.RepositoryUpgradeTest"
  ], 
  "patch": "diff --git a/oak-upgrade/src/main/java/org/apache/jackrabbit/oak/upgrade/RepositoryUpgrade.java b/oak-upgrade/src/main/java/org/apache/jackrabbit/oak/upgrade/RepositoryUpgrade.java\nindex 2734f3bf9f..d29b8f5aeb 100644\n--- a/oak-upgrade/src/main/java/org/apache/jackrabbit/oak/upgrade/RepositoryUpgrade.java\n+++ b/oak-upgrade/src/main/java/org/apache/jackrabbit/oak/upgrade/RepositoryUpgrade.java\n@@ -22,6 +22,7 @@\n import java.util.List;\n import java.util.Map;\n import java.util.Properties;\n+import java.util.Set;\n \n import javax.jcr.NamespaceException;\n import javax.jcr.NamespaceRegistry;\n@@ -38,8 +39,10 @@\n import org.apache.jackrabbit.oak.api.PropertyState;\n import org.apache.jackrabbit.oak.api.Type;\n import org.apache.jackrabbit.oak.plugins.index.reference.ReferenceEditorProvider;\n+import org.apache.jackrabbit.oak.plugins.name.NamespaceConstants;\n import org.apache.jackrabbit.oak.plugins.name.Namespaces;\n import org.apache.jackrabbit.oak.plugins.nodetype.RegistrationEditorProvider;\n+import org.apache.jackrabbit.oak.plugins.nodetype.write.InitialContent;\n import org.apache.jackrabbit.oak.spi.commit.CommitHook;\n import org.apache.jackrabbit.oak.spi.commit.CompositeHook;\n import org.apache.jackrabbit.oak.spi.commit.EditorHook;\n@@ -58,6 +61,8 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+import com.google.common.collect.ImmutableSet;\n+\n import static com.google.common.base.Preconditions.checkState;\n import static com.google.common.collect.Lists.newArrayListWithCapacity;\n import static com.google.common.collect.Maps.newHashMap;\n@@ -118,6 +123,85 @@\n      */\n     private final NodeStore target;\n \n+    /**\n+     * the set of oak built-in nodetypes\n+     * todo: load from file or from repo\n+     */\n+    private static final Set<String> BUILT_IN_NODE_TYPES = ImmutableSet.of(\n+            \"mix:created\",\n+            \"mix:etag\",\n+            \"mix:language\",\n+            \"mix:lastModified\",\n+            \"mix:lifecycle\",\n+            \"mix:lockable\",\n+            \"mix:mimeType\",\n+            \"mix:referenceable\",\n+            \"mix:shareable\",\n+            \"mix:simpleVersionable\",\n+            \"mix:title\",\n+            \"mix:versionable\",\n+            \"nt:activity\",\n+            \"nt:address\",\n+            \"nt:base\",\n+            \"nt:childNodeDefinition\",\n+            \"nt:configuration\",\n+            \"nt:file\",\n+            \"nt:folder\",\n+            \"nt:frozenNode\",\n+            \"nt:hierarchyNode\",\n+            \"nt:linkedFile\",\n+            \"nt:nodeType\",\n+            \"nt:propertyDefinition\",\n+            \"nt:query\",\n+            \"nt:resource\",\n+            \"nt:unstructured\",\n+            \"nt:version\",\n+            \"nt:versionHistory\",\n+            \"nt:versionLabels\",\n+            \"nt:versionedChild\",\n+            \"oak:childNodeDefinition\",\n+            \"oak:childNodeDefinitions\",\n+            \"oak:namedChildNodeDefinitions\",\n+            \"oak:namedPropertyDefinitions\",\n+            \"oak:nodeType\",\n+            \"oak:propertyDefinition\",\n+            \"oak:propertyDefinitions\",\n+            \"oak:queryIndexDefinition\",\n+            \"oak:unstructured\",\n+            \"rep:ACE\",\n+            \"rep:ACL\",\n+            \"rep:AccessControl\",\n+            \"rep:AccessControllable\",\n+            \"rep:Activities\",\n+            \"rep:Authorizable\",\n+            \"rep:AuthorizableFolder\",\n+            \"rep:Configurations\",\n+            \"rep:DenyACE\",\n+            \"rep:GrantACE\",\n+            \"rep:Group\",\n+            \"rep:Impersonatable\",\n+            \"rep:MemberReferences\",\n+            \"rep:MemberReferencesList\",\n+            \"rep:Members\",\n+            \"rep:MergeConflict\",\n+            \"rep:PermissionStore\",\n+            \"rep:Permissions\",\n+            \"rep:Policy\",\n+            \"rep:PrincipalAccessControl\",\n+            \"rep:Privilege\",\n+            \"rep:Privileges\",\n+            \"rep:RepoAccessControllable\",\n+            \"rep:Restrictions\",\n+            \"rep:RetentionManageable\",\n+            \"rep:Token\",\n+            \"rep:User\",\n+            \"rep:VersionReference\",\n+            \"rep:nodeTypes\",\n+            \"rep:root\",\n+            \"rep:system\",\n+            \"rep:versionStorage\"\n+    );\n+\n     /**\n      * Copies the contents of the repository in the given source directory\n      * to the given target node store.\n@@ -183,6 +267,9 @@ public void copy() throws RepositoryException {\n         try {\n             NodeBuilder builder = target.getRoot().builder();\n \n+            // init target repository first\n+            new InitialContent().initialize(builder);\n+\n             Map<Integer, String> idxToPrefix = copyNamespaces(builder);\n             copyNodeTypes(builder);\n             copyVersionStore(builder, idxToPrefix);\n@@ -223,7 +310,7 @@ private String getOakName(Name name) throws NamespaceException {\n         Map<Integer, String> idxToPrefix = newHashMap();\n \n         NodeBuilder system = root.child(JCR_SYSTEM);\n-        NodeBuilder namespaces = Namespaces.createStandardMappings(system);\n+        NodeBuilder namespaces = system.child(NamespaceConstants.REP_NAMESPACES);\n \n         Properties registry = loadProperties(\"/namespaces/ns_reg.properties\");\n         Properties indexes  = loadProperties(\"/namespaces/ns_idx.properties\");\n@@ -292,8 +379,14 @@ private void copyNodeTypes(NodeBuilder root) throws RepositoryException {\n \n         logger.info(\"Copying registered node types\");\n         for (Name name : sourceRegistry.getRegisteredNodeTypes()) {\n+            // skip built-in nodetypes (OAK-1235)\n+            String oakName = getOakName(name);\n+            if (BUILT_IN_NODE_TYPES.contains(oakName)) {\n+                logger.info(\"skipping built-on nodetype: {}\", name);\n+                continue;\n+            }\n             QNodeTypeDefinition def = sourceRegistry.getNodeTypeDef(name);\n-            NodeBuilder type = types.child(getOakName(name));\n+            NodeBuilder type = types.child(oakName);\n             copyNodeType(def, type);\n         }\n     }\n", 
  "project": "jackrabbit-oak", 
  "linesAdd": 95, 
  "jira_id": "1235", 
  "nb_skipped": 1, 
  "commit": "1beb2a50", 
  "nb_failure": 4, 
  "linesRem": 2
}