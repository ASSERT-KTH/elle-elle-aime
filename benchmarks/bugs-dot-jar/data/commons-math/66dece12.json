{
  "files": 3, 
  "nb_test": 4106, 
  "nb_error": 0, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "org.apache.commons.math3.distribution.UniformRealDistributionTest", 
    "org.apache.commons.math3.distribution.FDistributionTest"
  ], 
  "patch": "diff --git a/src/main/java/org/apache/commons/math3/distribution/FDistribution.java b/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\nindex 8b0993c4d..e301e2ef5 100644\n--- a/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\n+++ b/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\n@@ -272,7 +272,7 @@ public double getSupportUpperBound() {\n \n     /** {@inheritDoc} */\n     public boolean isSupportLowerBoundInclusive() {\n-        return true;\n+        return false;\n     }\n \n     /** {@inheritDoc} */\ndiff --git a/src/main/java/org/apache/commons/math3/distribution/RealDistribution.java b/src/main/java/org/apache/commons/math3/distribution/RealDistribution.java\nindex f09c5acbe..90dc8fdeb 100644\n--- a/src/main/java/org/apache/commons/math3/distribution/RealDistribution.java\n+++ b/src/main/java/org/apache/commons/math3/distribution/RealDistribution.java\n@@ -137,18 +137,26 @@\n     double getSupportUpperBound();\n \n     /**\n-     * Use this method to get information about whether the lower bound\n-     * of the support is inclusive or not.\n+     * Whether or not the lower bound of support is in the domain of the density\n+     * function.  Returns true iff {@code getSupporLowerBound()} is finite and\n+     * {@code density(getSupportLowerBound())} returns a non-NaN, non-infinite\n+     * value.\n      *\n-     * @return whether the lower bound of the support is inclusive or not\n+     * @return true if the lower bound of support is finite and the density \n+     * function returns a non-NaN, non-infinite value there\n+     * @deprecated to be removed in 4.0\n      */\n     boolean isSupportLowerBoundInclusive();\n \n     /**\n-     * Use this method to get information about whether the upper bound\n-     * of the support is inclusive or not.\n+     * Whether or not the upper bound of support is in the domain of the density\n+     * function.  Returns true iff {@code getSupportUpperBound()} is finite and\n+     * {@code density(getSupportUpperBound())} returns a non-NaN, non-infinite\n+     * value.\n      *\n-     * @return whether the upper bound of the support is inclusive or not\n+     * @return true if the upper bound of support is finite and the density \n+     * function returns a non-NaN, non-infinite value there\n+     * @deprecated to be removed in 4.0\n      */\n     boolean isSupportUpperBoundInclusive();\n \ndiff --git a/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java b/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java\nindex 5d32f6ebf..0d279de1f 100644\n--- a/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java\n+++ b/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java\n@@ -181,7 +181,7 @@ public boolean isSupportLowerBoundInclusive() {\n \n     /** {@inheritDoc} */\n     public boolean isSupportUpperBoundInclusive() {\n-        return false;\n+        return true;\n     }\n \n     /**\n", 
  "project": "commons-math", 
  "linesAdd": 16, 
  "jira_id": "859", 
  "nb_skipped": 4, 
  "commit": "66dece12", 
  "nb_failure": 2, 
  "linesRem": 8
}