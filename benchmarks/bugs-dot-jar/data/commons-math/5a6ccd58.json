{
  "files": 1, 
  "nb_test": 5962, 
  "nb_error": 0, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "org.apache.commons.math3.optim.univariate.BrentOptimizerTest"
  ], 
  "patch": "diff --git a/src/main/java/org/apache/commons/math3/optim/univariate/BrentOptimizer.java b/src/main/java/org/apache/commons/math3/optim/univariate/BrentOptimizer.java\nindex a5fca86f3..b788c2c78 100644\n--- a/src/main/java/org/apache/commons/math3/optim/univariate/BrentOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optim/univariate/BrentOptimizer.java\n@@ -150,7 +150,6 @@ protected UnivariatePointValuePair doOptimize() {\n         // Best point encountered so far (which is the initial guess).\n         UnivariatePointValuePair best = current;\n \n-        int iter = 0;\n         while (true) {\n             final double m = 0.5 * (a + b);\n             final double tol1 = relativeThreshold * FastMath.abs(x) + absoluteThreshold;\n@@ -238,7 +237,7 @@ protected UnivariatePointValuePair doOptimize() {\n                                  isMinim),\n                             isMinim);\n \n-                if (checker != null && checker.converged(iter, previous, current)) {\n+                if (checker != null && checker.converged(getIterations(), previous, current)) {\n                     return best;\n                 }\n \n@@ -281,7 +280,8 @@ protected UnivariatePointValuePair doOptimize() {\n                                  isMinim),\n                             isMinim);\n             }\n-            ++iter;\n+\n+            incrementIterationCount();\n         }\n     }\n \n", 
  "project": "commons-math", 
  "linesAdd": 3, 
  "jira_id": "1121", 
  "nb_skipped": 3, 
  "commit": "5a6ccd58", 
  "nb_failure": 1, 
  "linesRem": 3
}