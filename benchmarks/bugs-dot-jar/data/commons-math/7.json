{
    "bug_id": 7,
    "classification": {
        "singleLine": false
    },
    "commit": "b12610d3",
    "failing_tests": [
        "org.apache.commons.math3.stat.correlation.KendallsCorrelationTest"
    ],
    "files": 1,
    "jira_id": "1068",
    "linesAdd": 4,
    "linesRem": 3,
    "nb_error": 0,
    "nb_failure": 1,
    "nb_skipped": 5,
    "nb_test": 5477,
    "patch": "diff --git a/src/main/java/org/apache/commons/math3/stat/correlation/KendallsCorrelation.java b/src/main/java/org/apache/commons/math3/stat/correlation/KendallsCorrelation.java\nindex 1e4495ce2..81fb39fb2 100644\n--- a/src/main/java/org/apache/commons/math3/stat/correlation/KendallsCorrelation.java\n+++ b/src/main/java/org/apache/commons/math3/stat/correlation/KendallsCorrelation.java\n@@ -160,7 +160,7 @@ public double correlation(final double[] xArray, final double[] yArray)\n         }\n \n         final int n = xArray.length;\n-        final int numPairs = n * (n - 1) / 2;\n+        final long numPairs = n * (n - 1l) / 2l;\n \n         @SuppressWarnings(\"unchecked\")\n         Pair<Double, Double>[] pairs = new Pair[n];\n@@ -254,7 +254,8 @@ public int compare(Pair<Double, Double> pair1, Pair<Double, Double> pair2) {\n         }\n         tiedYPairs += consecutiveYTies * (consecutiveYTies - 1) / 2;\n \n-        int concordantMinusDiscordant = numPairs - tiedXPairs - tiedYPairs + tiedXYPairs - 2 * swaps;\n-        return concordantMinusDiscordant / FastMath.sqrt((numPairs - tiedXPairs) * (numPairs - tiedYPairs));\n+        final long concordantMinusDiscordant = numPairs - tiedXPairs - tiedYPairs + tiedXYPairs - 2 * swaps;\n+        final double nonTiedPairsMultiplied = (numPairs - tiedXPairs) * (double) (numPairs - tiedYPairs);\n+        return concordantMinusDiscordant / FastMath.sqrt(nonTiedPairsMultiplied);\n     }\n }\n",
    "project": "commons-math",
    "buggy_compile_success": true,
    "buggy_test_success": false,
    "fixed_compile_success": true,
    "fixed_test_success": false
}