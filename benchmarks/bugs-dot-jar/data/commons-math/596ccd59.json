{
  "files": 1, 
  "nb_test": 6167, 
  "nb_error": 1, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "org.apache.commons.math3.ml.clustering.FuzzyKMeansClustererTest"
  ], 
  "patch": "diff --git a/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java b/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\nindex ed2204789..5f89934a7 100644\n--- a/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\n+++ b/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\n@@ -346,18 +346,32 @@ private void updateClusterCenters() {\n     private void updateMembershipMatrix() {\n         for (int i = 0; i < points.size(); i++) {\n             final T point = points.get(i);\n-            double maxMembership = 0.0;\n+            double maxMembership = Double.MIN_VALUE;\n             int newCluster = -1;\n             for (int j = 0; j < clusters.size(); j++) {\n                 double sum = 0.0;\n                 final double distA = FastMath.abs(distance(point, clusters.get(j).getCenter()));\n \n+                if (distA != 0.0) {\n                     for (final CentroidCluster<T> c : clusters) {\n                         final double distB = FastMath.abs(distance(point, c.getCenter()));\n+                        if (distB == 0.0) {\n+                            sum = Double.POSITIVE_INFINITY;\n+                            break;\n+                        }\n                         sum += FastMath.pow(distA / distB, 2.0 / (fuzziness - 1.0));\n                     }\n+                }\n \n-                membershipMatrix[i][j] = 1.0 / sum;\n+                double membership;\n+                if (sum == 0.0) {\n+                    membership = 1.0;\n+                } else if (sum == Double.POSITIVE_INFINITY) {\n+                    membership = 0.0;\n+                } else {\n+                    membership = 1.0 / sum;\n+                }\n+                membershipMatrix[i][j] = membership;\n \n                 if (membershipMatrix[i][j] > maxMembership) {\n                     maxMembership = membershipMatrix[i][j];\n", 
  "project": "commons-math", 
  "linesAdd": 16, 
  "jira_id": "1165", 
  "nb_skipped": 3, 
  "commit": "596ccd59", 
  "nb_failure": 0, 
  "linesRem": 2
}