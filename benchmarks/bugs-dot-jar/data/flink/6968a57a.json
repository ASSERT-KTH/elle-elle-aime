{
  "files": 1, 
  "nb_test": 962, 
  "nb_error": 0, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "org.apache.flink.runtime.executiongraph.ExecutionGraphRestartTest"
  ], 
  "patch": "diff --git a/flink-runtime/src/main/java/org/apache/flink/runtime/executiongraph/Execution.java b/flink-runtime/src/main/java/org/apache/flink/runtime/executiongraph/Execution.java\nindex eb2e68c8eb..db037bb30b 100644\n--- a/flink-runtime/src/main/java/org/apache/flink/runtime/executiongraph/Execution.java\n+++ b/flink-runtime/src/main/java/org/apache/flink/runtime/executiongraph/Execution.java\n@@ -435,7 +435,7 @@ else if (current == FINISHED || current == FAILED) {\n \t\t\t\treturn;\n \t\t\t}\n \t\t\telse if (current == CREATED || current == SCHEDULED) {\n-\t\t\t\t// from here, we can directly switch to cancelled, because the no task has been deployed\n+\t\t\t\t// from here, we can directly switch to cancelled, because no task has been deployed\n \t\t\t\tif (transitionState(current, CANCELED)) {\n \t\t\t\t\t\n \t\t\t\t\t// we skip the canceling state. set the timestamp, for a consistent appearance\n@@ -754,11 +754,10 @@ private boolean processFail(Throwable t, boolean isCallback) {\n \t\t\t\treturn false;\n \t\t\t}\n \n-\t\t\tif (current == CANCELED) {\n-\t\t\t\t// we are already aborting or are already aborted\n+\t\t\tif (current == CANCELED || current == FINISHED) {\n+\t\t\t\t// we are already aborting or are already aborted or we are already finished\n \t\t\t\tif (LOG.isDebugEnabled()) {\n-\t\t\t\t\tLOG.debug(String.format(\"Ignoring transition of vertex %s to %s while being %s\", \n-\t\t\t\t\t\t\tgetVertexWithAttempt(), FAILED, CANCELED));\n+\t\t\t\t\tLOG.debug(\"Ignoring transition of vertex {} to {} while being {}.\", getVertexWithAttempt(), FAILED, current);\n \t\t\t\t}\n \t\t\t\treturn false;\n \t\t\t}\n@@ -928,6 +927,11 @@ private boolean transitionState(ExecutionState currentState, ExecutionState targ\n \t}\n \n \tprivate boolean transitionState(ExecutionState currentState, ExecutionState targetState, Throwable error) {\n+\t\t// sanity check\n+\t\tif (currentState.isTerminal()) {\n+\t\t\tthrow new IllegalStateException(\"Cannot leave terminal state \" + currentState + \" to transition to \" + targetState + \".\");\n+\t\t}\n+\n \t\tif (STATE_UPDATER.compareAndSet(this, currentState, targetState)) {\n \t\t\tmarkTimestamp(targetState);\n \n", 
  "project": "flink", 
  "linesAdd": 9, 
  "jira_id": "3260", 
  "nb_skipped": 1, 
  "commit": "6968a57a", 
  "nb_failure": 1, 
  "linesRem": 5
}