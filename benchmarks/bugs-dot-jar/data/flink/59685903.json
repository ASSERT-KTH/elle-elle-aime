{
  "files": 3, 
  "nb_test": 232, 
  "nb_error": 1, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "org.apache.flink.streaming.api.operators.FoldWindowFunctionTest"
  ], 
  "patch": "diff --git a/flink-streaming-java/src/main/java/org/apache/flink/streaming/api/operators/AbstractUdfStreamOperator.java b/flink-streaming-java/src/main/java/org/apache/flink/streaming/api/operators/AbstractUdfStreamOperator.java\nindex 17bd08d87d..32be2ba49e 100644\n--- a/flink-streaming-java/src/main/java/org/apache/flink/streaming/api/operators/AbstractUdfStreamOperator.java\n+++ b/flink-streaming-java/src/main/java/org/apache/flink/streaming/api/operators/AbstractUdfStreamOperator.java\n@@ -20,8 +20,10 @@\n \n import java.io.Serializable;\n \n+import org.apache.flink.api.common.ExecutionConfig;\n import org.apache.flink.api.common.functions.Function;\n import org.apache.flink.api.common.functions.util.FunctionUtils;\n+import org.apache.flink.api.common.typeinfo.TypeInformation;\n import org.apache.flink.configuration.Configuration;\n import org.apache.flink.runtime.state.StateHandle;\n import org.apache.flink.streaming.api.checkpoint.CheckpointNotifier;\n@@ -44,7 +46,7 @@\n  * @param <F>\n  *            The type of the user function\n  */\n-public abstract class AbstractUdfStreamOperator<OUT, F extends Function> extends AbstractStreamOperator<OUT> {\n+public abstract class AbstractUdfStreamOperator<OUT, F extends Function> extends AbstractStreamOperator<OUT> implements OutputTypeConfigurable<OUT> {\n \n \tprivate static final long serialVersionUID = 1L;\n \t\n@@ -175,6 +177,20 @@ public void notifyOfCompletedCheckpoint(long checkpointId) throws Exception {\n \t\t}\n \t}\n \n+\t// ------------------------------------------------------------------------\n+\t//  Output type configuration\n+\t// ------------------------------------------------------------------------\n+\n+\t@Override\n+\tpublic void setOutputType(TypeInformation<OUT> outTypeInfo, ExecutionConfig executionConfig) {\n+\t\tif (userFunction instanceof OutputTypeConfigurable) {\n+\t\t\tOutputTypeConfigurable<OUT> outputTypeConfigurable = (OutputTypeConfigurable<OUT>) userFunction;\n+\n+\t\t\toutputTypeConfigurable.setOutputType(outTypeInfo, executionConfig);\n+\t\t}\n+\t}\n+\n+\n \t// ------------------------------------------------------------------------\n \t//  Utilities\n \t// ------------------------------------------------------------------------\ndiff --git a/flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/operators/windowing/NonKeyedWindowOperator.java b/flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/operators/windowing/NonKeyedWindowOperator.java\nindex d12a930ed9..cf90cf2bc3 100644\n--- a/flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/operators/windowing/NonKeyedWindowOperator.java\n+++ b/flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/operators/windowing/NonKeyedWindowOperator.java\n@@ -31,7 +31,6 @@\n import org.apache.flink.streaming.api.operators.AbstractUdfStreamOperator;\n import org.apache.flink.streaming.api.operators.ChainingStrategy;\n import org.apache.flink.streaming.api.operators.OneInputStreamOperator;\n-import org.apache.flink.streaming.api.operators.OutputTypeConfigurable;\n import org.apache.flink.streaming.api.operators.TimestampedCollector;\n import org.apache.flink.streaming.api.watermark.Watermark;\n import org.apache.flink.streaming.api.windowing.assigners.WindowAssigner;\n@@ -70,7 +69,7 @@\n  */\n public class NonKeyedWindowOperator<IN, OUT, W extends Window>\n \t\textends AbstractUdfStreamOperator<OUT, AllWindowFunction<IN, OUT, W>>\n-\t\timplements OneInputStreamOperator<IN, OUT>, Triggerable, InputTypeConfigurable, OutputTypeConfigurable<OUT> {\n+\t\timplements OneInputStreamOperator<IN, OUT>, Triggerable, InputTypeConfigurable {\n \n \tprivate static final long serialVersionUID = 1L;\n \n@@ -510,15 +509,6 @@ public void registerEventTimeTimer(long time) {\n \t\treturn this;\n \t}\n \n-\t@Override\n-\tpublic final void setOutputType(TypeInformation<OUT> outTypeInfo, ExecutionConfig executionConfig) {\n-\t\tif (userFunction instanceof OutputTypeConfigurable) {\n-\t\t\t@SuppressWarnings(\"unchecked\")\n-\t\t\tOutputTypeConfigurable<OUT> typeConfigurable = (OutputTypeConfigurable<OUT>) userFunction;\n-\t\t\ttypeConfigurable.setOutputType(outTypeInfo, executionConfig);\n-\t\t}\n-\t}\n-\n \t// ------------------------------------------------------------------------\n \t//  Checkpointing\n \t// ------------------------------------------------------------------------\ndiff --git a/flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/operators/windowing/WindowOperator.java b/flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/operators/windowing/WindowOperator.java\nindex c39679f233..6764186da6 100644\n--- a/flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/operators/windowing/WindowOperator.java\n+++ b/flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/operators/windowing/WindowOperator.java\n@@ -32,7 +32,6 @@\n import org.apache.flink.streaming.api.operators.AbstractUdfStreamOperator;\n import org.apache.flink.streaming.api.operators.ChainingStrategy;\n import org.apache.flink.streaming.api.operators.OneInputStreamOperator;\n-import org.apache.flink.streaming.api.operators.OutputTypeConfigurable;\n import org.apache.flink.streaming.api.operators.TimestampedCollector;\n import org.apache.flink.streaming.api.watermark.Watermark;\n import org.apache.flink.streaming.api.windowing.assigners.WindowAssigner;\n@@ -88,7 +87,7 @@\n  */\n public class WindowOperator<K, IN, OUT, W extends Window>\n \t\textends AbstractUdfStreamOperator<OUT, WindowFunction<IN, OUT, K, W>>\n-\t\timplements OneInputStreamOperator<IN, OUT>, Triggerable, InputTypeConfigurable, OutputTypeConfigurable<OUT> {\n+\t\timplements OneInputStreamOperator<IN, OUT>, Triggerable, InputTypeConfigurable {\n \n \tprivate static final long serialVersionUID = 1L;\n \n@@ -579,15 +578,6 @@ public void registerEventTimeTimer(long time) {\n \t\treturn this;\n \t}\n \n-\t@Override\n-\tpublic final void setOutputType(TypeInformation<OUT> outTypeInfo, ExecutionConfig executionConfig) {\n-\t\tif (userFunction instanceof OutputTypeConfigurable) {\n-\t\t\t@SuppressWarnings(\"unchecked\")\n-\t\t\tOutputTypeConfigurable<OUT> typeConfigurable = (OutputTypeConfigurable<OUT>) userFunction;\n-\t\t\ttypeConfigurable.setOutputType(outTypeInfo, executionConfig);\n-\t\t}\n-\t}\n-\n \t// ------------------------------------------------------------------------\n \t//  Checkpointing\n \t// ------------------------------------------------------------------------\n", 
  "project": "flink", 
  "linesAdd": 19, 
  "jira_id": "2968", 
  "nb_skipped": 4, 
  "commit": "59685903", 
  "nb_failure": 0, 
  "linesRem": 23
}