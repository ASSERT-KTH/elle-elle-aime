{
  "files": 1, 
  "nb_test": 526, 
  "nb_error": 0, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "org.apache.logging.log4j.core.web.Log4jServletContainerInitializerTest"
  ], 
  "patch": "diff --git a/log4j-core/src/main/java/org/apache/logging/log4j/core/web/Log4jServletContainerInitializer.java b/log4j-core/src/main/java/org/apache/logging/log4j/core/web/Log4jServletContainerInitializer.java\nindex 50b082066..7d3ce0540 100644\n--- a/log4j-core/src/main/java/org/apache/logging/log4j/core/web/Log4jServletContainerInitializer.java\n+++ b/log4j-core/src/main/java/org/apache/logging/log4j/core/web/Log4jServletContainerInitializer.java\n@@ -25,6 +25,9 @@\n import javax.servlet.ServletException;\n import javax.servlet.UnavailableException;\n \n+import org.apache.logging.log4j.Logger;\n+import org.apache.logging.log4j.status.StatusLogger;\n+\n /**\n  * In a Servlet 3.0 or newer environment, this initializer is responsible for starting up Log4j logging before anything\n  * else happens in application initialization. For consistency across all containers, if the effective Servlet major\n@@ -34,21 +37,23 @@\n \n     @Override\n     public void onStartup(final Set<Class<?>> classes, final ServletContext servletContext) throws ServletException {\n-        if (servletContext.getMajorVersion() > 2) {\n+        if (servletContext.getMajorVersion() > 2 && servletContext.getEffectiveMajorVersion() > 2) {\n             servletContext.log(\"Log4jServletContainerInitializer starting up Log4j in Servlet 3.0+ environment.\");\n \n+            final FilterRegistration.Dynamic filter =\n+                    servletContext.addFilter(\"log4jServletFilter\", new Log4jServletFilter());\n+            if (filter == null) {\n+                servletContext.log(\"WARNING: In a Servlet 3.0+ application, you should not define a \" +\n+                        \"log4jServletFilter in web.xml. Log4j 2 normally does this for you automatically. Log4j 2 \" +\n+                        \"web auto-initialization has been canceled.\");\n+                return;\n+            }\n+\n             final Log4jWebInitializer initializer = Log4jWebInitializerImpl.getLog4jWebInitializer(servletContext);\n             initializer.initialize();\n             initializer.setLoggerContext(); // the application is just now starting to start up\n \n             servletContext.addListener(new Log4jServletContextListener());\n-\n-            final FilterRegistration.Dynamic filter =\n-                    servletContext.addFilter(\"log4jServletFilter\", new Log4jServletFilter());\n-            if (filter == null) {\n-                throw new UnavailableException(\"In a Servlet 3.0+ application, you must not define a \" +\n-                        \"log4jServletFilter in web.xml. Log4j 2 defines this for you automatically.\");\n-            }\n             filter.addMappingForUrlPatterns(EnumSet.allOf(DispatcherType.class), false, \"/*\");\n         }\n     }\n", 
  "project": "logging-log4j2", 
  "linesAdd": 13, 
  "jira_id": "359", 
  "nb_skipped": 1, 
  "commit": "296ea4a5", 
  "nb_failure": 8, 
  "linesRem": 8
}