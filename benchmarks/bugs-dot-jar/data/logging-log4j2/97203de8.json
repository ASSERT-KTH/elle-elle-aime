{
  "files": 7, 
  "nb_test": 197, 
  "nb_error": 0, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "org.apache.logging.log4j.message.ObjectMessageTest", 
    "org.apache.logging.log4j.message.StringFormattedMessageTest", 
    "org.apache.logging.log4j.message.MessageFormatMessageTest", 
    "org.apache.logging.log4j.message.LocalizedMessageTest", 
    "org.apache.logging.log4j.message.FormattedMessageTest"
  ], 
  "patch": "diff --git a/log4j-api/src/main/java/org/apache/logging/log4j/message/FormattedMessage.java b/log4j-api/src/main/java/org/apache/logging/log4j/message/FormattedMessage.java\nindex 1c540ddbc..3ca4b8287 100644\n--- a/log4j-api/src/main/java/org/apache/logging/log4j/message/FormattedMessage.java\n+++ b/log4j-api/src/main/java/org/apache/logging/log4j/message/FormattedMessage.java\n@@ -46,12 +46,11 @@ public FormattedMessage(final String messagePattern, final Object[] arguments, f\n         this.messagePattern = messagePattern;\n         this.argArray = arguments;\n         this.throwable = throwable;\n+        getFormattedMessage(); // LOG4J2-763 take snapshot of parameters at message construction time\n     }\n \n     public FormattedMessage(final String messagePattern, final Object[] arguments) {\n-        this.messagePattern = messagePattern;\n-        this.argArray = arguments;\n-        this.throwable = null;\n+        this(messagePattern, arguments, null);\n     }\n \n     /**\n@@ -60,9 +59,7 @@ public FormattedMessage(final String messagePattern, final Object[] arguments) {\n      * @param arg The parameter.\n      */\n     public FormattedMessage(final String messagePattern, final Object arg) {\n-        this.messagePattern = messagePattern;\n-        this.argArray = new Object[] {arg};\n-        this.throwable = null;\n+        this(messagePattern, new Object[] {arg}, null);\n     }\n \n     /**\ndiff --git a/log4j-api/src/main/java/org/apache/logging/log4j/message/LocalizedMessage.java b/log4j-api/src/main/java/org/apache/logging/log4j/message/LocalizedMessage.java\nindex c6839b801..2a2246b8e 100644\n--- a/log4j-api/src/main/java/org/apache/logging/log4j/message/LocalizedMessage.java\n+++ b/log4j-api/src/main/java/org/apache/logging/log4j/message/LocalizedMessage.java\n@@ -78,6 +78,7 @@ public LocalizedMessage(final String baseName, final Locale locale, final String\n         this.baseName = baseName;\n         this.resourceBundle = null;\n         this.locale = locale;\n+        getFormattedMessage(); // LOG4J2-763 take snapshot of parameters at message construction time\n     }\n \n     public LocalizedMessage(final ResourceBundle bundle, final Locale locale, final String key,\n@@ -88,6 +89,7 @@ public LocalizedMessage(final ResourceBundle bundle, final Locale locale, final\n         this.baseName = null;\n         this.resourceBundle = bundle;\n         this.locale = locale;\n+        getFormattedMessage(); // LOG4J2-763 take snapshot of parameters at message construction time\n     }\n \n     public LocalizedMessage(final Locale locale, final String key, final Object[] arguments) {\ndiff --git a/log4j-api/src/main/java/org/apache/logging/log4j/message/MapMessage.java b/log4j-api/src/main/java/org/apache/logging/log4j/message/MapMessage.java\nindex db6826acd..4cbef351d 100644\n--- a/log4j-api/src/main/java/org/apache/logging/log4j/message/MapMessage.java\n+++ b/log4j-api/src/main/java/org/apache/logging/log4j/message/MapMessage.java\n@@ -26,6 +26,11 @@\n \n /**\n  * Represents a Message that consists of a Map.\n+ * <p>\n+ * Thread-safety note: the contents of this message can be modified after construction.\n+ * When using asynchronous loggers and appenders it is not recommended to modify this message after the message is\n+ * logged, because it is undefined whether the logged message string will contain the old values or the modified\n+ * values.\n  */\n public class MapMessage implements MultiformatMessage {\n     /**\ndiff --git a/log4j-api/src/main/java/org/apache/logging/log4j/message/MessageFormatMessage.java b/log4j-api/src/main/java/org/apache/logging/log4j/message/MessageFormatMessage.java\nindex 0493b0fde..f7283245c 100644\n--- a/log4j-api/src/main/java/org/apache/logging/log4j/message/MessageFormatMessage.java\n+++ b/log4j-api/src/main/java/org/apache/logging/log4j/message/MessageFormatMessage.java\n@@ -49,6 +49,7 @@ public MessageFormatMessage(final String messagePattern, final Object... argumen\n         if (arguments != null && arguments.length > 0 && arguments[arguments.length - 1] instanceof Throwable) {\n             this.throwable = (Throwable) arguments[arguments.length - 1];\n         }\n+        getFormattedMessage(); // LOG4J2-763 take snapshot of parameters at message construction time\n     }\n \n     /**\ndiff --git a/log4j-api/src/main/java/org/apache/logging/log4j/message/ObjectMessage.java b/log4j-api/src/main/java/org/apache/logging/log4j/message/ObjectMessage.java\nindex 27f288e72..dcccf46c1 100644\n--- a/log4j-api/src/main/java/org/apache/logging/log4j/message/ObjectMessage.java\n+++ b/log4j-api/src/main/java/org/apache/logging/log4j/message/ObjectMessage.java\n@@ -29,6 +29,7 @@\n     private static final long serialVersionUID = -5903272448334166185L;\n \n     private transient Object obj;\n+    private final String objectString;\n \n     /**\n      * Create the ObjectMessage.\n@@ -39,6 +40,9 @@ public ObjectMessage(Object obj) {\n             obj = \"null\";\n         }\n         this.obj = obj;\n+        \n+        // LOG4J2-763: take snapshot of parameters at message construction time\n+        objectString = String.valueOf(obj);\n     }\n \n     /**\n@@ -47,7 +51,7 @@ public ObjectMessage(Object obj) {\n      */\n     @Override\n     public String getFormattedMessage() {\n-        return obj.toString();\n+        return objectString;\n     }\n \n     /**\n@@ -56,7 +60,7 @@ public String getFormattedMessage() {\n      */\n     @Override\n     public String getFormat() {\n-        return obj.toString();\n+        return objectString;\n     }\n \n     /**\n@@ -89,7 +93,7 @@ public int hashCode() {\n \n     @Override\n     public String toString() {\n-        return \"ObjectMessage[obj=\" + obj.toString() + ']';\n+        return \"ObjectMessage[obj=\" + objectString + ']';\n     }\n \n     private void writeObject(final ObjectOutputStream out) throws IOException {\ndiff --git a/log4j-api/src/main/java/org/apache/logging/log4j/message/StringFormattedMessage.java b/log4j-api/src/main/java/org/apache/logging/log4j/message/StringFormattedMessage.java\nindex f6007e4ce..91df3705f 100644\n--- a/log4j-api/src/main/java/org/apache/logging/log4j/message/StringFormattedMessage.java\n+++ b/log4j-api/src/main/java/org/apache/logging/log4j/message/StringFormattedMessage.java\n@@ -48,6 +48,7 @@ public StringFormattedMessage(final String messagePattern, final Object... argum\n         if (arguments != null && arguments.length > 0 && arguments[arguments.length - 1] instanceof Throwable) {\n             this.throwable = (Throwable) arguments[arguments.length - 1];\n         }\n+        getFormattedMessage(); // LOG4J2-763 take snapshot of parameters at message construction time\n     }\n \n     /**\ndiff --git a/log4j-api/src/main/java/org/apache/logging/log4j/message/StructuredDataMessage.java b/log4j-api/src/main/java/org/apache/logging/log4j/message/StructuredDataMessage.java\nindex 246e11bd7..f6300ee84 100644\n--- a/log4j-api/src/main/java/org/apache/logging/log4j/message/StructuredDataMessage.java\n+++ b/log4j-api/src/main/java/org/apache/logging/log4j/message/StructuredDataMessage.java\n@@ -22,6 +22,11 @@\n \n /**\n  * Represents a Message that conforms to an RFC 5424 StructuredData element along with the syslog message.\n+ * <p>\n+ * Thread-safety note: the contents of this message can be modified after construction.\n+ * When using asynchronous loggers and appenders it is not recommended to modify this message after the message is\n+ * logged, because it is undefined whether the logged message string will contain the old values or the modified\n+ * values.\n  *\n  * @see <a href=\"https://tools.ietf.org/html/rfc5424\">RFC 5424</a>\n  */\n", 
  "project": "logging-log4j2", 
  "linesAdd": 24, 
  "jira_id": "763", 
  "nb_skipped": 2, 
  "commit": "97203de8", 
  "nb_failure": 5, 
  "linesRem": 9
}