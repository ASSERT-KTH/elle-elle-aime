{
  "files": 1, 
  "nb_test": 5570, 
  "nb_error": 0, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "org.apache.camel.component.seda.SedaDiscardIfNoConsumerTest"
  ], 
  "patch": "diff --git a/camel-core/src/main/java/org/apache/camel/component/seda/SedaProducer.java b/camel-core/src/main/java/org/apache/camel/component/seda/SedaProducer.java\nindex a87ddf38e6..1e28eaa7e0 100644\n--- a/camel-core/src/main/java/org/apache/camel/component/seda/SedaProducer.java\n+++ b/camel-core/src/main/java/org/apache/camel/component/seda/SedaProducer.java\n@@ -122,7 +122,8 @@ public String toString() {\n \n             log.trace(\"Adding Exchange to queue: {}\", copy);\n             try {\n-                addToQueue(copy);\n+                // do not copy as we already did the copy\n+                addToQueue(copy, false);\n             } catch (SedaConsumerNotAvailableException e) {\n                 exchange.setException(e);\n                 callback.done(true);\n@@ -160,11 +161,8 @@ public String toString() {\n             }\n         } else {\n             // no wait, eg its a InOnly then just add to queue and return\n-            // handover the completion so its the copy which performs that, as we do not wait\n-            Exchange copy = prepareCopy(exchange, true);\n-            log.trace(\"Adding Exchange to queue: {}\", copy);\n             try {\n-                addToQueue(copy);\n+                addToQueue(exchange, true);\n             } catch (SedaConsumerNotAvailableException e) {\n                 exchange.setException(e);\n                 callback.done(true);\n@@ -205,8 +203,9 @@ protected void doStop() throws Exception {\n      * simply add which will throw exception if the queue is full\n      * \n      * @param exchange the exchange to add to the queue\n+     * @param copy     whether to create a copy of the exchange to use for adding to the queue\n      */\n-    protected void addToQueue(Exchange exchange) throws SedaConsumerNotAvailableException {\n+    protected void addToQueue(Exchange exchange, boolean copy) throws SedaConsumerNotAvailableException {\n         BlockingQueue<Exchange> queue = null;\n         QueueReference queueReference = endpoint.getQueueReference();\n         if (queueReference != null) {\n@@ -226,15 +225,23 @@ protected void addToQueue(Exchange exchange) throws SedaConsumerNotAvailableExce\n             }\n         }\n \n+        Exchange target = exchange;\n+\n+        // handover the completion so its the copy which performs that, as we do not wait\n+        if (copy) {\n+            target = prepareCopy(exchange, true);\n+        }\n+\n+        log.trace(\"Adding Exchange to queue: {}\", target);\n         if (blockWhenFull) {\n             try {\n-                queue.put(exchange);\n+                queue.put(target);\n             } catch (InterruptedException e) {\n                 // ignore\n                 log.debug(\"Put interrupted, are we stopping? {}\", isStopping() || isStopped());\n             }\n         } else {\n-            queue.add(exchange);\n+            queue.add(target);\n         }\n     }\n \n", 
  "project": "camel", 
  "linesAdd": 15, 
  "jira_id": "9700", 
  "nb_skipped": 4, 
  "commit": "4d03e9de", 
  "nb_failure": 1, 
  "linesRem": 8
}