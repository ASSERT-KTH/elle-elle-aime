{
  "files": 1, 
  "nb_test": 3588, 
  "nb_error": 0, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "org.apache.camel.util.URISupportTest"
  ], 
  "patch": "diff --git a/camel-core/src/main/java/org/apache/camel/util/URISupport.java b/camel-core/src/main/java/org/apache/camel/util/URISupport.java\nindex 71abd941d1..267578641c 100644\n--- a/camel-core/src/main/java/org/apache/camel/util/URISupport.java\n+++ b/camel-core/src/main/java/org/apache/camel/util/URISupport.java\n@@ -22,7 +22,9 @@\n import java.net.URLDecoder;\n import java.net.URLEncoder;\n import java.util.ArrayList;\n+import java.util.Arrays;\n import java.util.Collections;\n+import java.util.Iterator;\n import java.util.LinkedHashMap;\n import java.util.List;\n import java.util.Map;\n@@ -74,7 +76,28 @@ public static String sanitizeUri(String uri) {\n                     if (p >= 0) {\n                         String name = URLDecoder.decode(parameter.substring(0, p), CHARSET);\n                         String value = URLDecoder.decode(parameter.substring(p + 1), CHARSET);\n+\n+                        // does the key already exist?\n+                        if (rc.containsKey(name)) {\n+                            // yes it does, so make sure we can support multiple values, but using a list\n+                            // to hold the multiple values\n+                            Object existing = rc.get(name);\n+                            List<String> list;\n+                            if (existing instanceof List) {\n+                                list = CastUtils.cast((List<?>) existing);\n+                            } else {\n+                                // create a new list to hold the multiple values\n+                                list = new ArrayList<String>();\n+                                String s = existing != null ? existing.toString() : null;\n+                                if (s != null) {\n+                                    list.add(s);\n+                                }\n+                            }\n+                            list.add(value);\n+                            rc.put(name, list);\n+                        } else {\n                             rc.put(name, value);\n+                        }\n                     } else {\n                         rc.put(parameter, null);\n                     }\n@@ -134,6 +157,7 @@ public static String stripPrefix(String value, String prefix) {\n         return value;\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n     public static String createQueryString(Map<Object, Object> options) throws URISyntaxException {\n         try {\n             if (options.size() > 0) {\n@@ -147,12 +171,23 @@ public static String createQueryString(Map<Object, Object> options) throws URISy\n                     }\n \n                     String key = (String) o;\n-                    String value = (String) options.get(key);\n-                    rc.append(URLEncoder.encode(key, CHARSET));\n-                    // only append if value is not null\n-                    if (value != null) {\n-                        rc.append(\"=\");\n-                        rc.append(URLEncoder.encode(value, CHARSET));\n+                    Object value = options.get(key);\n+\n+                    // the value may be a list since the same key has multiple values\n+                    if (value instanceof List) {\n+                        List<String> list = (List<String>) value;\n+                        for (Iterator<String> it = list.iterator(); it.hasNext();) {\n+                            String s = it.next();\n+                            appendQueryStringParameter(key, s, rc);\n+                            // append & separator if there is more in the list to append\n+                            if (it.hasNext()) {\n+                                rc.append(\"&\");\n+                            }\n+                        }\n+                    } else {\n+                        // use the value as a String\n+                        String s = value != null ? value.toString() : null;\n+                        appendQueryStringParameter(key, s, rc);\n                     }\n                 }\n                 return rc.toString();\n@@ -166,6 +201,16 @@ public static String createQueryString(Map<Object, Object> options) throws URISy\n         }\n     }\n \n+    private static void appendQueryStringParameter(String key, String value, StringBuilder rc) throws UnsupportedEncodingException {\n+        rc.append(URLEncoder.encode(key, CHARSET));\n+        // only append if value is not null\n+        if (value != null) {\n+            rc.append(\"=\");\n+            rc.append(URLEncoder.encode(value, CHARSET));\n+        }\n+    }\n+\n+\n     /**\n      * Creates a URI from the original URI and the remaining parameters\n      * <p/>\n", 
  "project": "camel", 
  "linesAdd": 51, 
  "jira_id": "4211", 
  "nb_skipped": 0, 
  "commit": "4efddb3f", 
  "nb_failure": 1, 
  "linesRem": 6
}