{
  "files": 1, 
  "nb_test": 2913, 
  "nb_error": 0, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "org.apache.camel.processor.onexception.OnExceptionAfterRouteTest"
  ], 
  "patch": "diff --git a/camel-core/src/main/java/org/apache/camel/builder/RouteBuilder.java b/camel-core/src/main/java/org/apache/camel/builder/RouteBuilder.java\nindex 1300f7d..a5cd8d1 100644\n--- a/camel-core/src/main/java/org/apache/camel/builder/RouteBuilder.java\n+++ b/camel-core/src/main/java/org/apache/camel/builder/RouteBuilder.java\n@@ -136,6 +136,9 @@ public RouteDefinition from(Endpoint... endpoints) {\n      * @return the current builder with the error handler configured\n      */\n     public RouteBuilder errorHandler(ErrorHandlerBuilder errorHandlerBuilder) {\n+        if (!routeCollection.getRoutes().isEmpty()) {\n+            throw new IllegalArgumentException(\"errorHandler must be defined before any routes in the RouteBuilder\");\n+        }\n         routeCollection.setCamelContext(getContext());\n         setErrorHandlerBuilder(errorHandlerBuilder);\n         return this;\n@@ -147,6 +150,9 @@ public RouteBuilder errorHandler(ErrorHandlerBuilder errorHandlerBuilder) {\n      * @return the builder\n      */\n     public InterceptDefinition intercept() {\n+        if (!routeCollection.getRoutes().isEmpty()) {\n+            throw new IllegalArgumentException(\"intercept must be defined before any routes in the RouteBuilder\");\n+        }\n         routeCollection.setCamelContext(getContext());\n         return routeCollection.intercept();\n     }\n@@ -157,6 +163,9 @@ public InterceptDefinition intercept() {\n      * @return the builder\n      */\n     public InterceptFromDefinition interceptFrom() {\n+        if (!routeCollection.getRoutes().isEmpty()) {\n+            throw new IllegalArgumentException(\"interceptFrom must be defined before any routes in the RouteBuilder\");\n+        }\n         routeCollection.setCamelContext(getContext());\n         return routeCollection.interceptFrom();\n     }\n@@ -168,6 +177,9 @@ public InterceptFromDefinition interceptFrom() {\n      * @return the builder\n      */\n     public InterceptFromDefinition interceptFrom(String uri) {\n+        if (!routeCollection.getRoutes().isEmpty()) {\n+            throw new IllegalArgumentException(\"interceptFrom must be defined before any routes in the RouteBuilder\");\n+        }\n         routeCollection.setCamelContext(getContext());\n         return routeCollection.interceptFrom(uri);\n     }\n@@ -179,6 +191,9 @@ public InterceptFromDefinition interceptFrom(String uri) {\n      * @return the builder\n      */\n     public InterceptSendToEndpointDefinition interceptSendToEndpoint(String uri) {\n+        if (!routeCollection.getRoutes().isEmpty()) {\n+            throw new IllegalArgumentException(\"interceptSendToEndpoint must be defined before any routes in the RouteBuilder\");\n+        }\n         routeCollection.setCamelContext(getContext());\n         return routeCollection.interceptSendToEndpoint(uri);\n     }\n@@ -191,6 +206,10 @@ public InterceptSendToEndpointDefinition interceptSendToEndpoint(String uri) {\n      * @return the builder\n      */\n     public OnExceptionDefinition onException(Class exception) {\n+        // is only allowed at the top currently\n+        if (!routeCollection.getRoutes().isEmpty()) {\n+            throw new IllegalArgumentException(\"onException must be defined before any routes in the RouteBuilder\");\n+        }\n         routeCollection.setCamelContext(getContext());\n         return routeCollection.onException(exception);\n     }\n@@ -217,6 +236,10 @@ public OnExceptionDefinition onException(Class... exceptions) {\n      * @return the builder\n      */\n     public OnCompletionDefinition onCompletion() {\n+        // is only allowed at the top currently\n+        if (!routeCollection.getRoutes().isEmpty()) {\n+            throw new IllegalArgumentException(\"onCompletion must be defined before any routes in the RouteBuilder\");\n+        }\n         routeCollection.setCamelContext(getContext());\n         return routeCollection.onCompletion();\n     }\n", 
  "project": "camel", 
  "linesAdd": 23, 
  "jira_id": "3281", 
  "nb_skipped": 0, 
  "commit": "f7dd2fff", 
  "nb_failure": 1, 
  "linesRem": 0
}