{
  "files": 1, 
  "nb_test": 5492, 
  "nb_error": 1, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "org.apache.camel.processor.IdempotentConsumerRepoExceptionTest"
  ], 
  "patch": "diff --git a/camel-core/src/main/java/org/apache/camel/processor/idempotent/IdempotentConsumer.java b/camel-core/src/main/java/org/apache/camel/processor/idempotent/IdempotentConsumer.java\nindex e28a214b08..7b64546697 100644\n--- a/camel-core/src/main/java/org/apache/camel/processor/idempotent/IdempotentConsumer.java\n+++ b/camel-core/src/main/java/org/apache/camel/processor/idempotent/IdempotentConsumer.java\n@@ -91,13 +91,23 @@ public void process(Exchange exchange) throws Exception {\n     }\n \n     public boolean process(final Exchange exchange, final AsyncCallback callback) {\n-        final String messageId = messageIdExpression.evaluate(exchange, String.class);\n+        final AsyncCallback target;\n+\n+        final String messageId;\n+        try {\n+            messageId = messageIdExpression.evaluate(exchange, String.class);\n             if (messageId == null) {\n                 exchange.setException(new NoMessageIdException(exchange, messageIdExpression));\n                 callback.done(true);\n                 return true;\n             }\n+        } catch (Exception e) {\n+            exchange.setException(e);\n+            callback.done(true);\n+            return true;\n+        }\n \n+        try {\n             boolean newKey;\n             if (eager) {\n                 // add the key to the repository\n@@ -132,11 +141,16 @@ public boolean process(final Exchange exchange, final AsyncCallback callback) {\n             }\n \n             final Synchronization onCompletion = new IdempotentOnCompletion(idempotentRepository, messageId, eager, removeOnFailure);\n-        final AsyncCallback target = new IdempotentConsumerCallback(exchange, onCompletion, callback, completionEager);\n+            target = new IdempotentConsumerCallback(exchange, onCompletion, callback, completionEager);\n             if (!completionEager) {\n                 // the scope is to do the idempotent completion work as an unit of work on the exchange when its done being routed\n                 exchange.addOnCompletion(onCompletion);\n             }\n+        } catch (Exception e) {\n+            exchange.setException(e);\n+            callback.done(true);\n+            return true;\n+        }\n \n         // process the exchange\n         return processor.process(exchange, target);\n", 
  "project": "camel", 
  "linesAdd": 17, 
  "jira_id": "9480", 
  "nb_skipped": 4, 
  "commit": "0ead2cac", 
  "nb_failure": 0, 
  "linesRem": 2
}