{
    "bug_id": 128,
    "classification": {
        "singleLine": false
    },
    "commit": "a5a2f750",
    "failing_tests": [
        "org.apache.camel.processor.MulticastGroupedExchangeExceptionTest"
    ],
    "files": 1,
    "jira_id": "7271",
    "linesAdd": 5,
    "linesRem": 5,
    "nb_error": 1,
    "nb_failure": 0,
    "nb_skipped": 3,
    "nb_test": 4910,
    "patch": "diff --git a/camel-core/src/main/java/org/apache/camel/processor/aggregate/GroupedExchangeAggregationStrategy.java b/camel-core/src/main/java/org/apache/camel/processor/aggregate/GroupedExchangeAggregationStrategy.java\nindex 84b375dd78..2906270d68 100644\n--- a/camel-core/src/main/java/org/apache/camel/processor/aggregate/GroupedExchangeAggregationStrategy.java\n+++ b/camel-core/src/main/java/org/apache/camel/processor/aggregate/GroupedExchangeAggregationStrategy.java\n@@ -19,6 +19,7 @@\n import java.util.List;\n \n import org.apache.camel.Exchange;\n+import org.apache.camel.impl.DefaultExchange;\n \n /**\n  * Aggregate all exchanges into a single combined Exchange holding all the aggregated exchanges\n@@ -43,13 +43,12 @@ public void onCompletion(Exchange exchange) {\n \n     @Override\n     public Exchange aggregate(Exchange oldExchange, Exchange newExchange) {\n-        Exchange answer = super.aggregate(oldExchange, newExchange);\n         if (oldExchange == null) {\n-            // for the first time we must do a copy as the answer, so the outgoing\n-            // exchange is not one of the grouped exchanges, as that causes a endless circular reference\n-            answer = answer.copy();\n+            // for the first time we must create a new empty exchange as the holder, as the outgoing exchange\n+            // must not be one of the grouped exchanges, as that causes a endless circular reference\n+            oldExchange = new DefaultExchange(newExchange);\n         }\n-        return answer;\n+        return super.aggregate(oldExchange, newExchange);\n     }\n \n     @Override\n",
    "project": "camel",
    "buggy_compile_success": false,
    "buggy_test_success": false,
    "fixed_compile_success": false,
    "fixed_test_success": false
}