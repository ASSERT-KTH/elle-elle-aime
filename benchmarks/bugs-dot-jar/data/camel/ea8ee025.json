{
  "files": 2, 
  "nb_test": 5358, 
  "nb_error": 0, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "org.apache.camel.impl.RouteSedaSuspendResumeTest", 
    "org.apache.camel.management.ManagedThrottlerTest"
  ], 
  "patch": "diff --git a/camel-core/src/main/java/org/apache/camel/impl/DefaultCamelContext.java b/camel-core/src/main/java/org/apache/camel/impl/DefaultCamelContext.java\nindex c24674e0a9..0ed913a75e 100644\n--- a/camel-core/src/main/java/org/apache/camel/impl/DefaultCamelContext.java\n+++ b/camel-core/src/main/java/org/apache/camel/impl/DefaultCamelContext.java\n@@ -984,6 +984,9 @@ public synchronized void resumeRoute(String routeId) throws Exception {\n         RouteService routeService = routeServices.get(routeId);\n         if (routeService != null) {\n             resumeRouteService(routeService);\n+            // must resume the route as well\n+            Route route = getRoute(routeId);\n+            ServiceHelper.resumeService(route);\n         }\n     }\n \n@@ -1125,12 +1128,15 @@ public synchronized void suspendRoute(String routeId) throws Exception {\n         RouteService routeService = routeServices.get(routeId);\n         if (routeService != null) {\n             List<RouteStartupOrder> routes = new ArrayList<RouteStartupOrder>(1);\n-            RouteStartupOrder order = new DefaultRouteStartupOrder(1, routeService.getRoutes().iterator().next(), routeService);\n+            Route route = routeService.getRoutes().iterator().next();\n+            RouteStartupOrder order = new DefaultRouteStartupOrder(1, route, routeService);\n             routes.add(order);\n \n             getShutdownStrategy().suspend(this, routes);\n             // must suspend route service as well\n             suspendRouteService(routeService);\n+            // must suspend the route as well\n+            ServiceHelper.suspendService(route);\n         }\n     }\n \n@@ -1143,12 +1149,15 @@ public synchronized void suspendRoute(String routeId, long timeout, TimeUnit tim\n         RouteService routeService = routeServices.get(routeId);\n         if (routeService != null) {\n             List<RouteStartupOrder> routes = new ArrayList<RouteStartupOrder>(1);\n-            RouteStartupOrder order = new DefaultRouteStartupOrder(1, routeService.getRoutes().iterator().next(), routeService);\n+            Route route = routeService.getRoutes().iterator().next();\n+            RouteStartupOrder order = new DefaultRouteStartupOrder(1, route, routeService);\n             routes.add(order);\n \n             getShutdownStrategy().suspend(this, routes, timeout, timeUnit);\n             // must suspend route service as well\n             suspendRouteService(routeService);\n+            // must suspend the route as well\n+            ServiceHelper.suspendService(route);\n         }\n     }\n \ndiff --git a/camel-core/src/main/java/org/apache/camel/util/ServiceHelper.java b/camel-core/src/main/java/org/apache/camel/util/ServiceHelper.java\nindex 0a7df51821..90b5ce95b3 100644\n--- a/camel-core/src/main/java/org/apache/camel/util/ServiceHelper.java\n+++ b/camel-core/src/main/java/org/apache/camel/util/ServiceHelper.java\n@@ -260,7 +260,7 @@ public static void stopAndShutdownServices(Collection<?> services) throws Except\n      * If there's any exception being thrown while resuming the elements one after the\n      * other this method would rethrow the <b>first</b> such exception being thrown.\n      * \n-     * @see #resumeService(Service)\n+     * @see #resumeService(Object)\n      */\n     public static void resumeServices(Collection<?> services) throws Exception {\n         if (services == null) {\n@@ -308,7 +308,7 @@ public static void resumeServices(Collection<?> services) throws Exception {\n      * @throws Exception is thrown if error occurred\n      * @see #startService(Service)\n      */\n-    public static boolean resumeService(Service service) throws Exception {\n+    public static boolean resumeService(Object service) throws Exception {\n         if (service instanceof SuspendableService) {\n             SuspendableService ss = (SuspendableService) service;\n             if (ss.isSuspended()) {\n@@ -331,7 +331,7 @@ public static boolean resumeService(Service service) throws Exception {\n      * If there's any exception being thrown while suspending the elements one after the\n      * other this method would rethrow the <b>first</b> such exception being thrown.\n      * \n-     * @see #suspendService(Service)\n+     * @see #suspendService(Object)\n      */\n     public static void suspendServices(Collection<?> services) throws Exception {\n         if (services == null) {\n@@ -379,7 +379,7 @@ public static void suspendServices(Collection<?> services) throws Exception {\n      * @throws Exception is thrown if error occurred\n      * @see #stopService(Object)\n      */\n-    public static boolean suspendService(Service service) throws Exception {\n+    public static boolean suspendService(Object service) throws Exception {\n         if (service instanceof SuspendableService) {\n             SuspendableService ss = (SuspendableService) service;\n             if (!ss.isSuspended()) {\n", 
  "project": "camel", 
  "linesAdd": 15, 
  "jira_id": "8964", 
  "nb_skipped": 4, 
  "commit": "ea8ee025", 
  "nb_failure": 2, 
  "linesRem": 6
}