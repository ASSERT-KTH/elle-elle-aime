{
  "files": 3, 
  "nb_test": 4700, 
  "nb_error": 0, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "org.apache.camel.processor.MessageHistoryCopyExchangeTest"
  ], 
  "patch": "diff --git a/camel-core/src/main/java/org/apache/camel/impl/DefaultExchange.java b/camel-core/src/main/java/org/apache/camel/impl/DefaultExchange.java\nindex b755b70f44..2c4a615645 100644\n--- a/camel-core/src/main/java/org/apache/camel/impl/DefaultExchange.java\n+++ b/camel-core/src/main/java/org/apache/camel/impl/DefaultExchange.java\n@@ -26,6 +26,7 @@\n import org.apache.camel.Exchange;\n import org.apache.camel.ExchangePattern;\n import org.apache.camel.Message;\n+import org.apache.camel.MessageHistory;\n import org.apache.camel.spi.Synchronization;\n import org.apache.camel.spi.UnitOfWork;\n import org.apache.camel.util.ExchangeHelper;\n@@ -95,10 +96,18 @@ public Exchange copy() {\n         return exchange;\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n     private static Map<String, Object> safeCopy(Map<String, Object> properties) {\n         if (properties == null) {\n             return null;\n         }\n+\n+        // safe copy message history using a defensive copy\n+        List<MessageHistory> history = (List<MessageHistory>) properties.remove(Exchange.MESSAGE_HISTORY);\n+        if (history != null) {\n+            properties.put(Exchange.MESSAGE_HISTORY, new ArrayList<MessageHistory>(history));\n+        }\n+\n         return new ConcurrentHashMap<String, Object>(properties);\n     }\n \ndiff --git a/camel-core/src/main/java/org/apache/camel/processor/Splitter.java b/camel-core/src/main/java/org/apache/camel/processor/Splitter.java\nindex 76b5e029c0..a9dd334fd3 100644\n--- a/camel-core/src/main/java/org/apache/camel/processor/Splitter.java\n+++ b/camel-core/src/main/java/org/apache/camel/processor/Splitter.java\n@@ -252,6 +252,8 @@ private static Exchange copyExchangeNoAttachments(Exchange exchange, boolean pre\n         Exchange answer = ExchangeHelper.createCopy(exchange, preserveExchangeId);\n         // we do not want attachments for the splitted sub-messages\n         answer.getIn().setAttachments(null);\n+        // we do not want to copy the message history for splitted sub-messages\n+        answer.getProperties().remove(Exchange.MESSAGE_HISTORY);\n         return answer;\n     }\n }\ndiff --git a/camel-core/src/main/java/org/apache/camel/util/ExchangeHelper.java b/camel-core/src/main/java/org/apache/camel/util/ExchangeHelper.java\nindex b6f04d87b7..bc9943d2eb 100644\n--- a/camel-core/src/main/java/org/apache/camel/util/ExchangeHelper.java\n+++ b/camel-core/src/main/java/org/apache/camel/util/ExchangeHelper.java\n@@ -16,7 +16,9 @@\n  */\n package org.apache.camel.util;\n \n+import java.util.ArrayList;\n import java.util.HashMap;\n+import java.util.List;\n import java.util.Map;\n import java.util.concurrent.ConcurrentHashMap;\n import java.util.concurrent.ExecutionException;\n@@ -32,6 +34,7 @@\n import org.apache.camel.ExchangePattern;\n import org.apache.camel.InvalidPayloadException;\n import org.apache.camel.Message;\n+import org.apache.camel.MessageHistory;\n import org.apache.camel.NoSuchBeanException;\n import org.apache.camel.NoSuchEndpointException;\n import org.apache.camel.NoSuchHeaderException;\n@@ -813,10 +816,18 @@ public static Exchange copyExchangeAndSetCamelContext(Exchange exchange, CamelCo\n         return answer;\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n     private static Map<String, Object> safeCopy(Map<String, Object> properties) {\n         if (properties == null) {\n             return null;\n         }\n+\n+        // safe copy message history using a defensive copy\n+        List<MessageHistory> history = (List<MessageHistory>) properties.remove(Exchange.MESSAGE_HISTORY);\n+        if (history != null) {\n+            properties.put(Exchange.MESSAGE_HISTORY, new ArrayList<MessageHistory>(history));\n+        }\n+\n         return new ConcurrentHashMap<String, Object>(properties);\n     }\n }\n", 
  "project": "camel", 
  "linesAdd": 22, 
  "jira_id": "6723", 
  "nb_skipped": 1, 
  "commit": "b92d6237", 
  "nb_failure": 1, 
  "linesRem": 0
}