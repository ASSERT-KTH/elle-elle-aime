{
    "bug_id": 27,
    "classification": {
        "singleLine": false
    },
    "commit": "7f8a295a",
    "failing_tests": [
        "org.apache.camel.util.DumpModelAsXmlChoiceFilterRouteTest"
    ],
    "files": 2,
    "jira_id": "6593",
    "linesAdd": 12,
    "linesRem": 6,
    "nb_error": 0,
    "nb_failure": 1,
    "nb_skipped": 1,
    "nb_test": 4675,
    "patch": "diff --git a/camel-core/src/main/java/org/apache/camel/model/ExpressionNode.java b/camel-core/src/main/java/org/apache/camel/model/ExpressionNode.java\nindex 41f97cead4..ef64c2d76d 100644\n--- a/camel-core/src/main/java/org/apache/camel/model/ExpressionNode.java\n+++ b/camel-core/src/main/java/org/apache/camel/model/ExpressionNode.java\n@@ -143,5 +143,14 @@ protected void preCreateProcessor() {\n                 expression = clause.getExpressionType();\n             }\n         }\n+\n+        if (expression != null && expression.getExpression() == null) {\n+            // use toString from predicate or expression so we have some information to show in the route model\n+            if (expression.getPredicate() != null) {\n+                expression.setExpression(expression.getPredicate().toString());\n+            } else if (expression.getExpressionValue() != null) {\n+                expression.setExpression(expression.getExpressionValue().toString());\n+            }\n+        }\n     }\n }\ndiff --git a/camel-core/src/main/java/org/apache/camel/model/language/ExpressionDefinition.java b/camel-core/src/main/java/org/apache/camel/model/language/ExpressionDefinition.java\nindex b423afafcb..52b0d1c430 100644\n--- a/camel-core/src/main/java/org/apache/camel/model/language/ExpressionDefinition.java\n+++ b/camel-core/src/main/java/org/apache/camel/model/language/ExpressionDefinition.java\n@@ -243,8 +243,6 @@ public boolean isTrim() {\n      * Returns some descriptive text to describe this node\n      */\n     public String getLabel() {\n-        String language = getExpression();\n-        if (ObjectHelper.isEmpty(language)) {\n         Predicate predicate = getPredicate();\n         if (predicate != null) {\n             return predicate.toString();\n@@ -253,10 +251,9 @@ public String getLabel() {\n         if (expressionValue != null) {\n             return expressionValue.toString();\n         }\n-        } else {\n-            return language;\n-        }\n-        return \"\";\n+\n+        String exp = getExpression();\n+        return exp != null ? exp : \"\";\n     }\n \n     /**\n",
    "project": "camel",
    "buggy_compile_success": false,
    "buggy_test_success": false,
    "fixed_compile_success": false,
    "fixed_test_success": false
}