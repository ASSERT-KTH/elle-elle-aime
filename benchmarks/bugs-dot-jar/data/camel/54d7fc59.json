{
  "files": 3, 
  "nb_test": 5190, 
  "nb_error": 0, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "org.apache.camel.processor.SendExchangePatternOptionTest"
  ], 
  "patch": "diff --git a/camel-core/src/main/java/org/apache/camel/processor/RecipientListProcessor.java b/camel-core/src/main/java/org/apache/camel/processor/RecipientListProcessor.java\nindex 1087da6636..db6af86a58 100644\n--- a/camel-core/src/main/java/org/apache/camel/processor/RecipientListProcessor.java\n+++ b/camel-core/src/main/java/org/apache/camel/processor/RecipientListProcessor.java\n@@ -17,12 +17,11 @@\n package org.apache.camel.processor;\n \n import java.io.UnsupportedEncodingException;\n-import java.net.URI;\n+import java.net.MalformedURLException;\n import java.net.URISyntaxException;\n import java.util.ArrayList;\n import java.util.Iterator;\n import java.util.List;\n-import java.util.Map;\n import java.util.concurrent.ExecutorService;\n \n import org.apache.camel.CamelContext;\n@@ -34,6 +33,7 @@\n import org.apache.camel.impl.ProducerCache;\n import org.apache.camel.processor.aggregate.AggregationStrategy;\n import org.apache.camel.spi.RouteContext;\n+import org.apache.camel.util.EndpointHelper;\n import org.apache.camel.util.ExchangeHelper;\n import org.apache.camel.util.MessageHelper;\n import org.apache.camel.util.ServiceHelper;\n@@ -191,7 +191,7 @@ public void setIgnoreInvalidEndpoints(boolean ignoreInvalidEndpoints) {\n             ExchangePattern pattern;\n             try {\n                 endpoint = resolveEndpoint(exchange, recipient);\n-                pattern = resolveExchangePattern(exchange, recipient);\n+                pattern = resolveExchangePattern(recipient);\n                 producer = producerCache.acquireProducer(endpoint);\n             } catch (Exception e) {\n                 if (isIgnoreInvalidEndpoints()) {\n@@ -254,18 +254,13 @@ protected static Endpoint resolveEndpoint(Exchange exchange, Object recipient) {\n         return ExchangeHelper.resolveEndpoint(exchange, recipient);\n     }\n \n-    protected ExchangePattern resolveExchangePattern(Exchange exchange, Object recipient) throws UnsupportedEncodingException, URISyntaxException {\n+    protected ExchangePattern resolveExchangePattern(Object recipient) throws UnsupportedEncodingException, URISyntaxException, MalformedURLException {\n         // trim strings as end users might have added spaces between separators\n         if (recipient instanceof String) {\n             String s = ((String) recipient).trim();\n             // see if exchangePattern is a parameter in the url\n             s = URISupport.normalizeUri(s);\n-            URI url = new URI(s);\n-            Map<String, Object> parameters = URISupport.parseParameters(url);\n-            String pattern = (String) parameters.get(\"exchangePattern\");\n-            if (pattern != null) {\n-                return ExchangePattern.asEnum(pattern);\n-            }\n+            return EndpointHelper.resolveExchangePatternFromUrl(s);\n         }\n         return null;\n     }\ndiff --git a/camel-core/src/main/java/org/apache/camel/processor/SendProcessor.java b/camel-core/src/main/java/org/apache/camel/processor/SendProcessor.java\nindex d8e8803f65..efd6a6043c 100644\n--- a/camel-core/src/main/java/org/apache/camel/processor/SendProcessor.java\n+++ b/camel-core/src/main/java/org/apache/camel/processor/SendProcessor.java\n@@ -16,6 +16,7 @@\n  */\n package org.apache.camel.processor;\n \n+import java.net.URISyntaxException;\n import java.util.HashMap;\n \n import org.apache.camel.AsyncCallback;\n@@ -33,6 +34,7 @@\n import org.apache.camel.support.ServiceSupport;\n import org.apache.camel.util.AsyncProcessorConverterHelper;\n import org.apache.camel.util.AsyncProcessorHelper;\n+import org.apache.camel.util.EndpointHelper;\n import org.apache.camel.util.EventHelper;\n import org.apache.camel.util.ObjectHelper;\n import org.apache.camel.util.ServiceHelper;\n@@ -53,6 +55,7 @@\n     protected ProducerCache producerCache;\n     protected AsyncProcessor producer;\n     protected Endpoint destination;\n+    protected ExchangePattern destinationExchangePattern;\n     protected final boolean unhandleException;\n \n     public SendProcessor(Endpoint destination) {\n@@ -69,6 +72,12 @@ public SendProcessor(Endpoint destination, ExchangePattern pattern, boolean unha\n         this.camelContext = destination.getCamelContext();\n         this.pattern = pattern;\n         this.unhandleException = unhandleException;\n+        try {\n+            this.destinationExchangePattern = null;\n+            this.destinationExchangePattern = EndpointHelper.resolveExchangePatternFromUrl(destination.getEndpointUri());\n+        } catch (URISyntaxException e) {\n+            throw ObjectHelper.wrapRuntimeCamelException(e);\n+        }\n         ObjectHelper.notNull(this.camelContext, \"camelContext\");\n     }\n \n@@ -133,11 +142,9 @@ public void done(boolean doneSync) {\n                     }\n                 });\n             } catch (Throwable throwable) {\n-                if (exchange != null) {\n                 exchange.setException(throwable);\n                 checkException(exchange);\n-                }\n-\n+                callback.done(sync);\n             }\n \n             return sync;\n@@ -180,7 +187,10 @@ public ExchangePattern getPattern() {\n     }\n \n     protected Exchange configureExchange(Exchange exchange, ExchangePattern pattern) {\n-        if (pattern != null) {\n+        // destination exchange pattern overrides pattern\n+        if (destinationExchangePattern != null) {\n+            exchange.setPattern(destinationExchangePattern);\n+        } else if (pattern != null) {\n             exchange.setPattern(pattern);\n         }\n         // set property which endpoint we send to\ndiff --git a/camel-core/src/main/java/org/apache/camel/util/EndpointHelper.java b/camel-core/src/main/java/org/apache/camel/util/EndpointHelper.java\nindex 9df3ca2060..18181b33bb 100644\n--- a/camel-core/src/main/java/org/apache/camel/util/EndpointHelper.java\n+++ b/camel-core/src/main/java/org/apache/camel/util/EndpointHelper.java\n@@ -16,6 +16,8 @@\n  */\n package org.apache.camel.util;\n \n+import java.net.URI;\n+import java.net.URISyntaxException;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n@@ -29,6 +31,7 @@\n import org.apache.camel.DelegateEndpoint;\n import org.apache.camel.Endpoint;\n import org.apache.camel.Exchange;\n+import org.apache.camel.ExchangePattern;\n import org.apache.camel.Message;\n import org.apache.camel.PollingConsumer;\n import org.apache.camel.Processor;\n@@ -487,4 +490,21 @@ public static String browseRangeMessagesAsXml(BrowsableEndpoint endpoint, Intege\n         return sb.toString();\n     }\n \n+    /**\n+     * Attempts to resolve if the url has an <tt>exchangePattern</tt> option configured\n+     *\n+     * @param url the url\n+     * @return the exchange pattern, or <tt>null</tt> if the url has no <tt>exchangePattern</tt> configured.\n+     * @throws URISyntaxException is thrown if uri is invalid\n+     */\n+    public static ExchangePattern resolveExchangePatternFromUrl(String url) throws URISyntaxException {\n+        URI uri = new URI(url);\n+        Map<String, Object> parameters = URISupport.parseParameters(uri);\n+        String pattern = (String) parameters.get(\"exchangePattern\");\n+        if (pattern != null) {\n+            return ExchangePattern.asEnum(pattern);\n+        }\n+        return null;\n+    }\n+\n }\n", 
  "project": "camel", 
  "linesAdd": 39, 
  "jira_id": "8227", 
  "nb_skipped": 4, 
  "commit": "54d7fc59", 
  "nb_failure": 1, 
  "linesRem": 14
}