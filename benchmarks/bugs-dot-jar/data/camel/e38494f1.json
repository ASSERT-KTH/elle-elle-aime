{
  "files": 2, 
  "nb_test": 3836, 
  "nb_error": 1, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "org.apache.camel.builder.xml.XPathTest", 
    "org.apache.camel.processor.SplitterThrowExceptionFromExpressionTest"
  ], 
  "patch": "diff --git a/camel-core/src/main/java/org/apache/camel/processor/MulticastProcessor.java b/camel-core/src/main/java/org/apache/camel/processor/MulticastProcessor.java\nindex 8727befba1..f9b361e8e0 100644\n--- a/camel-core/src/main/java/org/apache/camel/processor/MulticastProcessor.java\n+++ b/camel-core/src/main/java/org/apache/camel/processor/MulticastProcessor.java\n@@ -797,6 +797,12 @@ protected Integer getExchangeIndex(Exchange exchange) {\n             result.add(createProcessorExchangePair(index++, processor, copy, routeContext));\n         }\n \n+        if (exchange.getException() != null) {\n+            // force any exceptions occurred during creation of exchange paris to be thrown\n+            // before returning the answer;\n+            throw exchange.getException();\n+        }\n+\n         return result;\n     }\n \ndiff --git a/camel-core/src/main/java/org/apache/camel/processor/Splitter.java b/camel-core/src/main/java/org/apache/camel/processor/Splitter.java\nindex bb7783aaf3..ce146579a7 100644\n--- a/camel-core/src/main/java/org/apache/camel/processor/Splitter.java\n+++ b/camel-core/src/main/java/org/apache/camel/processor/Splitter.java\n@@ -98,14 +98,26 @@ public boolean process(Exchange exchange, final AsyncCallback callback) {\n     }\n \n     @Override\n-    protected Iterable<ProcessorExchangePair> createProcessorExchangePairs(Exchange exchange) {\n+    protected Iterable<ProcessorExchangePair> createProcessorExchangePairs(Exchange exchange) throws Exception {\n         Object value = expression.evaluate(exchange, Object.class);\n+        if (exchange.getException() != null) {\n+            // force any exceptions occurred during evaluation to be thrown\n+            throw exchange.getException();\n+        }\n \n+        Iterable<ProcessorExchangePair> answer;\n         if (isStreaming()) {\n-            return createProcessorExchangePairsIterable(exchange, value);\n+            answer = createProcessorExchangePairsIterable(exchange, value);\n         } else {\n-            return createProcessorExchangePairsList(exchange, value);\n+            answer = createProcessorExchangePairsList(exchange, value);\n+        }\n+        if (exchange.getException() != null) {\n+            // force any exceptions occurred during creation of exchange paris to be thrown\n+            // before returning the answer;\n+            throw exchange.getException();\n         }\n+\n+        return answer;\n     }\n \n     @SuppressWarnings(\"unchecked\")\n", 
  "project": "camel", 
  "linesAdd": 21, 
  "jira_id": "4482", 
  "nb_skipped": 0, 
  "commit": "e38494f1", 
  "nb_failure": 1, 
  "linesRem": 3
}