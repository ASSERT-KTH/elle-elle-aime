{
  "files": 1, 
  "nb_test": 4848, 
  "nb_error": 0, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "org.apache.camel.component.validator.ValidatorRouteTest", 
    "org.apache.camel.management.ManagedThrottlerTest"
  ], 
  "patch": "diff --git a/camel-core/src/main/java/org/apache/camel/processor/validation/ValidatingProcessor.java b/camel-core/src/main/java/org/apache/camel/processor/validation/ValidatingProcessor.java\nindex bcbc6710f3..2d9fa8e163 100644\n--- a/camel-core/src/main/java/org/apache/camel/processor/validation/ValidatingProcessor.java\n+++ b/camel-core/src/main/java/org/apache/camel/processor/validation/ValidatingProcessor.java\n@@ -62,9 +64,9 @@\n     private static final Logger LOG = LoggerFactory.getLogger(ValidatingProcessor.class);\n     private XmlConverter converter = new XmlConverter();\n     private String schemaLanguage = XMLConstants.W3C_XML_SCHEMA_NS_URI;\n-    private Schema schema;\n+    private volatile Schema schema;\n     private Source schemaSource;\n-    private SchemaFactory schemaFactory;\n+    private volatile SchemaFactory schemaFactory;\n     private URL schemaUrl;\n     private File schemaFile;\n     private byte[] schemaAsByteArray;\n@@ -189,9 +191,13 @@ public void loadSchema() throws Exception {\n     // -----------------------------------------------------------------------\n \n     public Schema getSchema() throws IOException, SAXException {\n+        if (schema == null) {\n+            synchronized (this) {\n                 if (schema == null) {\n                     schema = createSchema();\n                 }\n+            }\n+        }\n         return schema;\n     }\n \n@@ -243,9 +249,13 @@ public void setSchemaAsByteArray(byte[] schemaAsByteArray) {\n     }\n \n     public SchemaFactory getSchemaFactory() {\n+        if (schemaFactory == null) {\n+            synchronized (this) {\n                 if (schemaFactory == null) {\n                     schemaFactory = createSchemaFactory();\n                 }\n+            }\n+        }\n         return schemaFactory;\n     }\n \n@@ -336,22 +346,30 @@ protected Schema createSchema() throws SAXException, IOException {\n \n         URL url = getSchemaUrl();\n         if (url != null) {\n+            synchronized (this) {\n                 return factory.newSchema(url);\n             }\n+        }\n \n         File file = getSchemaFile();\n         if (file != null) {\n+            synchronized (this) {\n                 return factory.newSchema(file);\n             }\n+        }\n \n         byte[] bytes = getSchemaAsByteArray();\n         if (bytes != null) {\n+            synchronized (this) {\n                 return factory.newSchema(new StreamSource(new ByteArrayInputStream(schemaAsByteArray)));\n             }\n+        }\n \n         Source source = getSchemaSource();\n+        synchronized (this) {\n             return factory.newSchema(source);\n         }\n+    }\n \n     /**\n      * Checks whether we need an {@link InputStream} to access the message body or header.\n", 
  "project": "camel", 
  "linesAdd": 18, 
  "jira_id": "7239", 
  "nb_skipped": 3, 
  "commit": "ae419224", 
  "nb_failure": 2, 
  "linesRem": 2
}