{
  "files": 1, 
  "nb_test": 4735, 
  "nb_error": 0, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "org.apache.camel.processor.CBRPredicateBeanThrowExceptionTest", 
    "org.apache.camel.component.vm.VmMultipleConsumersRemoteRouteTest"
  ], 
  "patch": "diff --git a/camel-core/src/main/java/org/apache/camel/processor/ChoiceProcessor.java b/camel-core/src/main/java/org/apache/camel/processor/ChoiceProcessor.java\nindex 0310c9a02d..44f4b109ca 100644\n--- a/camel-core/src/main/java/org/apache/camel/processor/ChoiceProcessor.java\n+++ b/camel-core/src/main/java/org/apache/camel/processor/ChoiceProcessor.java\n@@ -30,6 +30,10 @@\n import org.apache.camel.util.AsyncProcessorConverterHelper;\n import org.apache.camel.util.AsyncProcessorHelper;\n import org.apache.camel.util.ServiceHelper;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import static org.apache.camel.processor.PipelineHelper.continueProcessing;\n \n /**\n  * Implements a Choice structure where one or more predicates are used which if\n@@ -39,6 +43,7 @@\n  * @version \n  */\n public class ChoiceProcessor extends ServiceSupport implements AsyncProcessor, Navigate<Processor>, Traceable {\n+    private static final Logger LOG = LoggerFactory.getLogger(ChoiceProcessor.class);\n     private final List<Processor> filters;\n     private final Processor otherwise;\n \n@@ -84,13 +89,16 @@ public void done(boolean doneSync) {\n                 try {\n                     matches = filter.getPredicate().matches(exchange);\n                     exchange.setProperty(Exchange.FILTER_MATCHED, matches);\n+                    // as we have pre evaluated the predicate then use its processor directly when routing\n+                    processor = filter.getProcessor();\n                 } catch (Throwable e) {\n                     exchange.setException(e);\n-                    choiceCallback.done(true);\n-                    return true;\n                 }\n-                // as we have pre evaluated the predicate then use its processor directly when routing\n-                processor = filter.getProcessor();\n+            }\n+\n+            // check for error if so we should break out\n+            if (!continueProcessing(exchange, \"so breaking out of choice\", LOG)) {\n+                break;\n             }\n \n             // if we did not match then continue to next filter\n", 
  "project": "camel", 
  "linesAdd": 12, 
  "jira_id": "6889", 
  "nb_skipped": 1, 
  "commit": "cd40b712", 
  "nb_failure": 2, 
  "linesRem": 4
}